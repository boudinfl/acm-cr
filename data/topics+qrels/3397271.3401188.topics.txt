<top>
  <num> Number: 3397271.3401188.1
  <title> While much of the work in information retrieval has been centered around ranking, there is growing interest in methods for ranked list truncation - the problem of determining the appropriate cutoff k of candidate results [1, 9].
</top>

<top>
  <num> Number: 3397271.3401188.2
  <title> The fundamental importance of this problem has led to development of methods that are automatically able to learn k in a data-driven fashion [9]. The focus of this paper is to design more effective models for accurate and dynamic truncation of ranked lists.
</top>

<top>
  <num> Number: 3397271.3401188.3
  <title> While BiCut outperforms non-neural methods [1], we argue it has several drawbacks.
</top>

<top>
  <num> Number: 3397271.3401188.4
  <title> Across the rich history of information retrieval research, there has been extensive work focused on modeling score distributions of IR systems. Early work in this area primarily focused on fitting parametric probability distributions to score distributions [1, 10].
</top>

<top>
  <num> Number: 3397271.3401188.5
  <title> There has been considerable recent interest in adopting machine learning based models to optimize and improve the ranked list truncation problem. For instance, cascade-style IR systems [17] seek to achieve a balance between efficiency and effectiveness. Notably, [5] investigates a number of machine learning approaches for learning dynamic cutoffs within cascade-style ranking systems.
</top>

<top>
  <num> Number: 3397271.3401188.6
  <title> Another recent study investigated how to leverage bidirectional Long Short-Term Memory (LSTM) models to identify the best position to truncate a given list [9]. This model, BiCut, can be considered the present state-of-the-art approach.
</top>






