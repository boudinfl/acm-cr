<doc>
	<doi>10.1145/3336191.3371776</doi>
	<title>Consistency-Aware Recommendation for User-Generated Item List Continuation</title>
	<abstract>User-generated item lists are popular on many platforms. Examples include video-based playlists on YouTube, image-based lists (or "boards") on Pinterest, book-based lists on Goodreads, and answer-based lists on question-answer forums like Zhihu. As users create these lists, a common challenge is in identifying what items to curate next. Some lists are organized around particular genres or topics, while others are seemingly incoherent, reflecting individual preferences for what items belong together. Furthermore, this heterogeneity in item consistency may vary from platform to platform, and from sub-community to sub-community. Hence, this paper proposes a generalizable approach for user-generated item list continuation. Complementary to methods that exploit specific content patterns (e.g., as in song-based playlists that rely on audio features), the proposed approach models the consistency of item lists based on human curation patterns, and so can be deployed across a wide range of varying item types (e.g., videos, images, books). A key contribution is in intelligently combining two preference models via a novel consistency-aware gating network -- a general user preference model that captures a user's overall interests, and a current preference priority model that captures a user's current (as of the most recent item) interests. In this way, the proposed consistency-aware recommender can dynamically adapt as user preferences evolve. Evaluation over four datasets (of songs, books, and answers) confirms these observations and demonstrates the effectiveness of the proposed model versus state-of-the-art alternatives. Further, all code and data are available at https://github.com/heyunh2015/ListContinuation_WSDM2020.</abstract>
	<contexts>
		<context id="01" section="introduction">
			<s>Human curation is a widely used feature in platforms like Spotify, Pinterest, YouTube, and Goodreads.</s>
			<s>Users can curate items like songs, images, videos and books to form lists that provide a unique perspective into how items can be grouped together.</s>
			<s>For example, Figure 1 shows two book lists on the book sharing platform Goodreads; one is organized around a genre (fantasy) while the other collects a personal list of favorites spanning genres.</s>
			<s>Since correlated items can be explored and consumed together, these item lists directly power user engagement.</s>
			<s cites="38,10">For example, more than 50% of Spotify users listen to playlists, accounting for more than 1 billion plays per week [38]; and Pinterest users have curated more than 3 billion pins to about 4 billion boards [10].</s>
		</context>
		<context id="02" section="introduction">
			<s>In these platforms, user-generated item lists are manually created, curated, and managed by users.</s>
			<s>Typically, users must first identify candidate items, determine if they are a good fit for a list, add them to a list, and then potentially provide ongoing updates to the list (e.g., by adding or deleting items over time).</s>
			<s>To accelerate this process and assist users to explore more related items for their lists, we study the important yet challenging problem of user-generated item list continuation.</s>
			<s>That is, how can we recommend items that are related to the list and fit the user's preferences?</s>
			<s cites="34">Compared with traditional item-based recommendation [34], list continuation faces complexities, since the length of lists varies from several items to even thousands of items and the user preference on items may dynamically evolve as a list develops.</s>
			<s>Moreover, the individual preference of how items are grouped together also varies for each user and across different platforms.</s>
			<s>Facing these challenges, we propose a consistency-aware recommender for user-generated item list continuation that is motivated by three key observations.</s>
		</context>
		<context id="03" section="introduction">
			<s>First, we observe that some lists are strongly consistent while others are only weakly consistent.</s>
			<s cites="1,4,6,12,13,21,29,30,31,33,37">Traditional song-based playlist continuation usually aims to generate strongly consistent lists, where each new song naturally fits with the previous ones [1, 4, 6, 12, 13, 21, 29– 31, 33, 37].</s>
			<s cites="33">A typical example is in [33], which generates a playlist with songs that are similar to the seed songs provided by the user.</s>
			<s>Indeed, some user-generated item lists may be organized around a specific theme, genre, or mood.</s>
			<s>However, some lists are organized by more personalized patterns and are seemingly inconsistent.</s>
			<s>To illustrate, List A in Figure 1(a) has strong consistency between recent books and previous books.</s>
			<s>The books are from either the Harry Potter series or the Twilight series, organized around genres like "Fantasy".</s>
			<s>List B in Figure 1(b) is only weakly consistent with a mystery book Binds That Tie following two books about dogs.</s>
			<s>Indeed, we find in Figure 2 that list consistency varies greatly both within a single platform and across different platforms.</s>
			<s>As a result, we require new methods that can dynamically adapt to this heterogeneity of list consistency.</s>
		</context>
		<context id="04" section="introduction">
			<s>Third, we observe that the definition of what makes a list consistent should arise from community norms rather than be imposed top-down.</s>
			<s cites="6,30">Prior work in song-based playlists has found that neither audio signal-based similarity nor social tag-based similarity accurately reflect the consistency of manually constructed playlists [6, 30].</s>
			<s>Our example so far in Figure 1 has highlighted how books in a single list may be drawn from different (seemingly inconsistent) genres.</s>
			<s>However, the consistency of items should depend on how users in the community perceive those items; so, if many users curate two items together, then those items should be considered consistent regardless of their superficial similarity.</s>
			<s>Hence, item list continuation methods should seek to model consistency based on the curation patterns arising from the community itself.</s>
		</context>
		<context id="05" section="related work">
			<s>Considerable prior research has focused on automatic song-based playlist generation and continuation, aligned along three branches.</s>
			<s>The first branch focuses on generative models for estimating the likelihood of a new playlist by treating training playlists as a set of song sequences.</s>
			<s cites="30,31,6" anonymised="true">For example, [30, 31] apply a first-order Markov Chain for modeling playlists, which is improved by [6] via introducing metric embeddings.</s>
			<s>The second branch mainly relies on song-based audio features (e.g., Mel-frequency cepstral coefficients) to generate new playlists.</s>
			<s cites="12,29" anonymised="true">Examples include [12] and [29], where [29] train classifiers using audio-based features to determine if a sequence of songs can form a playlist.</s>
			<s>The third branch is most similar to our work, often applying information retrieval or recommendation methods to predict (or continue) the next N items.</s>
			<s cites="13,21,33,40,41,42">These approaches often are enhanced by content-based methods [13, 21, 33, 40–42].</s>
			<s cites="21" anonymised="true">A typical example by [21] uses collaborative filtering and incorporates content features like social tags from Last.fm and popularity of songs.</s>
		</context>
		<context id="06" section="related work">
			<s>There are two key differences between our work and traditional song-based playlist generation.</s>
			<s>First, we focus on not only song-based lists but propose a general framework that can be applied to other user-generated item lists, like book-based (Goodreads book lists), video-based (YouTube playlists), image-based (Pinterest boards) and answer-based (Zhihu collections) lists.</s>
			<s>Like song-based playlists, each collection of these item lists also provides a unique resource where correlated items can be easily explored and consumed together, directly empowering user engagement.</s>
			<s>Therefore, automatic generation and continuation for these item lists should be equally important as song-based playlists.</s>
			<s cites="6,12,13,21,29,30,31,33">Second, most traditional playlist continuation work assumes lists are always consistent [6, 12, 13, 21, 29–31, 33].</s>
			<s cites="33,6,30,31,21">Except for [33] introduced in the introduction, examples include [6, 30, 31] that apply language models to generate coherent playlists and [21] that recommends a set of songs whose tempo distribution is as similar as possible to the current playlist.</s>
			<s>However, we observe that the consistency varies greatly for lists both within and across different platforms, meaning that list continuation methods should dynamically adapt to these scenarios.</s>
		</context>
		<context id="07" section="related work">
			<s>Recently, user-generated item lists have received more and more interest.</s>
			<s cites="43" anonymised="true">[43] study the motivations of human curation to reveal the social values of user-generated item lists.</s>
			<s cites="11" anonymised="true">[11] study the characteristics of item lists and claim there are two kinds of lists: for personal information management and for public expression.</s>
			<s cites="27" anonymised="true">[27] analyze the growth of image collections on Pinterest.</s>
			<s cites="25,10" anonymised="true">[25] and [10] distill user preference from Pinterest image-based lists to enhance individual image recommendation.</s>
			<s>Another interesting problem is to recommend existing item lists to users.</s>
			<s cites="17" anonymised="true">[17] propose a hierarchical self-attentive model for recommending user-generated item lists (e.g., book lists and playlists) to right users.</s>
			<s cites="26,3">Besides, the List Recommending Model in [26] is proposed for recommending book lists and the Embedding Factorization Model in [3] is for recommending song playlists.</s>
		</context>
		<context id="08" section="related work">
			<s>Recently, neural networks have been widely applied in recommendation.</s>
			<s cites="16" anonymised="true">[16] apply multilayer perceptron and generalized matrix factorization for implicit top-k recommendation.</s>
			<s cites="9" anonymised="true">[9] apply memory networks for recommendation.</s>
			<s cites="18,36" anonymised="true">[18] propose a GRU-based model for session-based recommendation and [36] propose a CNN-based model for sequential recommendation.</s>
			<s>Attention networks are often used for weighted-summing elements in a model.</s>
			<s cites="5">[5] propose an attentive collaborative filtering framework, where each item is segmented into component-level elements, and attention scores are learned for these components for obtaining a better representation of items.</s>
			<s cites="2,19,22">Attention networks are also applied in group recommendation [2] and sequential recommendation [19, 22].</s>
		</context>
	</contexts>
	<references>
		<reference id="1">10.1145/2652481</reference>
		<reference id="2">10.1145/3209978.3209998</reference>
		<reference id="3">10.1145/3077136.3080779</reference>
		<reference id="4">10.1145/3240323.3240342</reference>
		<reference id="5">10.1145/3077136.3080797</reference>
		<reference id="6">10.1145/2339530.2339643</reference>
		<reference id="7">10.3115/v1/W14-4012</reference>
		<reference id="8">10.1145/2959100.2959190</reference>
		<reference id="9">10.1145/3209978.3209991</reference>
		<reference id="10">10.1145/3209978.3209991</reference>
		<reference id="11">10.1145/2317956.2317988</reference>
		<reference id="12">http://archives.ismir.net/ismir2008/paper/000143.pdf</reference>
		<reference id="13">10.1145/2365952.2365979</reference>
		<reference id="14">10.1145/3109859.3109882</reference>
		<reference id="15">10.1109/TKDE.2018.2831682</reference>
		<reference id="16">10.1145/3038912.3052569</reference>
		<reference id="17">10.1145/3357384.3358030</reference>
		<reference id="18">https://arxiv.org/abs/1511.06939</reference>
		<reference id="19">10.1145/3240508.3240609</reference>
		<reference id="20">10.1162/neco.1991.3.1.79</reference>
		<reference id="21">10.1145/2792838.2800182</reference>
		<reference id="22">10.1109/ICDM.2018.00035</reference>
		<reference id="23">https://arxiv.org/abs/1412.6980</reference>
		<reference id="24">10.1109/MC.2009.263</reference>
		<reference id="25">10.1145/2872518.2889350</reference>
		<reference id="26">10.1145/2645710.2645750</reference>
		<reference id="27">10.1145/3041021.3054189</reference>
		<reference id="28">10.1145/3219819.3220007</reference>
		<reference id="29">https://ismir2009.ismir.net/proceedings/OS4-2.pdf</reference>
		<reference id="30">https://archives.ismir.net/ismir2011/paper/000096.pdf</reference>
		<reference id="31">http://ismir2012.ismir.net/event/papers/343_ISMIR_2012.pdf</reference>
		<reference id="32">https://arxiv.org/abs/1310.4546</reference>
		<reference id="33">10.5555/2980539.2980724</reference>
		<reference id="34">10.5555/1795114.1795167</reference>
		<reference id="35">10.1145/371920.372071</reference>
		<reference id="36">10.1145/3159652.3159656</reference>
		<reference id="37">10.1145/3331184.3331234</reference>
		<reference id="38">https://www.buzzfeed.com/reggieugwu/the-unsung-heroesof-the-music-streaming-boom</reference>
		<reference id="39">10.5555/3295222.3295349</reference>
		<reference id="40">10.1145/3267471.3267480</reference>
		<reference id="41">10.1145/3344257</reference>
		<reference id="42">10.1145/3267471.3267479</reference>
		<reference id="43">https://ojs.aaai.org/index.php/ICWSM/article/view/14441/14290</reference>
		<reference id="44">https://ojs.aaai.org/index.php/AAAI/article/view/11618/11477</reference>
		<reference id="45">10.1145/3159652.3159671</reference>
		<reference id="46">10.1145/1060745.1060754</reference>
	</references>
</doc>