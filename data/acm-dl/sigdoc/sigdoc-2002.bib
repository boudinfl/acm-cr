@inproceedings{10.1145/584955.584956,
author = {Albers, Michael J.},
title = {Design of Complex Information},
year = {2002},
isbn = {1581135432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/584955.584956},
doi = {10.1145/584955.584956},
abstract = {This paper addresses the issues surrounding analysis and design which supports developing web-based information for use in situations which require supporting multiple levels of audience knowledge and ability. Firmly focused on communicating information, it addresses the analysis and design of information content requirements for systems that assemble customized information; a communication possibility that has only recently become possible on a practical scale. It develops a five element model (situation, user, user goals, information needs, system). It builds an argument stressing the need to analyze and design for user goals and information needs within the situational context in order to maximize communication with the user.},
booktitle = {Proceedings of the 20th Annual International Conference on Computer Documentation},
pages = {1–9},
numpages = {9},
keywords = {information design, complex information, documentation},
location = {Toronto, Ontario, Canada},
series = {SIGDOC '02}
}

@inproceedings{10.1145/584955.584957,
author = {Baecker, Ron},
title = {Showing Instead of Telling},
year = {2002},
isbn = {1581135432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/584955.584957},
doi = {10.1145/584955.584957},
abstract = {We propose the use of dynamic visual representations to augment traditional static text as documentation. In other words, we suggest using live demonstrations or moving pictures to show people how to do things, and not just using written or spoken words to tell them what to do. We present and illustrate examples of five methods and technologies for creating such dynamic documentation, and summarize what is known about their effectiveness.},
booktitle = {Proceedings of the 20th Annual International Conference on Computer Documentation},
pages = {10–16},
numpages = {7},
keywords = {screen linking, animation, animated icons, movies, digital video, streaming, screen capture, software visualization},
location = {Toronto, Ontario, Canada},
series = {SIGDOC '02}
}

@inproceedings{10.1145/584955.584958,
author = {Carpenter, Susan G.},
title = {Implementing DITA XML in a Production Environment},
year = {2002},
isbn = {1581135432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/584955.584958},
doi = {10.1145/584955.584958},
abstract = {This paper describes one information development team's experience with implementing a prototype XML vocabulary in a production environment. This implementation included the migration of pre-existing content, the writing of XSLT and Perl scripts to direct migration and production, and the training of team members.},
booktitle = {Proceedings of the 20th Annual International Conference on Computer Documentation},
pages = {17–19},
numpages = {3},
keywords = {DITA, XML, XSLT},
location = {Toronto, Ontario, Canada},
series = {SIGDOC '02}
}

@inproceedings{10.1145/584955.584959,
author = {Clark, Dave},
title = {Rhetoric of Present Single-Sourcing Methodologies},
year = {2002},
isbn = {1581135432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/584955.584959},
doi = {10.1145/584955.584959},
abstract = {In this paper, I detail what Bill Hart-Davidson describes as the "anxiety" that many technical communicators have about implementations of single source documentation. Specifically, I briefly explore what I see as some of the key potential rhetorical problems with single sourcing, in part by drawing on real-world examples gathered from conversations with and shadowing of technical communicators in their workplaces. I address the following potential objections that we need to handle in pragmatic and/or theoretical terms in order to claim for ourselves the kind of theoretical approach that will best suit our professional goals as well as those of our user populations:Single Sourcing Can Privilege Organizational Needs Over Enduser NeedsSingle Sourcing Can Limit Perceptions and Potential of Technical CommunicatorsSingle Sourcing Can Contribute to Under-Theorizing.},
booktitle = {Proceedings of the 20th Annual International Conference on Computer Documentation},
pages = {20–25},
numpages = {6},
keywords = {single source, theory, documentation, text reuse},
location = {Toronto, Ontario, Canada},
series = {SIGDOC '02}
}

@inproceedings{10.1145/584955.584960,
author = {Dicks, R. Stanley},
title = {Mis-Usability: On the Uses and Misuses of Usability Testing},
year = {2002},
isbn = {1581135432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/584955.584960},
doi = {10.1145/584955.584960},
abstract = {Usability has become so popular that its value is being threatened by misuse of the term and by misunderstandings about important distinctions between usability studies and empirical usability testing, between usability and verification tests, between ease of use and usefulness, and concerning how we interpret statistics. This paper examines these problems and encourages academicians and practitioners to work toward mitigating them.},
booktitle = {Proceedings of the 20th Annual International Conference on Computer Documentation},
pages = {26–30},
numpages = {5},
keywords = {usability, documentation},
location = {Toronto, Ontario, Canada},
series = {SIGDOC '02}
}

@inproceedings{10.1145/584955.584961,
author = {Faber, Brenton D.},
title = {Educational Models and Open Source: Resisting the Proprietary University},
year = {2002},
isbn = {1581135432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/584955.584961},
doi = {10.1145/584955.584961},
abstract = {This paper presents an educational model derived from open source methods for computer programming. The article places this search for an alternative model within a framework of proprietary educational practices that are driven by a need for efficiency and rationalization. As an alternative model, the paper suggests that an open source derived educational process would emphasize collaborative problem based learning, working through drafts, risk taking, mentoring, user testing, releasing early and often, developing in collaboration with users, and rewarding and building from failure.At the same time, the paper notes that such a system would have much in common with existing theories of project-based or activity-based learning and with traditional methods of research and publication in scientific endeavors. However, the paper also argues that such a method is different from the open-course or open-curriculum projects recently publicized by several well-known universities as these practices appear to emphasize derived content rather than an open representation of process, or how the content was developed.Collaborative, problem-based learning provides constructive approaches for building corporate and community partnerships on university campuses. At the same time, the model teaches students about collaborative work practices, working as part of a larger community, and the nature of collaborative knowledge building. As such, the model reconnects knowledge creation to research communities and to communities of users and it complicates the belief that sustainable, useful innovation can occur within proprietary systems.},
booktitle = {Proceedings of the 20th Annual International Conference on Computer Documentation},
pages = {31–38},
numpages = {8},
keywords = {open source software, collaborative design, educational models},
location = {Toronto, Ontario, Canada},
series = {SIGDOC '02}
}

@inproceedings{10.1145/584955.584962,
author = {Gattis, Lyn F.},
title = {Planning and Information Foraging Theories and Their Value to the Novice Technical Communicator},
year = {2002},
isbn = {1581135432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/584955.584962},
doi = {10.1145/584955.584962},
abstract = {Two complementary cognitive theories help to explain how novice technical communicators learn effective search methods: information foraging theory, a model of information-seeking behavior that combines human-computer interaction with anthropological constructs; and strategic planning theory, a communication model of how humans plan and achieve social goals. The paper includes an extended example of how a new technical communicator might learn to use both models on the job.},
booktitle = {Proceedings of the 20th Annual International Conference on Computer Documentation},
pages = {39–43},
numpages = {5},
keywords = {information foraging theory, strategic planning theory, communication model, human behavioral ecology, technical communication, cognitive theory},
location = {Toronto, Ontario, Canada},
series = {SIGDOC '02}
}

@inproceedings{10.1145/584955.584963,
author = {Graham, Michelle and Chignell, Mark and Takeshita, Harumi},
title = {Design of Documentation for Handheld Ergonomics: Presenting Clinical Evidence at the Point of Care},
year = {2002},
isbn = {1581135432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/584955.584963},
doi = {10.1145/584955.584963},
abstract = {Medical doctors require high quality clinical evidence at the point of care in order to support their decision-making. Presentation of clinical evidence on handheld devices, and in a timely fashion, requires an integrated approach to documentation and ergonomic design. This paper reports on results from The Bringing Evidence to the Point of Care Project at the University of Toronto, concerning the display of quantitative data as part of clinical evidence. After introducing the problem and some of the relevant background literature, we indicate some prototype designs for presenting quantitative information on a handheld device, as graphs or tables. We then report on an initial usability study that compares the different prototypes. The results indicate that the doctors preferred statistical information to be presented as tables on the handheld device used in this study (in preference to lists or graphs).},
booktitle = {Proceedings of the 20th Annual International Conference on Computer Documentation},
pages = {44–48},
numpages = {5},
keywords = {tables, graphs, lists, medical documentation, interface design, handheld computers, display format},
location = {Toronto, Ontario, Canada},
series = {SIGDOC '02}
}

@inproceedings{10.1145/584955.584964,
author = {Halsted, Kari L. and Roberts, James H. (Jamie)},
title = {Eclipse Help System: An Open Source User Assistance Offering},
year = {2002},
isbn = {1581135432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/584955.584964},
doi = {10.1145/584955.584964},
abstract = {In this paper, we discuss the theoretical and practical elements of designing an open source User Assistance (UA) System. Specifically, we introduce UCD requirements, including those to accommodate different user modes for UA architectures and complex document integration. We then detail how these requirements were delivered in the open source Eclipse project.},
booktitle = {Proceedings of the 20th Annual International Conference on Computer Documentation},
pages = {49–59},
numpages = {11},
keywords = {user-centered design, user assistance, eclipse user assistance},
location = {Toronto, Ontario, Canada},
series = {SIGDOC '02}
}

@inproceedings{10.1145/584955.584965,
author = {Hart-Davidson, William},
title = {Modeling Document-Mediated Interaction},
year = {2002},
isbn = {1581135432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/584955.584965},
doi = {10.1145/584955.584965},
abstract = {Current approaches to modeling texts create text structures based on semantic representations of authorial intention or a pre-determined information structure. This paper considers an alternative to these two approaches - modeling document-mediated interaction - and discusses challenges associated with this alternative approach.},
booktitle = {Proceedings of the 20th Annual International Conference on Computer Documentation},
pages = {60–71},
numpages = {12},
keywords = {activity theory, document modeling, technical communication, human-computer interaction},
location = {Toronto, Ontario, Canada},
series = {SIGDOC '02}
}

@inproceedings{10.1145/584955.584966,
author = {Heximer, Erin E. and Markova, Uliyana and Wu, Lisa and Yoon, Justine},
title = {A Multidisciplinary Approach to Improving the User Experience: Information Development, Test, and User Experience Design Teams Working Together},
year = {2002},
isbn = {1581135432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/584955.584966},
doi = {10.1145/584955.584966},
abstract = {In this paper we discuss how the combined efforts of three teams, Information Development (ID), Test, and User Experience Design (UED), improved the overall customer experience with store development in IBM® WebSphere® Commerce, a software package that enables merchants to host their businesses online.The project began in the spring of 2001 with a formal effort to solicit customer feedback on documentation. A few months later, a test team was created to simulate the customer experience. The test team performed the store development tasks as customers would, following only the instructions in the documentation. As ID and Test continued working together, they began to realize that, in order to improve the documentation, they had to revisit and improve the actual store development. This led to the involvement of the UED team.UED, Test, and ID continued working together to understand the store development processes our customers follow and the challenges they face. Through collaboration, the team identified areas for improvement in both the tools and the documentation, and developed an action plan to address these problems.},
booktitle = {Proceedings of the 20th Annual International Conference on Computer Documentation},
pages = {72–78},
numpages = {7},
keywords = {user centered design, cross-functional teams, testing, user-centered design, multidisciplinary, information, customer feedback},
location = {Toronto, Ontario, Canada},
series = {SIGDOC '02}
}

@inproceedings{10.1145/584955.584967,
author = {Johnson-Eilola, Johndan},
title = {Open Source Basics: Definitions, Models, and Questions},
year = {2002},
isbn = {1581135432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/584955.584967},
doi = {10.1145/584955.584967},
abstract = {In this paper, I will provide a basic overview of issues related to the use of open source models for development and distribution of computer documentation. The first section of the paper defines the key relations among different "open" categories (ranging from open standards to free software). The second section of the paper argues for two different methods for implementing open source models for computer documentation, one that offers increased user input into documentation projects and another that works to redefine how users and customers understand the importance and value of documentation.},
booktitle = {Proceedings of the 20th Annual International Conference on Computer Documentation},
pages = {79–83},
numpages = {5},
keywords = {documentation, open source software, professional status, interface design, free software},
location = {Toronto, Ontario, Canada},
series = {SIGDOC '02}
}

@inproceedings{10.1145/584955.584968,
author = {Keirnan, Timothy and Anschuetz, Lori and Rosenbaum, Stephanie},
title = {Combining Usability Research with Documentation Development for Improved User Support},
year = {2002},
isbn = {1581135432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/584955.584968},
doi = {10.1145/584955.584968},
abstract = {As a usability research and information design firm, Tec-Ed has noted the advantages of evaluating a product's usability in conjunction with developing its print and online documentation. Usability research identifies the problems with a user interface. When business or technical constraints prevent problems from being corrected in the interface, we still improve the product's usability by addressing these problems in the documentation. In other cases, the documentation can inform us of specific problems to research in the usability work.This paper describes two case studies in which the same team performed both usability and documentation projects for a product. In addition to the expected benefits from combining usability and documentation work, using the same team resulted in efficiencies in process and quality of execution. The experience also suggests that usability evaluation is not simply an alternative career path for technical communicators, but rather a complementary skill that can enhance their professional development while adding more value to the work they do for employers as well as users.},
booktitle = {Proceedings of the 20th Annual International Conference on Computer Documentation},
pages = {84–89},
numpages = {6},
keywords = {print documentation, usability testing, heuristic evaluation, online documentation, online help, professional development},
location = {Toronto, Ontario, Canada},
series = {SIGDOC '02}
}

@inproceedings{10.1145/584955.584969,
author = {Koning, Henk and Dormann, Claire and van Vliet, Hans},
title = {Practical Guidelines for the Readability of IT-Architecture Diagrams},
year = {2002},
isbn = {1581135432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/584955.584969},
doi = {10.1145/584955.584969},
abstract = {This paper presents the work done to establish guidelines for the creation of readable IT-architecture diagrams and gives some examples of guidelines and some examples of improved diagrams. These guidelines are meant to assist practicing IT-architects in preparing the diagrams to communicate their architectures to the various stakeholders. Diagramming has always been important in information technology (IT), but the recent interest in IT-architecture, the widespread use of software and developments in electronic communication, make it necessary to again look at the 'art of making diagrams' for this particular class and its users. The guidelines indicate how various visual attributes, like hierarchy, layout, color, form, graphics, etc. can contribute to the readability of IT-architecture diagrams. The emphasis is on the outward appearance of diagrams. Some additional support is given for the thinking/reasoning processes while designing or using a set of diagrams and an attempt is made to arrive at a rationale of these guidelines. An evaluation process has been performed with three groups of practicing IT-architects. The outcome of this evaluation is presented. This work is part of a more comprehensive research project on "Visualisation of IT-architecture".},
booktitle = {Proceedings of the 20th Annual International Conference on Computer Documentation},
pages = {90–99},
numpages = {10},
keywords = {readability, graphics, width, hierarchy, diagrams, architecture, size, visualization, layout, form, text, guidelines, color},
location = {Toronto, Ontario, Canada},
series = {SIGDOC '02}
}

@inproceedings{10.1145/584955.584970,
author = {Kostur, Pamela},
title = {Connecting Learners with Content: A Unified Content Strategy for Learning Materials},
year = {2002},
isbn = {1581135432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/584955.584970},
doi = {10.1145/584955.584970},
abstract = {A unified content strategy is a repeatable method of creating content for reuse, managing content in a definitive source, and assembling it to meet diverse needs. This paper describes:A unified content strategy and its benefitsApplying a unified content strategy to learning materialsBuilding models to support a unified content strategy for learning materials and beyond.},
booktitle = {Proceedings of the 20th Annual International Conference on Computer Documentation},
pages = {100–103},
numpages = {4},
keywords = {unified content strategy, content management, enterprise content management, reusable learning object, adaptive learning materials, RLO},
location = {Toronto, Ontario, Canada},
series = {SIGDOC '02}
}

@inproceedings{10.1145/584955.584971,
author = {Leslie, Donald M.},
title = {Using Javadoc and XML to Produce API Reference Documentation},
year = {2002},
isbn = {1581135432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/584955.584971},
doi = {10.1145/584955.584971},
abstract = {The creation of API reference documentation and its integration into larger documentation sets present a number of challenges. This paper explores a strategy for using Javadoc, the primary mechanism for generating Java API documentation, in conjunction with an XML infrastructure, to improve the quality of API reference material and its integration into product documentation sets.},
booktitle = {Proceedings of the 20th Annual International Conference on Computer Documentation},
pages = {104–109},
numpages = {6},
keywords = {Javadoc, XSL stylesheets, API documentation, document transformation, XML, doclets, XSLT, HTML},
location = {Toronto, Ontario, Canada},
series = {SIGDOC '02}
}

@inproceedings{10.1145/584955.584972,
author = {Manning, Steve},
title = {Designing Information for Dynamic Delivery with XML},
year = {2002},
isbn = {1581135432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/584955.584972},
doi = {10.1145/584955.584972},
abstract = {If you review the current technology trends for the web, you'll notice that the words "Dynamic Delivery" figure prominently. Industry pundits have identified "personalization" as one of the key characteristics of leading edge information sites. XML technologies provide companies with new options for the creation and delivery of information, including dynamic delivery and personalized information. But really effective information requires planning and preparation. This paper gives an overview of dynamic content and personalization, the benefits, and describes what is required to design, create, and manage effective dynamic content.},
booktitle = {Proceedings of the 20th Annual International Conference on Computer Documentation},
pages = {110–112},
numpages = {3},
location = {Toronto, Ontario, Canada},
series = {SIGDOC '02}
}

@inproceedings{10.1145/584955.584973,
author = {Meyer, Oliver},
title = {ATool: Creating Validated XML Documents on the Fly Using MS Word},
year = {2002},
isbn = {1581135432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/584955.584973},
doi = {10.1145/584955.584973},
abstract = {This paper describes aTool, an extension to Microsoft's Word to create XML documents. aTool has been developed in a joint project of the publisher Springer Verlag, Technical University of Munich (TUM), and Technical University of Aachen (RWTH). It has been developed to provide Springer Verlag with uniform XML documents from its authors and has become a generic XML creation tool that can be adapted to different document structures.For an author, aTool derives XML structures from MS Word editing commands, while he creates his text. For a technical manager, aTool can be parameterized in flexible, yet simple ways to suit the needs of a specific XML application. For a programmer, the paper describes the main implementation details of aTool. The paper closes with a short comparison to other approaches and a summary of the benefits and shortcomings of aTool.},
booktitle = {Proceedings of the 20th Annual International Conference on Computer Documentation},
pages = {113–121},
numpages = {9},
keywords = {XML, Microsoft Word Add-In, character formatting, Microsoft Word, DOM, Microsoft Office, A-Posteriori Integration},
location = {Toronto, Ontario, Canada},
series = {SIGDOC '02}
}

@inproceedings{10.1145/584955.584974,
author = {Newman, R. M. and Bussard, N. and Richards, C. J.},
title = {Integrating Interactive 3-D Diagrams into Hypermedia Documentation},
year = {2002},
isbn = {1581135432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/584955.584974},
doi = {10.1145/584955.584974},
abstract = { 'Virtual Reality', or interactive 3-D graphics has been the subject of much hype with regard to its promise in the field of engineering. If virtual reality provides a uniquely effective means of conveying information about 3-D forms, as its proponents contend, then it should have found widespread acceptance in the field of technical documentation, which is the distribution of information concerning engineering products. However, to date the use of this technology in working documentation systems is limited. This paper discusses some of the reasons for the limited progress made in the use of interactive 3-D in technical information systems, and concludes that there is a central role for interactive 3-D in technical documentation, but that progress needs to be made in the its authoring and presentation. The methodology of the production of interactive 3-D technical diagrams is discussed. Examples of some prototype tools are presented.},
booktitle = {Proceedings of the 20th Annual International Conference on Computer Documentation},
pages = {122–126},
numpages = {5},
keywords = {technical illustration, 3-D, graphics},
location = {Toronto, Ontario, Canada},
series = {SIGDOC '02}
}

@inproceedings{10.1145/584955.584975,
author = {Novick, David and Romero, Francisco and Saenz, Edgar Rene and Sandoval, Armando},
title = {Extending Direct Manipulation in a Text Editor},
year = {2002},
isbn = {1581135432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/584955.584975},
doi = {10.1145/584955.584975},
abstract = {This paper describes the implementation of a prototype text editor that incorporates conversation-like features through the direct-manipulation modality. In this way, traditional direct-manipulation interaction techniques such as direct reference via pointing can be extended to include techniques more commonly associated with human conversation, such as negotiation of reference. The paper illustrates the use of the prototype with an extended example, and discusses research issues raised by the implementation.},
booktitle = {Proceedings of the 20th Annual International Conference on Computer Documentation},
pages = {127–132},
numpages = {6},
keywords = {direct manipulation},
location = {Toronto, Ontario, Canada},
series = {SIGDOC '02}
}

@inproceedings{10.1145/584955.584976,
author = {Nykaza, Janet and Messinger, Rhonda and Boehme, Fran and Norman, Cherie L. and Mace, Matthew and Gordon, Manuel},
title = {What Programmers Really Want: Results of a Needs Assessment for SDK Documentation},
year = {2002},
isbn = {1581135432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/584955.584976},
doi = {10.1145/584955.584976},
abstract = {This paper steps the reader through a needs assessment of programmers that was conducted by instructional designers. The assessment's purpose was to identify what learning support programmers need and want to successfully use a new software development kit (SDK). The paper includes the challenges the researchers encountered, the questions asked and the responses, the types of individuals interviewed, and the conclusions reached from the research. Recommendations also are presented. Those responsible with developing documentation, training, and other learning support systems for programmers may find this assessment helpful. Marketing, product development and customer support people may also find value in learning more about the needs of this unique audience.},
booktitle = {Proceedings of the 20th Annual International Conference on Computer Documentation},
pages = {133–141},
numpages = {9},
keywords = {needs analysis, SDK documentation, needs assessment, developer documentation, API documentation, programmer documentation},
location = {Toronto, Ontario, Canada},
series = {SIGDOC '02}
}

@inproceedings{10.1145/584955.584977,
author = {Paris, C\'{e}cile and Linden, Keith Vander and Lu, Shijian},
title = {Automated Knowledge Acquisition for Instructional Text Generation},
year = {2002},
isbn = {1581135432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/584955.584977},
doi = {10.1145/584955.584977},
abstract = {Language generation systems have often been advocated for use in the generation of user documentation, but in practice, it is hard to use them because of the amount of knowledge they require as input. Without a readily available source of input, the knowledge acquisition bottleneck will prevent generation technology from ever being used. Unfortunately, knowledge acquisition for any domain-varying language generation application is difficult because there is seldom any single knowledge source or acquisition method that is adequate for acquiring the appropriate knowledge. This paper argues that this required knowledge can, in practice, be acquired from a heterogeneous set of complementary sources. It then presents Isolde, a support environment for technical writers that can mine these sources using an extensible set of specially tailored acquisition tools. These tools acquire instructional knowledge on-the-fly and consolidate it into a knowledge base that can drive instructional text generation.},
booktitle = {Proceedings of the 20th Annual International Conference on Computer Documentation},
pages = {142–151},
numpages = {10},
keywords = {language generation, instructional text, knowledge acquisition},
location = {Toronto, Ontario, Canada},
series = {SIGDOC '02}
}

@inproceedings{10.1145/584955.584978,
author = {Pendharkar, Parag C. and Rodger, James A.},
title = {An Empirical Study of Factors Impacting the Size of Object-Oriented Component Code Documentation},
year = {2002},
isbn = {1581135432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/584955.584978},
doi = {10.1145/584955.584978},
abstract = {In this paper, we identify a set of factors that may be used to forecast source code documentation for object oriented software components. Using field data on 152 object oriented (OO) software components and the multiple regression model, we empirically test the impact of proposed factors on the prediction of OO source code documentation. Our results indicate that the number of methods, the number of sub-classes, the number of GUI elements and the number of events handled all increase the number of lines of code for OO source code documentation. Additionally, we show that scale economies exist in OO source code documentation and use non-linear regression model Classification and Regression Tree (CART) to improve OO source code documentation forecasting accuracy.},
booktitle = {Proceedings of the 20th Annual International Conference on Computer Documentation},
pages = {152–156},
numpages = {5},
keywords = {object oriented programming languages, hypothesis testing, multiple regression, code documentation},
location = {Toronto, Ontario, Canada},
series = {SIGDOC '02}
}

@inproceedings{10.1145/584955.584979,
author = {Pierce, Robert and Tilley, Scott},
title = {Automatically Connecting Documentation to Code with Rose},
year = {2002},
isbn = {1581135432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/584955.584979},
doi = {10.1145/584955.584979},
abstract = {One of the most common problems with program documentation is keeping it synchronized with the source code it purports to explain. One solution to this problem is to automate the documentation process using reverse engineering technology. Reverse engineering is an emerging branch of software engineering that focuses on recreating high-level information (such as program documentation) from low-level artifacts (such as source code). This paper describes an automated approach to maintaining the connection between documentation and code by leveraging the reverse engineering capabilities built-in to Rational Rose. The approach produces application programming interface documentation for component object model-based (COM) dynamic link libraries (DLLs), C++ source code, and Java archive files. The documentation is always accurate and up-to-date. A primary advantage of the approach is its reliance on an industry-standard tool, thereby addressing one of the main concerns with facilitating wide-spread tool adoption: commercial-level support of deployed products.},
booktitle = {Proceedings of the 20th Annual International Conference on Computer Documentation},
pages = {157–163},
numpages = {7},
keywords = {software engineering, automation, documentation, application programming interface (API), single sourcing},
location = {Toronto, Ontario, Canada},
series = {SIGDOC '02}
}

@inproceedings{10.1145/584955.584980,
author = {Priestley, Michael and Schell, David A.},
title = {Specialization in DITA: Technology, Process, &amp; Policy},
year = {2002},
isbn = {1581135432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/584955.584980},
doi = {10.1145/584955.584980},
abstract = {DITA is an architecture for creating topic-oriented, information-typed content that can be reused and single-sourced in a variety of ways. It is also an architecture for creating new information types and describing new information domains, allowing groups to create very specific, targeted document type definitions using a process called specialization, while at the same time reusing common output transforms and design rules.Specialization provides a way to reconcile the needs for centralized control of major architecture and design with the needs for localized control of group-specific and content-specific guidelines and controls. Specialization allows multiple definitions of content and output to coexist, related through a hierarchy of information types and transforms. This hierarchy lets general transforms know how to deal with new, specific content, and it lets specialized transforms reuse logic from the general transforms. As a result, any content can be processed by any transform, as long as both content and transform are specialization-compliant and part of the same hierarchy. You get the benefit of specific solutions, but you also get the benefit of common standards and shared resources.For some groups, specialization requires a radical move away from centralized processes into a world of negotiated possibilities that introduces many new stakeholders to the information management infrastructure. For other groups, specialization introduces centralization, and, while it provides new opportunities for sharing and reusing logic and design, it also requires new policies and procedures to bring disparate design and development activities into a cohesive, coordinated framework.Previous papers ([1],[2],[3],[4]) have described in some detail how the technology of specialization works, and how it can be implemented using off-the-shelf tools that are dependent only on base levels of W3C standards (XML 1.0, XSLT 1.0). This paper provides a brief summary of recent changes to DITA specialization, and describes their effects on processes, but concentrates primarily on policy considerations involved in the deployment of a specialization architecture.},
booktitle = {Proceedings of the 20th Annual International Conference on Computer Documentation},
pages = {164–176},
numpages = {13},
keywords = {policy, XSLT, information architecture, DITA, XML architectures, information typing, XML, domains, information management, Darwin, ontologies, specialization, process},
location = {Toronto, Ontario, Canada},
series = {SIGDOC '02}
}

@inproceedings{10.1145/584955.584981,
author = {Rockley, Ann},
title = {Information Modeling for Single Sourcing},
year = {2002},
isbn = {1581135432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/584955.584981},
doi = {10.1145/584955.584981},
abstract = {Information modeling is one of the most critical phases of designing your reuse strategy. Information models specify how information is reused and how it must be written and structured to support reuse. Information models are the framework that guide authors, reviewers, and architects in creating, reviewing, managing, and publishing content. A good information model also improves the usability of your information products. This session introduces the concepts of information modeling.},
booktitle = {Proceedings of the 20th Annual International Conference on Computer Documentation},
pages = {177–178},
numpages = {2},
keywords = {information modeling, metadata, reuse, single sourcing},
location = {Toronto, Ontario, Canada},
series = {SIGDOC '02}
}

@inproceedings{10.1145/584955.584982,
author = {Russell, John},
title = {Find What I Mean: Exploring New Kinds of Search Results},
year = {2002},
isbn = {1581135432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/584955.584982},
doi = {10.1145/584955.584982},
abstract = {This paper discusses various scenarios encountered by visitors using search for a large documentation library. It identifies potential problems arising from the users' level of understanding of the documentation and the search system. It proposes solutions to these problems, some of which are common to other search systems, and others that may be specific to this type of documentation and audience.The paper then considers ways in which the documentation can be organized and written to make choices easier for searchers. It presents examples of popular destinations and typical navigation paths, illustrating how users sometimes find what they want, and other times find it difficult to make a choice or end up in the wrong place.In particular, it explores nontraditional techniques such as: Guiding users to "jumping off" points, where they can perform searches using predefined terms and search options.Identifying and recovering from specific search errors made by frequent users, as opposed to isolated, individual errors.Rewording headings to persuade or dissuade searchers as appropriate. Some headings are made more emphatic, others are intentionally made more vague..},
booktitle = {Proceedings of the 20th Annual International Conference on Computer Documentation},
pages = {179–185},
numpages = {7},
keywords = {web interfaces, books, search, online information, navigation, hierarchy},
location = {Toronto, Ontario, Canada},
series = {SIGDOC '02}
}

@inproceedings{10.1145/584955.584983,
author = {Scott, Dan and Seagren, Ronnie},
title = {Creating a Massive Master Index for HTML and Print},
year = {2002},
isbn = {1581135432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/584955.584983},
doi = {10.1145/584955.584983},
abstract = {An index connects readers with information. Creating an index for a single book is a time-honored craft. Creating an index for a massive library of HTML topics is a modern craft that has largely been discarded in favor of robust search engines. The authors show how they optimized a single-sourced index for collections of HTML topics, printed books, and PDF books. With examples from a recent index of 24,000 entries for 7,000 distinct HTML topics also published as 40 different PDF books, the authors discuss the connections between modern technology and traditional information retrieval methods that made the index possible, usable, and efficient to create and maintain.},
booktitle = {Proceedings of the 20th Annual International Conference on Computer Documentation},
pages = {186–193},
numpages = {8},
keywords = {search, information retrieval methods, navigation, indexing, online information},
location = {Toronto, Ontario, Canada},
series = {SIGDOC '02}
}

@inproceedings{10.1145/584955.584984,
author = {Spinuzzi, Clay},
title = {Documentation, Participatory Citizenship, and the Web: The Potential of Open Systems},
year = {2002},
isbn = {1581135432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/584955.584984},
doi = {10.1145/584955.584984},
abstract = {Technical communicators have become increasingly interested in how to "open up" the documentation process - to encourage workers to participate in developing documentation that closely fits their needs. This goal has led technical communicators to engage in usability testing, user-centered design approaches, and, more recently, open source documentation. Although these approaches have all had some success, there are other ways to encourage the participatory citizenship that is implied in these approaches. One way is through an open systems approach in which workers can consensually modify a given system and add their own contributions to the system. That is, an open system consists of an officially designed core that provides openings for workers' contributions - a system of information in which the control and responsibility for the information are distributed among the users themselves. The open systems approach has implications for computer documentation, but also for other domains, since it moves us from a consumer model of documentation-as-product towards a citizenship model in which citizens contribute to and collaboratively develop information.In this presentation, I describe efforts at two different universities to develop departmental websites as open systems. At these sites, web developers have adapted techniques that have traditionally been used in web-based Customer Relationship Management (CRM), transforming the sites from closed systems (centrally maintained and controlled sites) to open systems in which control is distributed among participants. At both universities, the shift entails constructing frameworks in which faculty and staff participate can collaboratively develop websites. Finally, I discuss the implications for computer documentation systems.},
booktitle = {Proceedings of the 20th Annual International Conference on Computer Documentation},
pages = {194–199},
numpages = {6},
keywords = {open systems, customer relationship management},
location = {Toronto, Ontario, Canada},
series = {SIGDOC '02}
}

@inproceedings{10.1145/584955.584985,
author = {Spinuzzi, Clay},
title = {Modeling Genre Ecologies},
year = {2002},
isbn = {1581135432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/584955.584985},
doi = {10.1145/584955.584985},
abstract = {The genre ecology framework is an analytical framework for studying how people use multiple artifacts - such as documentation, interfaces, and annotations - to mediate their work activities. Unlike other analytical frameworks, the genre ecology framework has been developed particularly for technical communication research, particularly in its emphasis on interpretation, contingency, and stability. Although this framework shows much promise, it is more of a heuristic than a formal modeling tool; it helps researchers to pull together impressions, similar to contextual design's work models, but it has not been implemented as formally as distributed cognition's functional systems.In this paper, I move toward a formal modeling of genre ecologies. First, I describe the preliminary results of an observational study of seven workers in two different functional teams of a medium-sized telecommunications company (a subset of a larger, 89-worker study). I use these preliminary results to develop a model of the genres used by these two teams, how those genres interconnect to co-mediate the workers' activities, and the breakdowns that the workers encounter as genres travel across the boundaries of the two teams. I conclude by (a) describing how formal models of genre ecologies can help in planning and designing computer documentation and (b) discussing how these models can be further developed.},
booktitle = {Proceedings of the 20th Annual International Conference on Computer Documentation},
pages = {200–207},
numpages = {8},
keywords = {activity theory, genre, compound mediation, genre ecology},
location = {Toronto, Ontario, Canada},
series = {SIGDOC '02}
}

@inproceedings{10.1145/584955.584986,
author = {Spinuzzi, Clay},
title = {A Scandinavian Challenge, a US Response: Methodological Assumptions in Scandinavian and US Prototyping Approaches},
year = {2002},
isbn = {1581135432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/584955.584986},
doi = {10.1145/584955.584986},
abstract = {In the early 1980s, Scandinavian software designers who sought to make systems design more participatory and democratic turned to prototyping. The "Scandinavian challenge" of making computers more democratic inspired others who became interested in user-centered design; information designers on both sides of the Atlantic began to employ prototyping as a way to encourage user participation and feedback in various design approaches. But, as European and North American researchers have pointed out, prototyping is seen as meeting very different needs in Scandinavia and in the US. Thus design approaches that originate on either side of the Atlantic have implemented prototyping quite differently, have deployed it to meet quite different goals, and have tended to understand prototyping results in different ways.These differences are typically glossed over in technical communication research. Technical communicators have lately become quite excited about prototyping's potential to help design documentation, but the technical communication literature shows little critical awareness of the methodological differences between Scandinavian and US prototyping. In this presentation, I map out some of these differences by comparing prototyping in a variety of design approaches originating in Scandinavia and the US, such as mock-ups, cooperative prototyping, CARD, PICTIVE, and contextual design. Finally, I discuss implications for future technical communication research involving prototyping.},
booktitle = {Proceedings of the 20th Annual International Conference on Computer Documentation},
pages = {208–215},
numpages = {8},
keywords = {user-centered design, democracy, collective resource approach, Scandinavian design, prototyping, PICTIVE, CARD, cooperative prototyping, contextual design, participatory design},
location = {Toronto, Ontario, Canada},
series = {SIGDOC '02}
}

@inproceedings{10.1145/584955.584987,
author = {Talbott, Douglas and Gibson, Matthew and Skublics, Suzanne},
title = {A Collaborative Methodology for the Rapid Development and Delivery of Online Courses},
year = {2002},
isbn = {1581135432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/584955.584987},
doi = {10.1145/584955.584987},
abstract = {This paper describes a collaborative methodology (tools and processes) for cost-effective development and quality delivery of online courseware. These methods are being used in the development and delivery of online courseware for information designers in the areas of technical writing, user interface design, usability testing, graphic design and web-based programming.Using this methodology, each course is touched by various members of a geographically dispersed, multi-disciplinary team of professional writers, instructional designers, graphic and visual interaction designers, human factors specialists and software engineers as it migrates through the analysis, design, development and verification process. Each member contributes their individual expertise. The process leverages familiar collaborative authoring tools while supporting robust single-source development using XML and eLearning standards.This methodology alleviates many of the common problems associated with virtual team collaboration such as interworking of multiple disciplines, managing geographical distribution, managing quality control. Through the use of this methodology we have been able to maintain constant quality-control while dramatically reducing the development times ordinarily associated with online course development.As such the purpose of this paper is to share our expieriences and experiences with other professionals in the information design community.},
booktitle = {Proceedings of the 20th Annual International Conference on Computer Documentation},
pages = {216–225},
numpages = {10},
keywords = {course delivery, mentored learning, e-learning, course development},
location = {Toronto, Ontario, Canada},
series = {SIGDOC '02}
}

@inproceedings{10.1145/584955.584988,
author = {Tilley, Scott and Huang, Shihong},
title = {Documenting Software Systems with Views III: Towards a Task-Oriented Classification of Program Visualization Techniques},
year = {2002},
isbn = {1581135432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/584955.584988},
doi = {10.1145/584955.584988},
abstract = {Documentation has long played a key role in aiding program understanding. Graphical forms of documentation rely on software visualization techniques to make complicated information easier to understand. However, it is an open question exactly which types of graphical documentation are most suitable for which types of program understanding tasks (and in which specific usage contexts). This paper describes preliminary work towards a task-oriented classification of program visualization techniques. The classification is currently descriptive in nature, and divides the visualization techniques into three classes (static, interactive, and editable) based on the level of end-user interaction with the generated graphical documentation. The primary advantage of a task-oriented classification is that it will ultimately map common activities related to program understanding to specific types of software visualization. A summary of how the descriptive classification was used to structure the selection of software visualization tools to support program understanding in an industrial context is provided.},
booktitle = {Proceedings of the 20th Annual International Conference on Computer Documentation},
pages = {226–233},
numpages = {8},
keywords = {program understanding, visualization, documentation},
location = {Toronto, Ontario, Canada},
series = {SIGDOC '02}
}

@inproceedings{10.1145/584955.584989,
author = {Tilley, Scott and Wong, Ken},
title = {Workshop on Graphical Documentation for Programmers},
year = {2002},
isbn = {1581135432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/584955.584989},
doi = {10.1145/584955.584989},
abstract = {Programmers often use graphical forms of documentation that rely on software visualization techniques to make complicated information easier to understand. However, it is an open question exactly which types of graphical documentation are most suitable for which types of program understanding tasks (and in which specific usage contexts). This workshop will focus on this issue by exploring the suitability of three classes of graphical documentation (static, interactive, and editable) for selected program understanding tasks that are representative of common software maintenance and evolution scenarios. This workshop is a sequel to the workshop "Documentation for Software Engineers: What is Needed to Aid System Understanding?" which took place at SIGDOC 2001.},
booktitle = {Proceedings of the 20th Annual International Conference on Computer Documentation},
pages = {234–235},
numpages = {2},
keywords = {visualization, program understanding, documentation},
location = {Toronto, Ontario, Canada},
series = {SIGDOC '02}
}

@inproceedings{10.1145/584955.584990,
author = {Weber, Anke and Kienle, Holger M. and M\"{u}ller, Hausi A.},
title = {Live Documents with Contextual, Data-Driven Information Components},
year = {2002},
isbn = {1581135432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/584955.584990},
doi = {10.1145/584955.584990},
abstract = {We introduce the notion of a live document and we describe our concept of live documents with contextual, data driven information components. The dynamic and interactive features of live documents provide a consistent data source for multimedia presentations targeted to various audiences and multiple platforms. Therefore, they contribute to the solution of key challenges in single sourcing and repurposing. We motivate the use of live documents with sample scenarios from the field of systems documentation. We further discuss how live documents can benefit from an interdisciplinary research approach across the fields of technical communications, systems documentation, and software engineering. Finally, cit_af ref_bf(Greenberg, Saul 2001 ref_num129)ref_we describe our experiences with prototype implementations of live documents based on Scalable Vector Graphics (SVG) and Microsoft Office Automation, respectively.},
booktitle = {Proceedings of the 20th Annual International Conference on Computer Documentation},
pages = {236–247},
numpages = {12},
keywords = {single sourcing, reverse engineering, software engineering, repurposing, scalable vector graphics, Microsoft Office, live documents, systems documentation},
location = {Toronto, Ontario, Canada},
series = {SIGDOC '02}
}

@inproceedings{10.1145/584955.584991,
author = {Williams, Ashley},
title = {Assessing Prototypes' Role in Design},
year = {2002},
isbn = {1581135432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/584955.584991},
doi = {10.1145/584955.584991},
abstract = {The practice of using prototypes in design processes that involve user participation assumes that it is beneficial to do so-one commonly accepted benefit is that prototyping activities help users generate or articulate design ideas. However, such practice is rarely examined closely. This paper reports primarily on a verbal data analysis conducted to address the assumption that hands-on prototyping necessarily stimulates discussion-I analyze participants' performances with a paper- and computer-based prototype as a means of assessing the prototypes' role in the participatory design-like effort of a community networking project. In doing so, I contrast the two prototypes in terms of the number and kind of utterances participants voiced in response to each.},
booktitle = {Proceedings of the 20th Annual International Conference on Computer Documentation},
pages = {248–257},
numpages = {10},
keywords = {prototyping, participatory design, community networking, verbal data analysis},
location = {Toronto, Ontario, Canada},
series = {SIGDOC '02}
}

@inproceedings{10.1145/584955.584992,
author = {Wong, Kenny and Tilley, Scott},
title = {Connecting Technical Communicators with Technical Developers},
year = {2002},
isbn = {1581135432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/584955.584992},
doi = {10.1145/584955.584992},
abstract = {Most program documentation is written by developers for developers. This often results in documentation that is less than satisfactory in terms of quality, relevance, and longevity of information to developers who will be responsible for subsequent enhancements to the product. This paper outlines an approach to producing effective program documentation by connecting technical communicators and technical developers in a pair-wise manner. This approach is modeled on the development methodology advocated by eXtreme Programming (XP). Programmers who adopt XP work in pairs, and thus are in constant communication with one another. By pairing a technical communicator with a technical developer, many of the same benefits can be gained. Rather than eschewing program documentation, the paired communicator and developer instead produce high-quality documentation during the development process, with little extra effort, resulting in a more maintainable software application. The paper also describes some recent experiences in pairing a senior person and a junior person in communicator and developer roles to enhance program documentation of a long-lived and popular research application.},
booktitle = {Proceedings of the 20th Annual International Conference on Computer Documentation},
pages = {258–262},
numpages = {5},
keywords = {software engineering, technical communication, pair programming, documentation, program understanding},
location = {Toronto, Ontario, Canada},
series = {SIGDOC '02}
}

