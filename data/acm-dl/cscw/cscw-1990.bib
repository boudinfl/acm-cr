@inproceedings{10.1145/99332.99335,
author = {Fish, Robert S. and Kraut, Robert E. and Chalfonte, Barbara L.},
title = {The VideoWindow System in Informal Communication},
year = {1990},
isbn = {0897914023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/99332.99335},
doi = {10.1145/99332.99335},
booktitle = {Proceedings of the 1990 ACM Conference on Computer-Supported Cooperative Work},
pages = {1–11},
numpages = {11},
location = {Los Angeles, California, USA},
series = {CSCW '90}
}

@inproceedings{10.1145/99332.99337,
author = {Ishii, H.},
title = {TeamWorkStation: Towards a Seamless Shared Workspace},
year = {1990},
isbn = {0897914023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/99332.99337},
doi = {10.1145/99332.99337},
abstract = {This paper introduces TeamWorkStation (TWS), a new desktop real-time shared workspace characterized by reduced cognitive seams. TWS integrates two existing kinds of individual workspaces, computers and desktops, to create a virtual shared workspace. The key ideas are the overlay of individual workspace images in a virtual shared workspace and the creation of a shared drawing surface. Because each co-worker can continue to use his/her favorite application programs or manual tools in the virtual shared workspace, the cognitive discontinuity (seam) between the individual and shared workspaces is greatly reduced, and users can shuttle smoothly between these two workspaces.This paper discusses where the seams exist in the current CSCW environment to clarify the issue of shared workspace design. The new technique of fusing individual workspaces is introduced. The application of TWS to the remote teaching of calligraphy is presented to show its potential. The prototype system is described and compared with other comparable approaches.},
booktitle = {Proceedings of the 1990 ACM Conference on Computer-Supported Cooperative Work},
pages = {13–26},
numpages = {14},
location = {Los Angeles, California, USA},
series = {CSCW '90}
}

@inproceedings{10.1145/99332.99338,
author = {Watabe, Kazuo and Sakata, Shiro and Maeno, Kazutoshi and Fukuoka, Hideyuki and Ohmori, Toyoko},
title = {Distributed Multiparty Desktop Conferencing System: MERMAID},
year = {1990},
isbn = {0897914023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/99332.99338},
doi = {10.1145/99332.99338},
abstract = {This describes a distributed multiparty desktop conferencing system (MERMAID) and presents its preliminary brief evaluation, obtained as a result of daily use. MERMAID, which is designed based on group collaboration system architecture, provides an environment for widely distributed participants, seated at their desks, to hold real-time conferences by interchanging information through video, voice, and multimedia documents. This system is implemented by using narrow-band ISDN, high-speed data network, and UNIX-based EWSs with electronic writing pads, image scanners, video cameras, microphone-installed loudspeakers, etc. The system provides participants with the means for sharing information in such multimedia forms as video images, voice, text, graphics, still images, and hand drawn figures.},
booktitle = {Proceedings of the 1990 ACM Conference on Computer-Supported Cooperative Work},
pages = {27–38},
numpages = {12},
location = {Los Angeles, California, USA},
series = {CSCW '90}
}

@inproceedings{10.1145/99332.99340,
author = {Austin, Laurel C. and Liker, Jeffery K. and McLeod, Poppy L.},
title = {Determinants and Patterns of Control over Technology in a Computerized Meeting Room},
year = {1990},
isbn = {0897914023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/99332.99340},
doi = {10.1145/99332.99340},
abstract = {Groups completed a prioritization task in a “low structure” computerized meeting room. All group members had equal access to a public screen used to complete the task. How groups distributed control of the technology, the determinants of which group members took control, and the consequences of control were studied. Groups adopted either a dedicated scribe strategy, where one group member controls the public screen throughout the session, or a non-dedicated scribe strategy, where more than one member takes control of the screen during the session. Proficiency with the computer interface and social influence within a group are factors that predict whether a given member will take control of the technology. Dedicated scribe groups scored better on the task but reported a smaller increase in satisfaction after working in the room than non-dedicated scribe groups.},
booktitle = {Proceedings of the 1990 ACM Conference on Computer-Supported Cooperative Work},
pages = {39–51},
numpages = {13},
location = {Los Angeles, California, USA},
series = {CSCW '90}
}

@inproceedings{10.1145/99332.99341,
author = {Losada, Marcial and Sanchez, Pedro and Noble, Elizabeth E.},
title = {Collaborative Technology and Group Process Feedback: Their Impact on Interactive Sequences in Meetings},
year = {1990},
isbn = {0897914023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/99332.99341},
doi = {10.1145/99332.99341},
abstract = {We analyzed group collaborative behavior by detecting patterns of interactive sequences in meetings using time series analysis. This is in contrast to previous work in which frequency counts of interactions were analyzed. Researchers have reported a decrease of these interaction frequencies associated with the use of computer-supported collaborative technology [Appl86, McGu87, Sieg86, Wats88]. We found that if group process feedback is given to people participating in a computer-supported collaborative technology meeting, the number of socio-emotional interactive sequences increases significantly above the expected level determined by log-linear analysis. In contrast, when using collaborative computer technology alone (no feedback), there is a substantial reduction in the number of socio-emotional interactive sequences below the expected level. These findings have implications for the efficient use of computer technology in terms of maximizing its collaborative potential.},
booktitle = {Proceedings of the 1990 ACM Conference on Computer-Supported Cooperative Work},
pages = {53–64},
numpages = {12},
location = {Los Angeles, California, USA},
series = {CSCW '90}
}

@inproceedings{10.1145/99332.99343,
author = {Galegher, Jolene and Kraut, Robert E.},
title = {Computer-Mediated Communication for Intellectual Teamwork: A Field Experiment in Group Writing},
year = {1990},
isbn = {0897914023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/99332.99343},
doi = {10.1145/99332.99343},
abstract = {To work together on complex projects, people must agree on a set of shared goals, coordinate the actions of contributors, and weave the components they have created independently into a unified whole. These activities are the basic components of intellectual teamwork—people working together over substantial periods of time to create information-intensive products. Intellectual teamwork demands extensive information sharing and coordination, but these communication needs vary over time and over tasks. These projects typically involve an initial phase during which group members settle on an interpretation of the problem, define their goals and plan their work, an execution phase during which group members may work independently to carry out the various tasks associated with the project, and an integration phase during which group members must bring their individual inputs together to create a final product [Biks90; Finh90; Krau88; McGr90).These variations suggest that different communication modalities may be useful at successive stages in the life of a long-term project. A relatively static medium such as writing may be sufficient for exchanging information, but tasks that involve ambiguous goals, multiple perspectives, and information that is susceptible to multiple interpretations—characteristics of the planning and integrative phases of intellectual teamwork—are typically associated with high levels of direct, informal, face-to-face communication [Daft81; Daft87; Tush78, Tush79; Vand76]. Face-to-face interaction can support the rich communication required for integrative work, but creating the conditions to support face-to-face communication can be expensive, and sometimes, logistically impossible.Of course, other forms of communication—telephones, for instance—are available to counter these disadvantages. Telephones permit easy communication across both short and long distances, and they support naturalistic interaction embodying many of the features of Face-to-Face conversation. Nevertheless, as anyone who has ever played an extended game of “telephone tag” knows, they require the sender and the receiver to be simultaneously available. This limitation is inconsistent with current communication needs in business and science, both of which are becoming, on the one hand, more geographically and temporally distributed, and, on the other, more interconnected.},
booktitle = {Proceedings of the 1990 ACM Conference on Computer-Supported Cooperative Work},
pages = {65–78},
numpages = {14},
location = {Los Angeles, California, USA},
series = {CSCW '90}
}

@inproceedings{10.1145/99332.99344,
author = {Lee, Jintae},
title = {SIBYL: A Tool for Managing Group Design Rationale},
year = {1990},
isbn = {0897914023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/99332.99344},
doi = {10.1145/99332.99344},
abstract = {We describe SIBYL, a system that supports group decision making by representing and managing the qualitative aspects of decision making processes: such as the alternatives, the goals to be satisfied, and the arguments evaluating the alternatives with respect to these goals. We use an example session with SIBYL to illustrate the language, called DRL, that SIBYL uses for representing these qualitative aspects, and the set of services that SIBYL provides using this language. We also compare SIBYL to other systems with similar objectives and discuss the additional benefits that SIBYL provides. In particular, we compare SIBYL to gIBIS, a well-known “tool for exploratory policy discussion”, and claim that SIBYL is mainly a knowledge-based system which uses a semi-formal representation, whereas gIBIS is mainly a hypertext system with semantic types. We conclude with a design heuristic, drawn from our experience with SIBYL, for systems whose goal includes eliciting knowledge from people.},
booktitle = {Proceedings of the 1990 ACM Conference on Computer-Supported Cooperative Work},
pages = {79–92},
numpages = {14},
location = {Los Angeles, California, USA},
series = {CSCW '90}
}

@inproceedings{10.1145/99332.99345,
author = {Shepherd, Allan and Mayer, Niels and Kuchinsky, Allan},
title = {Strudel—an Extensible Electronic Conversation Toolkit},
year = {1990},
isbn = {0897914023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/99332.99345},
doi = {10.1145/99332.99345},
abstract = {This paper describes the conceptual model of Strudel, a toolkit of generic components for conversation and action management. To empower work groups to more effectively conduct their computer-based communication, coordination, and information sharing activities, Strudel packages within a simple model of task and action the semi-structured message, active message and conversation management paradigms. To facilitate acceptance and use within varying work cultures, we define this model in terms of a set of extensible components, which are implemented as a prototype software toolkit that is efficient, portable, customizable, and extensible. Issues considered briefly in this paper include threading in conversations that are converging or multi-party, and interoperability between active message systems.},
booktitle = {Proceedings of the 1990 ACM Conference on Computer-Supported Cooperative Work},
pages = {93–104},
numpages = {12},
location = {Los Angeles, California, USA},
series = {CSCW '90}
}

@inproceedings{10.1145/99332.99347,
author = {Burgess Yakemovic, K. C. and Conklin, E Jeffery},
title = {Report on a Development Project Use of an Issue-Based Information System},
year = {1990},
isbn = {0897914023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/99332.99347},
doi = {10.1145/99332.99347},
abstract = {It has long been recognized that certain kinds of vital information — usually informal and unstructured, often having to do with why certain actions are taken — are usually lost in large projects. One explanation may be that this kind of information, while important, is too unstructured to be readily captured and retrieved. We report on a field study in which a simple structuring method (IBIS, for Issue-Based Information System) was used over an extended period of time to record and allow retrieval of a significant quantity of precisely this kind of information, using very simple technology. We draw some implications for hypertext and GroupWare, and for the prospect of supporting the design process with technology.},
booktitle = {Proceedings of the 1990 ACM Conference on Computer-Supported Cooperative Work},
pages = {105–118},
numpages = {14},
location = {Los Angeles, California, USA},
series = {CSCW '90}
}

@inproceedings{10.1145/99332.99348,
author = {Benson, Ian and Ciborra, Claudio and Proffitt, Steve},
title = {Some Social and Economic Consequences of Groupware for Flight Crew},
year = {1990},
isbn = {0897914023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/99332.99348},
doi = {10.1145/99332.99348},
booktitle = {Proceedings of the 1990 ACM Conference on Computer-Supported Cooperative Work},
pages = {119–129},
numpages = {11},
location = {Los Angeles, California, USA},
series = {CSCW '90}
}

@inproceedings{10.1145/99332.99350,
author = {Hart, Paul and Estrin, D.},
title = {Computer Integration: A Co-Requirement for Effective Inter-Organization Computer Network Implementation},
year = {1990},
isbn = {0897914023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/99332.99350},
doi = {10.1145/99332.99350},
abstract = {Inter-organization computer networks (IONS) provide significant opportunities for improving coordination between firms engaged in mutually dependent activities. This research paper focuses on how IONS affect information processing requirements, and production and transaction costs when they interconnect firms with internally integrated computer systems and when they are used only as substitutes for conventional media. We conclude that significant improvements in inter- organization coordination result when IONS support exchanges between internally integrated firms. However, while IONS reduce production costs, they can simultaneously increase transaction costs including those associated with penetration into another firm's computing resources, and segmentation in the marketplace.},
booktitle = {Proceedings of the 1990 ACM Conference on Computer-Supported Cooperative Work},
pages = {131–142},
numpages = {12},
location = {Los Angeles, California, USA},
series = {CSCW '90}
}

@inproceedings{10.1145/99332.99351,
author = {Engelbart, Douglas C.},
title = {Knowledge-Domain Interoperability and an Open Hyperdocument System},
year = {1990},
isbn = {0897914023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/99332.99351},
doi = {10.1145/99332.99351},
booktitle = {Proceedings of the 1990 ACM Conference on Computer-Supported Cooperative Work},
pages = {143–156},
numpages = {14},
location = {Los Angeles, California, USA},
series = {CSCW '90}
}

@inproceedings{10.1145/99332.99352,
author = {Harrison, William H. and Ossher, Harold and Sweeney, Peter F.},
title = {Coordinating Concurrent Development},
year = {1990},
isbn = {0897914023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/99332.99352},
doi = {10.1145/99332.99352},
abstract = {Development of any large system or artifact requires the coordination of many developers. Development activities can occur concurrently. The goal of coordination is to enhance, not restrict, developer productivity, while ensuring that concurrent development activities do not clash with one another.This paper presents a formal model of concurrent development, in which development consists of a collection of modification activities that change files, and merges that combine the changes. We define a notion of consistency called coordination consistency that ensures that changes are not inadvertently destroyed and that the changes of each modification activity are correctly propagated to subsequent modification activities. We briefly present a set of protocols for concurrent development using a hierarchy of stores that ensure coordination consistency.},
booktitle = {Proceedings of the 1990 ACM Conference on Computer-Supported Cooperative Work},
pages = {157–168},
numpages = {12},
location = {Los Angeles, California, USA},
series = {CSCW '90}
}

@inproceedings{10.1145/99332.99353,
author = {Brothers, L. and Sembugamoorthy, V. and Muller, M.},
title = {ICICLE: Groupware for Code Inspection},
year = {1990},
isbn = {0897914023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/99332.99353},
doi = {10.1145/99332.99353},
abstract = {ICICLE1 (“Intelligent Code Inspection Environment in a C Language Environment”) is a multifarious software system intended to augment the process of formal code inspection. It offers assistance in a number of activities, including knowledge-based analysis and annotations of source code, and computer supported cooperative discussion and finalization of inspectors' comments during inspection meetings. This paper reports the implementation of ICICLE and GroupWare issues encountered during testing; it is directed towards an audience interested in the implementation of GroupWare as well as those concerned with usability of software systems for computer-supported cooperative work (CSCW).},
booktitle = {Proceedings of the 1990 ACM Conference on Computer-Supported Cooperative Work},
pages = {169–181},
numpages = {13},
location = {Los Angeles, California, USA},
series = {CSCW '90}
}

@inproceedings{10.1145/99332.99354,
author = {Neuwirth, Christine M. and Kaufer, David S. and Chandhok, Ravinder and Morris, James H.},
title = {Issues in the Design of Computer Support for Co-Authoring and Commenting},
year = {1990},
isbn = {0897914023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/99332.99354},
doi = {10.1145/99332.99354},
abstract = {This paper reports on a project to develop a “work in preparation” editor, or PREP editor, to study co-authoring and commenting relationships. As part of the project, we have identified three issues in designing computer support for co-authoring and commenting: (1) support for social interaction among co-authors and commenters; (2) support for cognitive aspects of co-authoring and external commenting; and (3) support for practicality in both types of interaction. For each of these issues, the paper describes the approach the PREP editor takes to address them.},
booktitle = {Proceedings of the 1990 ACM Conference on Computer-Supported Cooperative Work},
pages = {183–195},
numpages = {13},
location = {Los Angeles, California, USA},
series = {CSCW '90}
}

@inproceedings{10.1145/99332.99355,
author = {Nardi, Bonnie A. and Miller, James R.},
title = {An Ethnographic Study of Distributed Problem Solving in Spreadsheet Development},
year = {1990},
isbn = {0897914023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/99332.99355},
doi = {10.1145/99332.99355},
abstract = {In contrast to the common view of spreadsheets as “single-user” programs, we have found that spreadsheets offer surprisingly strong support for cooperative development of a wide variety of applications. Ethnographic interviews with spreadsheet users showed that nearly all of the spreadsheets used in the work environments studied were the result of collaborative work by people with different levels of programming and domain expertise. Cooperation among spreadsheet users was spontaneous and casual; users activated existing informal social networks to initiate collaboration.},
booktitle = {Proceedings of the 1990 ACM Conference on Computer-Supported Cooperative Work},
pages = {197–208},
numpages = {12},
location = {Los Angeles, California, USA},
series = {CSCW '90}
}

@inproceedings{10.1145/99332.99356,
author = {Mackay, Wendy E.},
title = {Patterns of Sharing Customizable Software},
year = {1990},
isbn = {0897914023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/99332.99356},
doi = {10.1145/99332.99356},
abstract = {The act of customizing software is generally viewed as a solitary activity that allows users to express individual preferences. In this study, users at two different research sites, working with two different kinds of customizable software, were found to actively share their customization files with each other. This sharing allowed the members of each organization to establish and perpetuate informally-defined norms of behavior.A small percentage of people within the organization were responsible for most of the sharing. One group of these were highly-skilled software engineers, who were usually the first to try new software. They used customization as a way to experiment with and learn about the software and made their files available to others through various broadcast mechanisms. This group did not try to determine whether their customizations were useful to other users. The second group were less skilled technically but much more interested in interpreting the needs of their colleagues and creating customization files tailored to those needs. They acted as translators between the highly technical group and the rest of the organization.The spontaneous sharing of customization files within an organization has implications for both organizations and for software designers. Managers should 1) recognize and support the role of translators, 2) recognize that not all sharing is beneficial, and 3) provide opportunities for the exchange of customization files and innovations among members of the organization. Software designers should 1) provide tools that allow users to evaluate the effectiveness of their customizations through reflective software, 2) provide well-tested examples of customization files with the first release of the software, 3) explicitly support sharing of customizations, and 4) provide tools to support the activities of translators.},
booktitle = {Proceedings of the 1990 ACM Conference on Computer-Supported Cooperative Work},
pages = {209–221},
numpages = {13},
location = {Los Angeles, California, USA},
series = {CSCW '90}
}

@inproceedings{10.1145/99332.99357,
author = {Clement, Andrew},
title = {Cooperative Support for Computer Work: A Social Perspective on the Empowering of End Users},
year = {1990},
isbn = {0897914023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/99332.99357},
doi = {10.1145/99332.99357},
booktitle = {Proceedings of the 1990 ACM Conference on Computer-Supported Cooperative Work},
pages = {223–236},
numpages = {14},
location = {Los Angeles, California, USA},
series = {CSCW '90}
}

@inproceedings{10.1145/99332.99358,
author = {Wulff, Wendie and Evenson, Shelley and Rheinfrank, John},
title = {Animating Interfaces},
year = {1990},
isbn = {0897914023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/99332.99358},
doi = {10.1145/99332.99358},
abstract = {We briefly mention some requirements for prototyping tools in user interface and system design. Then, we introduce Animating Interfaces as one collaborative, iterative approach to the rapid conceptual prototyping and simulation of interfaces and associated functionalities. We give a description of the Animating Interfaces process, followed by an illustrated example of the technique. In the example, we use the technique to conceptually design interface conventions and system functionalities for part of a product intended to support collaborative multi-media information use and management. We finish by commenting on the role of the Animating Interfaces technique in the following: uncovering user task knowledge and designer system knowledge; incorporating work and work-context information into the design process; simulating interfaces and system functionalities; and provoking reflection, evaluation and innovation.},
booktitle = {Proceedings of the 1990 ACM Conference on Computer-Supported Cooperative Work},
pages = {241–254},
numpages = {14},
location = {Los Angeles, California, USA},
series = {CSCW '90}
}

@inproceedings{10.1145/99332.99359,
author = {Hellman, Rittta},
title = {User Support: Illustrating Computer Use in Collaborative Work Contexts},
year = {1990},
isbn = {0897914023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/99332.99359},
doi = {10.1145/99332.99359},
abstract = {It is relevant for the users of a computerized information system to perceive the organizational context of collaborative work and corresponding information processes. It is possible to reflect these in a context support system. In order to demonstrate this, a theoretical framework for the realization of such support systems is presented. A context support system can be built around four types of module: 1) images of information media, 2) descriptions of jobs composed of task lattices, 3) illustrations of physical work units, and 4) visualizations of databases. The general module structures as well as some examples are presented. Both the framework and the examples are built around the idea of hypermedia as a potential environment of implementation.},
booktitle = {Proceedings of the 1990 ACM Conference on Computer-Supported Cooperative Work},
pages = {255–267},
numpages = {13},
location = {Los Angeles, California, USA},
series = {CSCW '90}
}

@inproceedings{10.1145/99332.99360,
author = {Grudin, Jonathan},
title = {Interface},
year = {1990},
isbn = {0897914023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/99332.99360},
doi = {10.1145/99332.99360},
booktitle = {Proceedings of the 1990 ACM Conference on Computer-Supported Cooperative Work},
pages = {269–278},
numpages = {10},
location = {Los Angeles, California, USA},
series = {CSCW '90}
}

@inproceedings{10.1145/99332.99361,
author = {Beard, David and Palaniappan, Murugappan and Humm, Alan and Banks, David and Nair, Anil and Shan, Yen-Ping},
title = {A Visual Calendar for Scheduling Group Meetings},
year = {1990},
isbn = {0897914023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/99332.99361},
doi = {10.1145/99332.99361},
abstract = {Scheduling group meetings requires access to participants' calendars, typically located in scattered pockets or desks. Placing participants' calendars on-line and using a rule-based scheduler to find a time slot would alleviate the problem to some extent, but it often is difficult to trust the results, because correct scheduling rules are elusive, varying with the participants and the agenda of a particular meeting. What's needed is a comprehensive scheduling system that summarizes the available information for quick, flexible, and reliable scheduling. We have developed a prototype of a priority-based, graphical scheduling system called Visual Scheduler (VS).A controlled experiment comparing automatic scheduling with VS to manual scheduling demonstrated the former to be faster and less error prone. A field study conducted over six weeks at the UNC-CH Computer Science Department showed VS to be a generally useful system and provided valuable feedback on ways to enhance the functionality of the system to increase its value as a groupwork tool. In particular, users found priority-based time-slots and access to scheduling decision reasoning advantageous. VS has been in use by more than 75 faculty, staff, and graduate students since Fall 1987.},
booktitle = {Proceedings of the 1990 ACM Conference on Computer-Supported Cooperative Work},
pages = {279–290},
numpages = {12},
location = {Los Angeles, California, USA},
series = {CSCW '90}
}

@inproceedings{10.1145/99332.99362,
author = {Bullen, Christine V. and Bennett, John L.},
title = {Learning from User Experience with Groupware},
year = {1990},
isbn = {0897914023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/99332.99362},
doi = {10.1145/99332.99362},
booktitle = {Proceedings of the 1990 ACM Conference on Computer-Supported Cooperative Work},
pages = {291–302},
numpages = {12},
location = {Los Angeles, California, USA},
series = {CSCW '90}
}

@inproceedings{10.1145/99332.99363,
author = {Reder, Stephen and Schwab, Robert G.},
title = {The Temporal Structure of Cooperative Activity},
year = {1990},
isbn = {0897914023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/99332.99363},
doi = {10.1145/99332.99363},
booktitle = {Proceedings of the 1990 ACM Conference on Computer-Supported Cooperative Work},
pages = {303–316},
numpages = {14},
location = {Los Angeles, California, USA},
series = {CSCW '90}
}

@inproceedings{10.1145/99332.99364,
author = {Patterson, John F. and Hill, Ralph D. and Rohall, Steven L. and Meeks, Scott W.},
title = {Rendezvous: An Architecture for Synchronous Multi-User Applications},
year = {1990},
isbn = {0897914023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/99332.99364},
doi = {10.1145/99332.99364},
abstract = {Rendezvous is an architecture for creating synchronous multi-user applications. It consists of two parts: a run-time architecture for managing the multi-user session and a start-up architecture for managing the network connectivity. The run-time architecture is based on a User Interface Management System called MEL, which is a language extension to Common Lisp providing support for graphics operations, object-oriented programming, and constraints. Constraints are used to manage three dimensions of sharing: sharing of underlying information, sharing of views, and sharing of access. The start-up architecture decouples invoking and joining an application so that not all users need be known when the application is started. At present, the run-time architecture is completed and running test applications. As a first test of the complete Rendezvous architecture, we will implement a multi-user card game by the end of the summer.},
booktitle = {Proceedings of the 1990 ACM Conference on Computer-Supported Cooperative Work},
pages = {317–328},
numpages = {12},
location = {Los Angeles, California, USA},
series = {CSCW '90}
}

@inproceedings{10.1145/99332.99365,
author = {Crowley, Terrence and Milazzo, Paul and Baker, Ellie and Forsdick, Harry and Tomlinson, Raymond},
title = {MMConf: An Infrastructure for Building Shared Multimedia Applications},
year = {1990},
isbn = {0897914023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/99332.99365},
doi = {10.1145/99332.99365},
booktitle = {Proceedings of the 1990 ACM Conference on Computer-Supported Cooperative Work},
pages = {329–342},
numpages = {14},
location = {Los Angeles, California, USA},
series = {CSCW '90}
}

@inproceedings{10.1145/99332.99366,
author = {Knister, Michael J. and Prakash, Atul},
title = {DistEdit: A Distributed Toolkit for Supporting Multiple Group Editors},
year = {1990},
isbn = {0897914023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/99332.99366},
doi = {10.1145/99332.99366},
abstract = {The purpose of our project is to provide toolkits for building applications that support collaboration between people in distributed environments. In this paper, we describe one such toolkit, called DistEdit, that can be used to build interactive group editors for distributed environments. This toolkit has the ability to support different editors simultaneously and provides a high degree of fault-tolerance against machine crashes. To evaluate the toolkit, we modified two editors to make use of the toolkit. The resulting editors allow users to take turns at making changes while other users observe the changes as they occur. We give an evaluation of the toolkit based on the development and use of these editors.},
booktitle = {Proceedings of the 1990 ACM Conference on Computer-Supported Cooperative Work},
pages = {343–355},
numpages = {13},
location = {Los Angeles, California, USA},
series = {CSCW '90}
}

@inproceedings{10.1145/99332.99367,
author = {Malone, Thomas W. and Crowston, Kevin},
title = {What is Coordination Theory and How Can It Help Design Cooperative Work Systems?},
year = {1990},
isbn = {0897914023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/99332.99367},
doi = {10.1145/99332.99367},
abstract = {It is possible to design cooperative work tools based only on “common sense” and good intuitions. But the history of technology is replete with examples of good theories greatly aiding the development of useful technology. Where, then, might we look for theories to help us design computer-supported cooperative work tools? In this paper, we will describe one possible perspective—the interdisciplinary study of coordination—that focuses, in part, on how people work together now and how they might do so differently with new information technologies.In one sense, there is little that is new about the study of coordination. Many different disciplines—including computer science, sociology, political science, management science, systems theory, economics, linguistics, and psychology—have all dealt, in one way or another, with fundamental questions about coordination. Furthermore, several previous writers have suggested that theories about coordination are likely to be important for designing cooperative work tools (e.g., [Holt88], [Wino86]).We hope to suggest here, however, that the potential for fruitful interdisciplinary connections concerning coordination is much greater than has as yet been widely appreciated. For instance, we believe that fundamentally similar coordination phenomena arise—unrecognized as such—in many of the fields listed above. Though a single coherent body of theory about coordination does not yet exist, many different disciplines could both contribute to and benefit from more general theories of coordination. Of particular interest to researchers in the field of computer-supported cooperative work is the prospect of drawing on a much richer body of existing and future work in these fields than has previously been suggested.In this paper, we will first describe what we mean by “coordination theory” and give examples of how previous research on computer-supported cooperative work can be interpreted from this perspective. We will then suggest one way of developing this perspective further by proposing tentative definitions of coordination and analyzing its components in more detail.},
booktitle = {Proceedings of the 1990 ACM Conference on Computer-Supported Cooperative Work},
pages = {357–370},
numpages = {14},
location = {Los Angeles, California, USA},
series = {CSCW '90}
}

@inproceedings{10.1145/99332.99368,
author = {Lynne Markus, M. and Connolly, Terry},
title = {Why CSCW Applications Fail: Problems in the Adoption of Interdependent Work Tools},
year = {1990},
isbn = {0897914023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/99332.99368},
doi = {10.1145/99332.99368},
booktitle = {Proceedings of the 1990 ACM Conference on Computer-Supported Cooperative Work},
pages = {371–380},
numpages = {10},
location = {Los Angeles, California, USA},
series = {CSCW '90}
}

@inproceedings{10.1145/99332.99369,
author = {Moran, Thomas P. and Anderson, R. J.},
title = {The Workaday World as a Paradigm for CSCW Design},
year = {1990},
isbn = {0897914023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/99332.99369},
doi = {10.1145/99332.99369},
abstract = {EuroPARC is developing an integrated multi-media environment as an integral part of its formal and informal working environment. From our initial experiences with this kind of technology, we and our colleagues believe that it exhibits several qualitatively different properties, which seem to call into question many of our ideas about what computer systems are and how people relate to them. This has caused us to step back and take stock of the design principles we are using and, more generally, to ask what are appropriate principles for CSCW applications and technologies.Like many others in this field, EuroPARC's concern is not simply with artifacts and their enabling technologies, but with understanding the processes and relationships which such artifacts support, including the processes by which they are designed. The discipline of design must involve a constant movement back and forth between the design and use of technologies and reflection upon those activities.This paper is in the reflective mood. We begin to lay out a design paradigm for understanding the social significance of the new technologies available for CSCW.1 By “paradigm” we are not referring to Kuhn's (1962) notion of a revolutionary theory or set of ideas, but rather to a more general pre-Kuhnian notion. We are striving for a design paradigm, not a scientific paradigm; it is a heuristic for bringing forth the important issues facing the designer. For us here, a design paradigm can be any coherent intellectual framework for guiding design. It may be a theory or a metaphor describing the central character of the design domain, both the character of the designed artifacts and the environments in which they fit.},
booktitle = {Proceedings of the 1990 ACM Conference on Computer-Supported Cooperative Work},
pages = {381–393},
numpages = {13},
location = {Los Angeles, California, USA},
series = {CSCW '90}
}

