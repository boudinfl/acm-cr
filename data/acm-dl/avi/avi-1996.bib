@inproceedings{10.1145/948449.948451,
author = {Card, Stuart},
title = {Information Visualization and Information Foraging},
year = {1996},
isbn = {0897918347},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/948449.948451},
doi = {10.1145/948449.948451},
booktitle = {Proceedings of the Workshop on Advanced Visual Interfaces},
pages = {12},
numpages = {1},
location = {Gubbio, Italy},
series = {AVI '96}
}

@inproceedings{10.1145/948449.948452,
author = {Mendelzon, Alberto O.},
title = {Visualizing the World Wide Web},
year = {1996},
isbn = {0897918347},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/948449.948452},
doi = {10.1145/948449.948452},
abstract = {We discuss some principles that we believe are important in creating useful visualizations of the World Wide Web. They are: layout, abstraction, focus, and interaction. We illustrate these points with examples from the work of our group at the University of Toronto.},
booktitle = {Proceedings of the Workshop on Advanced Visual Interfaces},
pages = {13–19},
numpages = {7},
location = {Gubbio, Italy},
series = {AVI '96}
}

@inproceedings{10.1145/948449.948453,
author = {Dix, Alan},
title = {Closing the Loop: Modelling Action, Perception and Information},
year = {1996},
isbn = {0897918347},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/948449.948453},
doi = {10.1145/948449.948453},
abstract = {Visual interfaces to computer systems are interactive. The cycle of visual interaction involves both visual perception and action. This paper examines formal models of interactive systems and cognitive models of users. Neither completely captures the special nature of visual interaction. In order to investigate this, the paper examines two forms of non-visual interaction: mathematics for the blind and interaction by smell (nasal interaction). Finally three forms of more pragmatic design-oriented method are considered: information rich task analysis (<u>what</u> information is required), status-event analysis (<u>when</u> it is perceived) and models of information (<u>how</u> to visually interact with it).},
booktitle = {Proceedings of the Workshop on Advanced Visual Interfaces},
pages = {20–28},
numpages = {9},
keywords = {formal methods, cognitive models, aural interfaces, status-event analysis},
location = {Gubbio, Italy},
series = {AVI '96}
}

@inproceedings{10.1145/948449.948454,
author = {Kandogan, Eser and Shneiderman, Ben},
title = {Elastic Windows: Improved Spatial Layout and Rapid Multiple Window Operations},
year = {1996},
isbn = {0897918347},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/948449.948454},
doi = {10.1145/948449.948454},
abstract = {Most windowing systems follow the independent overlapping windows approach, which emerged as an answer to the needs of the 80s' application and technology. Advances in computers, display technology, and the applications demand more functionality from window management systems. Based on these changes and the problems of current windowing appraoches, we have updated the requirements for multiwindow systems to guide new methods of window management. We propose elastic windows with improved spatial layout and rapid multi-window operations. Multi-window operations are achieved by issuing operations on window groups hierachically organized in a space-filling tiled layout. Sophisticated multi-window operations and spatial layout dynamics helps users to handle fast task-switching and to structure thier work environment to their rapidly changing needs. We claim that these multi-window operations and the improved spatial layout decrease the cognitive load on users. Users found our prototype system to be comprehensible and enjoyable as they playfully explored the way multiple windows are reshaped.},
booktitle = {Proceedings of the Workshop on Advanced Visual Interfaces},
pages = {29–38},
numpages = {10},
keywords = {CAD, window manager, task switching, programming environment, personal role manager, multi-window operations, elastic windows},
location = {Gubbio, Italy},
series = {AVI '96}
}

@inproceedings{10.1145/948449.948455,
author = {Cruz, Isabel F.},
title = {Multimedia User Interfaces},
year = {1996},
isbn = {0897918347},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/948449.948455},
doi = {10.1145/948449.948455},
booktitle = {Proceedings of the Workshop on Advanced Visual Interfaces},
pages = {39},
numpages = {1},
location = {Gubbio, Italy},
series = {AVI '96}
}

@inproceedings{10.1145/948449.948457,
author = {R\"{u}ger, Michael and Preim, Bernhard and Ritter, Alf},
title = {Zoom Navigation Exploring Large Information and Application Spaces},
year = {1996},
isbn = {0897918347},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/948449.948457},
doi = {10.1145/948449.948457},
abstract = {We present the concept of ZOOM NAVIGATION, a new interaction paradigm to cope with visualization and navigation problems as found in large information and application spaces. It is based on the pluggable zoom, an object-oriented component derived from the variable zoom fisheye algorithm.Working with a limited screen space we apply a Degree-of-interest (DOI) function to guide the level of detail used in presenting information. Furthermore we determine the user's information and navigation needs by analysing the interaction history. This leads to the definition of the aspect-of-interest (AOI) function. The AOI is evaluated in order to choose one of the several information aspects, under which an item can be studied. This allows us to change navigational affordance and thereby enhance navigation.In this paper we describe the ideas behind the pluggable zoom and the definition of DOI and AOI functions. The application of these functions is demonstrated within two case studies, the ZOOM ILLUSTRATOR and the ZOOM NAVIGATOR. We discuss our experience with these implemented systems.},
booktitle = {Proceedings of the Workshop on Advanced Visual Interfaces},
pages = {40–48},
numpages = {9},
keywords = {zooming interfaces, detail + context technique, information navigation, zoom navigation, human-computer interfaces, screen layout, fisheye display},
location = {Gubbio, Italy},
series = {AVI '96}
}

@inproceedings{10.1145/948449.948458,
author = {Krohn, Uwe},
title = {VINETA: Navigation through Virtual Information Spaces},
year = {1996},
isbn = {0897918347},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/948449.948458},
doi = {10.1145/948449.948458},
abstract = {Vineta is a system prototype allowing navigation through bibliographic data without the typing and revising of keyword-based queries. Our approach to visualizing documents and terms in navigational retrieval includes the representation of documents and terms as graphical objects, and dynamic positioning of these objects in the 3D virtual navigation space. Users can navigate through this virtual navigation space examining individual documents and clusters of documents at various levels of detail. Users can utilize their natural sense of space to interact with the system.},
booktitle = {Proceedings of the Workshop on Advanced Visual Interfaces},
pages = {49–58},
numpages = {10},
location = {Gubbio, Italy},
series = {AVI '96}
}

@inproceedings{10.1145/948449.948459,
author = {Garzotto, Franca and Mainetti, Luca and Paolini, Paolo},
title = {Modal Navigation for Hypermedia Applications},
year = {1996},
isbn = {0897918347},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/948449.948459},
doi = {10.1145/948449.948459},
abstract = {Hypermedia applications combine the flexibility of navigation based-access to information, typical of hypertext, with the communication power of multiple media, typical of multimedia systems. By their very nature, hypermedia applications support multimode interacation, i.e., interaction based on a combination of multiple modalities that are induced by different media and different navigation paradigms. The potentially huge number of mode combinations in hypermedia can accommodate a large variety of user needs and tasks. Multimode interaction, however, is intrinsically complex for the users if several multimode paradigmas coexist within the same application. This paper discusses the concept of modal navigation as a technique that allows to achieve both simplicity in user interaction and flexibility in tuning navigation styles to specific needs of different categories of users. According to modal navigation, the semantics of navigation commands depends upon the current setting of modes. Various paradigms are discussed for modal navigation that take into account different degrees of user's control in the definition of mode configuration and mode resetting. The approach will be exemplified by discussing a real life hypermedia application under development at HOC in cooperation with the Poldi Pezzoli Museum in Milano.},
booktitle = {Proceedings of the Workshop on Advanced Visual Interfaces},
pages = {59–66},
numpages = {8},
location = {Gubbio, Italy},
series = {AVI '96}
}

@inproceedings{10.1145/948449.948460,
author = {Pirolli, Peter and Rao, Ramana},
title = {Table Lens as a Tool for Making Sense of Data},
year = {1996},
isbn = {0897918347},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/948449.948460},
doi = {10.1145/948449.948460},
abstract = {The Table Lens is a visualization for searching for patterns and outliers in multivariate datasets. It supports a lightweight form of exploratory data analysis (EDA) by integrating a familiar organization, the table, with graphical representations and a small set of direct manipulation operators. We examine the EDA process as a special case of a generic process, which we call sensemaking. Using a GOMS methodology, we characterize a few central EDA tasks and compare performance of the Table Lens and one of the best of the more traditional graphical tools for EDA i.e. Splus. This analysis reveals that Table Lens is more or less on par with the power of Splus, while requiring the use of fewer specialized graphical representations. It essentially combines the graphical power of Splus with the direct manipulation and generic properties of spreadsheets and relational database front ends. We also propose a number of design refinements that are suggested by our task characterizations and analyses.},
booktitle = {Proceedings of the Workshop on Advanced Visual Interfaces},
pages = {67–80},
numpages = {14},
keywords = {GOMS, exploratory data analysis, evaluation, information visualization, multivariate visualization, database visualization},
location = {Gubbio, Italy},
series = {AVI '96}
}

@inproceedings{10.1145/948449.948462,
author = {Mitchell, Kenneth J. and Kennedy, Jessie B. and Barclay, Peter J.},
title = {A Framework for User-Interfaces to Databases},
year = {1996},
isbn = {0897918347},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/948449.948462},
doi = {10.1145/948449.948462},
abstract = {A framework for user-interfaces to databases (IDSs) is proposed which draws from existing research on human computer interaction (HCI) and database systems. The framework is described in terms of a classification of the characteristic components of an IDS. These components, when progressively refined, may be mapped to a conceptual object-oriented language for the precise specification of the IDS. A prototype system is presented, showing the potential for automated mapping of a language specification to a fully functional implementation. As well as providing general support to any database interface developer, we believe that the framework will prove useful for researching a number of IDS issues.},
booktitle = {Proceedings of the Workshop on Advanced Visual Interfaces},
pages = {81–90},
numpages = {10},
keywords = {user-interfaces to databases, human-computer interaction (HCI), conceptual modelling, direct manipulation interfaces},
location = {Gubbio, Italy},
series = {AVI '96}
}

@inproceedings{10.1145/948449.948463,
author = {Aloia, N. and Matera, M. and Patern\`{o}, F.},
title = {A Semantics-Based Approach to Designing Presentations for Multimedia Database Query Results},
year = {1996},
isbn = {0897918347},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/948449.948463},
doi = {10.1145/948449.948463},
abstract = {The problem of presenting database query results has not sufficiently been investigated. The purpose of this work is to propose an approach which is able to identify the semantically correct presentations by composing Elementary Presentation Types corresponding to data attributes. Some effectiveness critcria are considered in order to identify those presentations which best match the user's goals and cognitive abilities.},
booktitle = {Proceedings of the Workshop on Advanced Visual Interfaces},
pages = {91–100},
numpages = {10},
location = {Gubbio, Italy},
series = {AVI '96}
}

@inproceedings{10.1145/948449.948464,
author = {Baeza-Yates, Ricardo},
title = {Visualization of Large Answers in Text Databases},
year = {1996},
isbn = {0897918347},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/948449.948464},
doi = {10.1145/948449.948464},
abstract = {Current user interfaces of full text retrieval systems do not help in the process of filtering the result of a query, usually very large. We address this problem and we propose a visual interface to handle the result of a query, based on a hybrid model for text. This graphical user interface provides several visual representations of the answer and its elements (queries, documents, and text), easing the analysis and the filtering process.},
booktitle = {Proceedings of the Workshop on Advanced Visual Interfaces},
pages = {101–107},
numpages = {7},
keywords = {visual representations, visual analysis, set visualization, visual tools, visual browsing, visual text database, visual query languages},
location = {Gubbio, Italy},
series = {AVI '96}
}

@inproceedings{10.1145/948449.948466,
author = {Kovacevic, Srdjan},
title = {Flexible, Dynamic User Interfaces for Web-Delivered Training},
year = {1996},
isbn = {0897918347},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/948449.948466},
doi = {10.1145/948449.948466},
abstract = {One of the critical parts of a tutoring system is its user interface (UI), which must neither constrain an author in developing lessons, nor impede a student during practice. A system providing training over the Web must also address issues of interface transport, providing feedback and managing local context. We have developed a system, MUSE, that applies a model-based technology to address the above requirements. It supports a wide range of interface styles. Resulting Uls can be customized and capture enough application semantics to provide local feedback and manage the context required for evaluating a student's work and providing coaching.},
booktitle = {Proceedings of the Workshop on Advanced Visual Interfaces},
pages = {108–118},
numpages = {11},
keywords = {model-based design, application semantics, Web interfaces, UI representation, UI models, UI components, UI design tools, Web-delivered training, intelligent tutoring system},
location = {Gubbio, Italy},
series = {AVI '96}
}

@inproceedings{10.1145/948449.948467,
author = {Capobianco, Fabrizio and Mosconi, Mauro and Pagnin, Lorenzo},
title = {Looking for Convenient Alternatives to Forms for Querying Remote Databases on the Web: A New Iconic Interface for Progressive Queries},
year = {1996},
isbn = {0897918347},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/948449.948467},
doi = {10.1145/948449.948467},
abstract = {The enormous popularity of the World Wide Web has made putting public access databases on the Web practically mandatory. Forms embedded within the Web clients (e.g. Netscape) are therefore emerging as the most common interfaces in database querying. Should this solution be considered completely satisfactory?We highlight some of the important limits we experienced with forms and we propose a convenient alternative solution, based on direct manipulation of icons. The system we have developed is easy to use and provides comfortable mechanisms for browsing, manipulating and reusing queries results as well as previous queries thus making feasible effective non-motonic, progressive query processes.},
booktitle = {Proceedings of the Workshop on Advanced Visual Interfaces},
pages = {119–124},
numpages = {6},
location = {Gubbio, Italy},
series = {AVI '96}
}

@inproceedings{10.1145/948449.948469,
author = {Mancini, Roberta},
title = {Interacting with a Visual Editor},
year = {1996},
isbn = {0897918347},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/948449.948469},
doi = {10.1145/948449.948469},
abstract = {In this paper, we investigate the problem of querying a database of images. In order to improve the communication between human and computer, we propose a visual editor as an interaction tool. Really, the most simple way to formulate a query to a database of images is to allow the user to draw a sketch of the picture he is interested in. This sketch will be used to formulate a query within the visual query system. This editor, called VisEd, has been developed following a formal model (the PIE model), where properties such as completeness, reachability, and particularly undo, hold.},
booktitle = {Proceedings of the Workshop on Advanced Visual Interfaces},
pages = {125–131},
numpages = {7},
keywords = {reachability, visual query system, undo, visual editor, formal model},
location = {Gubbio, Italy},
series = {AVI '96}
}

@inproceedings{10.1145/948449.948470,
author = {Citrin, Wayne and Gross, Mark D.},
title = {Distributed Architectures for Pen-Based Input and Diagram Recognition},
year = {1996},
isbn = {0897918347},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/948449.948470},
doi = {10.1145/948449.948470},
abstract = {We present a system supporting pen-based input and diagram recognition that employs a personal digital assistant (PDA) as an intelligent input device for the system. Functionality is distributed between the PDA and the main computer, with the PDA performing low-level shape recognition and editing functions, and the back-end computer performing high-level recognition functions, including recognition of spatial relations between picture elements. This organization provides a number of advantages over conventional pen-based systems employing simple digitizing tablets. It provides the opportunity to use hardware specially designed for shape recognition and editing in a general diagram recognition system, it allows for improved performance through parallel processing, and it allows diagram entry to be performed remotely through use of the PDA front end in the field, with recognized shapes subsequently downloaded to the main diagram recognizer. We discuss the overall organization of the system, as well as the individual pieces and the communication between them, and describe two ongoing projects employing this architecture.},
booktitle = {Proceedings of the Workshop on Advanced Visual Interfaces},
pages = {132–140},
numpages = {9},
keywords = {graphical editors, pen-based interfaces, diagram recognition},
location = {Gubbio, Italy},
series = {AVI '96}
}

@inproceedings{10.1145/948449.948471,
author = {Kramer, Axel},
title = {Dynamic Interpretations in Translucent Patches: Representation-Based Applications},
year = {1996},
isbn = {0897918347},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/948449.948471},
doi = {10.1145/948449.948471},
abstract = {Our goal is to empower individuals involved in design activities using the written medium, by amending it carefully with computational facilities. To preserve the fluidity and swiftness of design activities, we let users dynamically associate marks on the display surface with interpretations that provide interesting operations to the user.Inherent to typical computer applications is a very static relationship between internal data structures and presentation. In contrast, applications in our system (we call them interpretations), have to be able to deal with a much more dynamic relationship between those areas.This paper motivates this idea, presents challenges faced by such an approach, explains a framework for designing and implementing such interpretations, and illustrates how exemplary interpretations make use of this framework.},
booktitle = {Proceedings of the Workshop on Advanced Visual Interfaces},
pages = {141–147},
numpages = {7},
keywords = {gestural interfaces, pen based interfaces, interpretations, application design, translucent patches, interaction techniques},
location = {Gubbio, Italy},
series = {AVI '96}
}

@inproceedings{10.1145/948449.948473,
author = {Smedley, Trevor J. and Cox, Philip T. and Byrne, Shannon L.},
title = {Expanding the Utility of Spreadsheets through the Integration of Visual Programming and User Interface Objects},
year = {1996},
isbn = {0897918347},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/948449.948473},
doi = {10.1145/948449.948473},
abstract = {One of the primary uses of spreadsheets is in forecasting future events. This involves investigating "what-if" scenarios --- creating a spreadsheet, experimenting with different values for inputs, and observing how they effect the computed values. Unfortunately, current spreadsheets provide little support for this type of interaction. Data values must be typed in, and computed values can be observed only as numbers, or on simple charts. In this work we extend a spreadsheet which makes use of a visual language for expressing formulae to also incorporate the use of user interface objects. This allows the user to create any type of input and output interfaces they wish, increasing the utility of spreadsheets for investigating "what-if" scenarios.},
booktitle = {Proceedings of the Workshop on Advanced Visual Interfaces},
pages = {148–155},
numpages = {8},
location = {Gubbio, Italy},
series = {AVI '96}
}

@inproceedings{10.1145/948449.948474,
author = {Wegner, Lutz and Paul, Manfred and Thamm, Jens and Thelemann, Sven},
title = {A Visual Interface for Synchronous Collaboration and Negotiated Transactions},
year = {1996},
isbn = {0897918347},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/948449.948474},
doi = {10.1145/948449.948474},
abstract = {This paper introduces a visual interface for computer-supported cooperative work (CSCW). The interface is an extension of the editor interface of ESCHER, a prototype database system based on the extended non-first-normal-form data model. In ESCHER, the nested table approach is the paradigm for presenting data, where presenting includes browsing, editing and querying the database. Interaction is achieved by fingers generalising the well-known cursor concept. When several users are involved, the concept permits synchronous collaboration with the nested table acting as "whiteboard". We discuss its use in applications which require negotiated transactions, i.e. where the isolation principle of ACID-transactions gives way to negotiations. We also give examples of how interactive query formulation in a QBE-like fashion can support the collaboration. The arguments in the paper are mainly supported with screenshots taken from two applications, one of them also with non-textual data types which are seamlessly integrated into the nested tabular display paradigm.},
booktitle = {Proceedings of the Workshop on Advanced Visual Interfaces},
pages = {156–165},
numpages = {10},
location = {Gubbio, Italy},
series = {AVI '96}
}

@inproceedings{10.1145/948449.948475,
author = {Almada, Ant\~{a}o Vaz and Dias, Ant\'{o}nio Eduardo and Silva, Jo\~{a}o Pedro and dos Santos, Emanuel Marques and Pedrosa, Pedro Jos\'{e} and C\^{a}mara, Ant\'{o}nio Sousa},
title = {Exploring Virtual Ecosystems},
year = {1996},
isbn = {0897918347},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/948449.948475},
doi = {10.1145/948449.948475},
abstract = {Browsing In Time &amp; Space (BITS) is an interface designed to explore virtual ecosystems. A virtual ecosystem includes a three dimensional terrain model background, collections of man-made and natural objects, and behavior and interaction rules between the objects and the background. BITS is based on a virtual notepad and pen metaphor and is inspired in the concept of logging. Physical props are used to represent the notepad and the pen. The notepad includes a Time &amp; Space Slider to facilitate time and space traveling, a set of buttons and a list of commands to control the interaction and enable the manipulation of objects, and a Notes Area. The handwritten notes can be referenced in time and space with the use of logging marks. BITS is being implemented on a PC-based architecture using sensors to track the pen's movement and the notepad's position. BITS major problem is related to the poor representation of the notes written in the notepad using the sensor based tracking system.},
booktitle = {Proceedings of the Workshop on Advanced Visual Interfaces},
pages = {166–174},
numpages = {9},
keywords = {virtual reality, props, user interface components, browsing in time &amp; space, metaphors, logging, virtual ecosystems, pen-based input},
location = {Gubbio, Italy},
series = {AVI '96}
}

@inproceedings{10.1145/948449.948477,
author = {Ahlberg, Christopher},
title = {Cocktailmaps: A Space-Filling Visualization Method for Complex Communicating Systems},
year = {1996},
isbn = {0897918347},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/948449.948477},
doi = {10.1145/948449.948477},
abstract = {Cocktailmaps is a visualization method for visualization of communicative behavior in complex communication systems such as human conversation, cocktail parties, parallel computers, and telecommunication networks. Cocktailmaps are space-filling in that they effectively utilize the available screen real estate to communicate properties such as what communicators dominate a communication over time, what topics are communicated, and how agents move between subcommunications. Cocktailmaps have been implemented utilizing the Information Visualization and Exploration Environment (IVEE) which provides users of cocktailmaps with interactive techniques such as zooming, panning, filtering, and details-on-demand.},
booktitle = {Proceedings of the Workshop on Advanced Visual Interfaces},
pages = {175–183},
numpages = {9},
keywords = {information visualization, dynamic queries, spoken communication, cocktailmap},
location = {Gubbio, Italy},
series = {AVI '96}
}

@inproceedings{10.1145/948449.948478,
author = {Ioannidis, Yannis and Livny, Miron and Bao, Jian and Haber, Eben M.},
title = {User-Oriented Visual Layout at Multiple Granularities},
year = {1996},
isbn = {0897918347},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/948449.948478},
doi = {10.1145/948449.948478},
abstract = {Among existing tools for laying out large collections of visual objects, some perform automatic layouts, possibly following some rules prespecified by the user, e.g., graph layout tools, while others let users specify layouts manually, e.g., CAD design tools. Most of them can only deal with specific types of visualizations, e.g., graphs, and some of them allow users to view visual objects at various levels of detail, e.g., tree-structure visualization tools. In this paper, we develop techniques that strike a balance between user specification and automatic generation of layouts, work at multiple granularities, and are generally applicable. In particular, we introduce a general framework and layout algorithm that (a) deals with arbitrary types of visual objects, (b) allows objects to be viewed in any one of several different visual representations (at different levels of detail), and (c) uses a small number of user-specified layouts to guide heuristic decisions for automatically deriving many other layouts in a manner that attempts to be consistent with the user's preferences. The algorithm has been implemented within the OPOSSUM database schema manager and has been rather effective in capturing the intuition of scientists from several disciplines who have used it to design their database and experiment schemas.},
booktitle = {Proceedings of the Workshop on Advanced Visual Interfaces},
pages = {184–193},
numpages = {10},
location = {Gubbio, Italy},
series = {AVI '96}
}

@inproceedings{10.1145/948449.948479,
author = {Carlson, Paul and Burnett, Margaret and Cadiz, Jonathan},
title = {A Seamless Integration of Algorithm Animation into a Visual Programming Language},
year = {1996},
isbn = {0897918347},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/948449.948479},
doi = {10.1145/948449.948479},
abstract = {Until now, only users of textual programming languages have enjoyed the fruits of algorithm animation. Users of visual programming languages (VPLs) have been deprived of the unique semantic insights algorithm animation offers, insights that would foster the understanding and debugging of visual programs. To begin solving this shortcoming, we have seamlessly integrated algorithm animation capabilities into Forms/3, a declarative VPL in which evaluation is the continuous maintenance of a network of one-way constraints. Our results show that a VPL that uses this constraint-based evaluation model can provide features not found in other algorithm animation systems.},
booktitle = {Proceedings of the Workshop on Advanced Visual Interfaces},
pages = {194–202},
numpages = {9},
location = {Gubbio, Italy},
series = {AVI '96}
}

@inproceedings{10.1145/948449.948480,
author = {Baker, James E. and Cruz, Isabel F. and Liotta, Giuseppe and Tamassia, Roberto},
title = {Algorithm Animation over the World Wide Web},
year = {1996},
isbn = {0897918347},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/948449.948480},
doi = {10.1145/948449.948480},
abstract = {In this paper we propose a new model, called Mocha, for providing algorithm animation over the World Wide Web. Mocha is a distributed model with a client-server architecture that optimally partitions the software components of a typical algorithm animation system, and leverages the power of the Java language, an emerging standard for distributing interactive platform-independent applications across the Web.Mocha provides high levels of security, protects the algorithm code, places a light communication load on the Internet, and allows users with limited computing resources to access animations of computationally expensive algorithms. The user interface combines fast responsiveness and user friendliness with the powerful authoring capabilities of hypertext narratives.We describe the architecture of Mocha and show its advantages over previous methods for algorithm animation over the Internet. We also present a prototype of an animation system for geometric algorithms that can be accessed by any user with a WWW browser supporting Java (currently Netscape 2.0 and HotJava) at URL http://www.cs.brown.edu/people/jib/Mocha.html.},
booktitle = {Proceedings of the Workshop on Advanced Visual Interfaces},
pages = {203–212},
numpages = {10},
location = {Gubbio, Italy},
series = {AVI '96}
}

@inproceedings{10.1145/948449.948482,
author = {Corridoni, J. M. and Bimbo, A. Del and De Magistris, S.},
title = {Image Query by Semantical Color Content},
year = {1996},
isbn = {0897918347},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/948449.948482},
doi = {10.1145/948449.948482},
abstract = {The availability of large image databases is emphasizing the relevance of filters, which permit to focus the interest on a small subset of data. Taking advantage of the pictorial features of images, visual specification of such filters provides a powerful and natural way to express content-oriented queries. Albeit direct, the by example paradigm, does not allow to express high-level assertions on the pictorial content of images and specifically, paintings. To support the visuality, without losing power of expression, an original visual language is herein proposed, for the symbolic representation of the semantics induced by the colour quality and arrangement over a painting. The proposed language is based on the concepts of color semantics introduced by artists in the 900 and is developed to support a visual query paradigm. The present paper formalizes the grammar of the language and describes its implementation into a prototype system of painting retrieval by colour content.},
booktitle = {Proceedings of the Workshop on Advanced Visual Interfaces},
pages = {213–222},
numpages = {10},
location = {Gubbio, Italy},
series = {AVI '96}
}

@inproceedings{10.1145/948449.948483,
author = {Abate, A. F. and Nappi, M. and Tortora, G. and Tucci, M.},
title = {Assisted Browsing in a Diagnostic Image Database},
year = {1996},
isbn = {0897918347},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/948449.948483},
doi = {10.1145/948449.948483},
abstract = {The paper describes a significant part of an experimental system for producing digital medical images, processing them to extract suitable spatial indexes, and to store and retrieve by content such images in order to provide users with an assisted visual browser to navigate a distributed archive. A prerequisite for the system described in this paper is that a physician should be able to manipulate the diagnostic images by simple visual commands that allow content-based access. In particular, the physician have to identify abnormalities (hot spots) in each image by deteriming their spatical locations, opacities, shapes and geometrical measures.Since our system needs the capability of retrieving images based on the presence of given patterns, it is necessary to define a similarity matching between the query and an image to retrieve. To efficiently perform such a matching, each image is stored together with a collection of metadata that are a very compact representation of the spatical contents of the image. These metadata forms the index of the image.We illustrate an experimental image browser for medical imaging diagnosis implementing the query-by-pictorial-example philosophy for user interface.},
booktitle = {Proceedings of the Workshop on Advanced Visual Interfaces},
pages = {223–232},
numpages = {10},
location = {Gubbio, Italy},
series = {AVI '96}
}

@inproceedings{10.1145/948449.948484,
author = {Di Loreto, Fabrizio and Ferri, Fernando and Massari, Fernanda and Rafanelli, Maurizio},
title = {A Pictorial Query Language for Geographical Databases},
year = {1996},
isbn = {0897918347},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/948449.948484},
doi = {10.1145/948449.948484},
abstract = {In this paper a Pictorial Query Language (PQL) for Geographic Information Systems (GIS) is proposed. The user queries the GIS drawing symbolic objects, combining them together and selecting the derived result among those ones proposed by the PQL. The used interface is part of the Scenario GIS developed using an object oriented environment. This PQL makes easier the formulation of a complex query and simplifies user approach to the system, maintaining a strong expressive power. An overview on the data structure type, on the operators and on the relations among geographic entities is briefly made. The Visual Algebra and the relative operators are defined. The pictorial operations associated to the above mentioned algebra are described. Finally, an example of query and its visual composition on the screen is shown.},
booktitle = {Proceedings of the Workshop on Advanced Visual Interfaces},
pages = {233–244},
numpages = {12},
keywords = {geographical database, pictorial query language, user friendly interface},
location = {Gubbio, Italy},
series = {AVI '96}
}

@inproceedings{10.1145/948449.948486,
author = {Andr\'{e}, Elisabeth and M\"{u}ller, Jochen and Rist, Thomas},
title = {The PPP Persona: A Multipurpose Animated Presentation Agent},
year = {1996},
isbn = {0897918347},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/948449.948486},
doi = {10.1145/948449.948486},
abstract = {Animated agents - either based on real video, cartoon-style drawings or even model-based 3D graphics are likely to become integral parts of future user interfaces. We present the PPP Persona, a tool which can be used for showing, explaining, and verbally commenting textual and graphical output on a window-based interface. The realization of the module follows the client/server paradigm, i.e, some client applications can send requests for executing presentation tasks to the server. However, to achieve a lively and appealing behaviour of the animated agent, the server autonomously performs some actions, eg. to span pauses or to react immediately to user interactions.},
booktitle = {Proceedings of the Workshop on Advanced Visual Interfaces},
pages = {245–247},
numpages = {3},
location = {Gubbio, Italy},
series = {AVI '96}
}

@inproceedings{10.1145/948449.948487,
author = {Baker, James E. and Cruz, Isabel F. and Liotta, Giuseppe and Tamassia, Roberto},
title = {The Mocha Algorithm Animation System},
year = {1996},
isbn = {0897918347},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/948449.948487},
doi = {10.1145/948449.948487},
abstract = {We describe the implementation of a new system, called Mocha, for providing algorithm animation over the World Wide Web. Mocha is a distributed system with a client-server architecture that optimally partitions the software components of a typical algorithm animation system, and leverages the power of the Java language, an emerging standard for distributing interactive platform-independent applications across the Web.},
booktitle = {Proceedings of the Workshop on Advanced Visual Interfaces},
pages = {248–250},
numpages = {3},
location = {Gubbio, Italy},
series = {AVI '96}
}

@inproceedings{10.1145/948449.948488,
author = {Calvi, Licia},
title = {Model-Oriented Visual Interface Design},
year = {1996},
isbn = {0897918347},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/948449.948488},
doi = {10.1145/948449.948488},
abstract = {The paper presents a collaborative effort towards the implementation of a hypermedia application provided with a model-oriented visual interface.},
booktitle = {Proceedings of the Workshop on Advanced Visual Interfaces},
pages = {251–253},
numpages = {3},
location = {Gubbio, Italy},
series = {AVI '96}
}

@inproceedings{10.1145/948449.948489,
author = {Chok, Sitt Sen and Marriott, Kim},
title = {Automatic Construction of User Interfaces for Pen-Based Computers},
year = {1996},
isbn = {0897918347},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/948449.948489},
doi = {10.1145/948449.948489},
booktitle = {Proceedings of the Workshop on Advanced Visual Interfaces},
pages = {254–256},
numpages = {3},
location = {Gubbio, Italy},
series = {AVI '96}
}

@inproceedings{10.1145/948449.948490,
author = {Dawkes, Huw and Tweedie, Lisa A. and Spence, Bob},
title = {VICKI: The VIsualisation Construction KIt},
year = {1996},
isbn = {0897918347},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/948449.948490},
doi = {10.1145/948449.948490},
abstract = {The human acquisition of insight into multivariate data can be greatly enhanced if users can view and interact with that data graphically. Many Interactive Visualisation Artifacts (IVAs) have been developed for such activities, but they tend to focus on a single task. The flexibility of the VICKI (the Visualisation Construction Kit) environment allows users to create IVAs, with a level of functionality and appearance, suitable for their specific needs. This paper introduces the concepts behind VICKI and discusses issues of future development.},
booktitle = {Proceedings of the Workshop on Advanced Visual Interfaces},
pages = {257–259},
numpages = {3},
location = {Gubbio, Italy},
series = {AVI '96}
}

@inproceedings{10.1145/948449.948491,
author = {Hild, Stefan G. and Poulovassilis, Alexandra},
title = {Hyperlog: A System for Database Querying and Browsing},
year = {1996},
isbn = {0897918347},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/948449.948491},
doi = {10.1145/948449.948491},
booktitle = {Proceedings of the Workshop on Advanced Visual Interfaces},
pages = {260–262},
numpages = {3},
location = {Gubbio, Italy},
series = {AVI '96}
}

@inproceedings{10.1145/948449.948492,
author = {Massari, Antonio and Saladini, Lorenzo},
title = {Virgilio: A VR-Based System for Database Visualization},
year = {1996},
isbn = {0897918347},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/948449.948492},
doi = {10.1145/948449.948492},
abstract = {In this paper we introduce Virgilio, a system which generates VR-based visualizations of complex data objects representing the result of a query. Virgilio takes as input the dataset resulting from a query on a generic database and creates a corresponding visual representation composed of a collection of VRML (VR Modeling Language) scenes. The system uses a repository of real world objects (e.g., rooms, tables, portrait cases) which includes their visual aspect, the types of data they can support as well as a containment relationship among pairs of objects. Virgilio works in the following way: (i) attribute values of the dataset are displayed on virtual world objects according to the capability of these objects to represent the proper type of data, (ii) semantic relationships among the objects in the dataset are represented using the containment relationship.The main features of Virgilio are: to be parametric with respect to the explored database, to automatically produce an user oriented view of the dataset and to describe visualized data by means of the VRML language.A system prototype is currently being implemented. As an example, we provide a set of snapshots showing the scenes built by Virgilio to represent the result of queries defined on a database of musical CD records.},
booktitle = {Proceedings of the Workshop on Advanced Visual Interfaces},
pages = {263–265},
numpages = {3},
location = {Gubbio, Italy},
series = {AVI '96}
}

@inproceedings{10.1145/948449.948493,
author = {Missikoff, M. and Pizzicannella, R.},
title = {Interactive and Visual Environment Supporting Conceptual Modeling of Complex OODB Applications},
year = {1996},
isbn = {0897918347},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/948449.948493},
doi = {10.1145/948449.948493},
abstract = {In this paper we present the graphical user interface of Mosaico, an environment for the analysis and conceptual modeling of Object-Oriented database applications. Mosaico is based on a formalism, the Object-Oriented conceptual language TQL++, that appears more friendly than others. Neverthless, to relieve the designer from knowing the details of TQL++, we developed an iconic interface that guides the construction of a database application specification. The output of the conceptual modeling phase is a knowledge base, which can be verified statically and, once transformed into executable code, can be tested with sample data. Furthermore, Mosaico is capable to present the content of a conceptual model in a diagrammatic form. This facility has been implemented within an abstract diagram approach, which guarantees a high level of independence with respect to the drawing tool.},
booktitle = {Proceedings of the Workshop on Advanced Visual Interfaces},
pages = {266–268},
numpages = {3},
location = {Gubbio, Italy},
series = {AVI '96}
}

@inproceedings{10.1145/948449.948494,
author = {Pelachaud, Catherine},
title = {Simulation of Face-to-Face Interaction},
year = {1996},
isbn = {0897918347},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/948449.948494},
doi = {10.1145/948449.948494},
abstract = {We present an implemented system that generates automatically verbal and nonverbal behaviors during a conversation between 3D synthetic agents. Dialogue with its appropriate intonation as well as the accompanying facial expression, gaze and gesture are computed. Our system integrates rules linking words and intonation, facial expression and intonation, gesture and words, gesture and intonation, gaze and intonation extracted from cognitive science studies. In the present paper we are concentrated on gaze pattern during speech.},
booktitle = {Proceedings of the Workshop on Advanced Visual Interfaces},
pages = {269–271},
numpages = {3},
location = {Gubbio, Italy},
series = {AVI '96}
}

@inproceedings{10.1145/948449.948495,
author = {Roselli, Teresa and Donfrancesco, Antonietta Di and Loverro, Stefania},
title = {HyperPro: An Intelligent Hypermedia System for Learning Logic Programming},
year = {1996},
isbn = {0897918347},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/948449.948495},
doi = {10.1145/948449.948495},
abstract = {Hypermedia technology has aroused considerable interest in didactic environments, owing to its versatility in realizing didactic software where the attention is shifted away from the teaching towards the learning process. Interacting with a didactic hypermedia, the learner can construct an entirely personal instructional path, in a wide variety of formats, tailored to his own aims and a priori knowledge.However, since hypertext/hypermedia makes it possible to construct learning paths through exploration, although it stimulates more talented students, it penalizes those less able to manage their learning paths alone. It is thus not the ideal environment for teaching such knowledge as programming languages, for instance.This consideration led us to realize HyperPro, an intelligent hypermedia system for learning logic programming and Prolog which contains a tutorial component built with A.I. techniques, which can follow the student along his instructional path and suggest the next step if necessary. As the system is integrated with the Prolog environment, it enables real training activities to be performed, monitored by the tutorial component. A fundamental characteristic of HyperPro is the graphical user interface which is easy to use, so the learner can concentrate on the instructional aims, without wasting time trying to understand the implementation environment.It is realized in the Toolbook-Openscript environment and integrated with the Prolog-2 interpreter by Expert Systems International.},
booktitle = {Proceedings of the Workshop on Advanced Visual Interfaces},
pages = {272–274},
numpages = {3},
location = {Gubbio, Italy},
series = {AVI '96}
}

