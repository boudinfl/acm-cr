@inproceedings{10.1145/3248272,
author = {Bernstein, P. A.},
title = {Session Details: Session 1},
year = {1983},
isbn = {0897910974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3248272},
doi = {10.1145/3248272},
booktitle = {Proceedings of the 2nd ACM SIGACT-SIGMOD Symposium on Principles of Database Systems},
numpages = {1},
location = {Atlanta, Georgia},
series = {PODS '83}
}

@inproceedings{10.1145/588058.588060,
author = {Fischer, Michael J. and Lynch, Nancy A. and Paterson, Michael S.},
title = {Impossibility of Distributed Consensus with One Faulty Process},
year = {1983},
isbn = {0897910974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/588058.588060},
doi = {10.1145/588058.588060},
abstract = {The consensus problem involves an asynchronous system of processes, some of which may be unreliable. The problem is for the reliable processes to agree on a binary value. We show that every protocol for this problem has the possibility of nontermination, even with only one faulty process. By way of contrast, solutions are known for the synchronous case, the "Byzantine Generals" problem.},
booktitle = {Proceedings of the 2nd ACM SIGACT-SIGMOD Symposium on Principles of Database Systems},
pages = {1–7},
numpages = {7},
location = {Atlanta, Georgia},
series = {PODS '83}
}

@inproceedings{10.1145/588058.588061,
author = {Goodman, Nathan and Skeen, Dale and Chan, Arvola and Dayal, Umeshwar and Fox, Stephen and Ries, Daniel},
title = {A Recovery Algorithm for a Distributed Database System},
year = {1983},
isbn = {0897910974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/588058.588061},
doi = {10.1145/588058.588061},
abstract = {We describe a reliability algorithm being considered for DDM, a distributed database system under development at Computer Corporation of America. The algorithm is designed to tolerate clean site failures in which sites simply stop running. The algorithm allows the system to reconfigure itself to run correctly as sites fail and recover. The algorithm solves the subproblems of atomic commit and replicated data handling in an integrated manner.},
booktitle = {Proceedings of the 2nd ACM SIGACT-SIGMOD Symposium on Principles of Database Systems},
pages = {8–15},
numpages = {8},
location = {Atlanta, Georgia},
series = {PODS '83}
}

@inproceedings{10.1145/588058.588062,
author = {Skeen, Dale},
title = {Determining the Last Process to Fail},
year = {1983},
isbn = {0897910974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/588058.588062},
doi = {10.1145/588058.588062},
booktitle = {Proceedings of the 2nd ACM SIGACT-SIGMOD Symposium on Principles of Database Systems},
pages = {16–24},
numpages = {9},
location = {Atlanta, Georgia},
series = {PODS '83}
}

@inproceedings{10.1145/3248273,
author = {Chandra, A. K.},
title = {Session Details: Session 2},
year = {1983},
isbn = {0897910974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3248273},
doi = {10.1145/3248273},
booktitle = {Proceedings of the 2nd ACM SIGACT-SIGMOD Symposium on Principles of Database Systems},
numpages = {1},
location = {Atlanta, Georgia},
series = {PODS '83}
}

@inproceedings{10.1145/588058.588064,
author = {Chin, Francis and Ramarao, K. V. S.},
title = {Optimal Termination Protocols for Network Partitioning},
year = {1983},
isbn = {0897910974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/588058.588064},
doi = {10.1145/588058.588064},
abstract = {Commit protocols guarantee the consistency of distributed databases in absence of any failures. A commit protocol is resilient to a class of failures if it is possible to guarantee that a) databases at all operational sites in presence of these failures are consistent and b) other sites can be recovered consistently with these sites when the failure is repaired. Such a commit protocol is called nonblocking if no operational site needs to wait on a transaction which is incomplete at the time of the failure. It is known that no nonblocking commit protocol resilient to network partitioning exists. In this paper, the possible termination protocols of commit protocols are studied in the context of network partitioning. A formal model for termination protocols is introduced and a general logical interpretation of termination protocols is presented. The model makes use of all the information that is available in a component of the partition --- namely, the constituent sites and their respective states at the time of partition. Optimality measures for the termination protocols in terms of the number of waiting components and average number of waiting sites are introduced and protocols optimal under these measures are produced for all the possible centralized and decentralized commit protocols. It is proved that quorum-based termination protocols indeed perform very well in the presence of network partitioning. If the central site(s) is reliable, we can prove that centralized commit protocols indeed perform better than all decentralized ones. Thus, the general preference for centralized commit protocols is justified.},
booktitle = {Proceedings of the 2nd ACM SIGACT-SIGMOD Symposium on Principles of Database Systems},
pages = {25–35},
numpages = {11},
location = {Atlanta, Georgia},
series = {PODS '83}
}

@inproceedings{10.1145/588058.588065,
author = {Casanova, M. A. and Vidal, V. M. P.},
title = {Towards a Sound View Integration Methodology},
year = {1983},
isbn = {0897910974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/588058.588065},
doi = {10.1145/588058.588065},
abstract = {View integration is investigated with the help of three classes of interrelational dependencies, inclusion dependencies, exclusion dependencies and union functional dependencies. The process of view integration is divided into two steps, combination and optimization. View combination consists in defining new interrelational dependencies that capture similarities between different views. The optimization step tries to reduce redundancy and the size of the schema. Finally, general results about interrelational dependencies are presented that lead to an optimization procedure for a restricted class of schemas.},
booktitle = {Proceedings of the 2nd ACM SIGACT-SIGMOD Symposium on Principles of Database Systems},
pages = {36–47},
numpages = {12},
location = {Atlanta, Georgia},
series = {PODS '83}
}

@inproceedings{10.1145/588058.588066,
author = {Sciore, Edward},
title = {Inclusion Dependencies and the Universal Instance},
year = {1983},
isbn = {0897910974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/588058.588066},
doi = {10.1145/588058.588066},
abstract = {The power of the relational model with inclusion dependencies is compared with that of the universal instance model. A characterization of allowable sets of inclusion dependencies is made, the relational and universal instance models are proved equivalent given this restriction.},
booktitle = {Proceedings of the 2nd ACM SIGACT-SIGMOD Symposium on Principles of Database Systems},
pages = {48–57},
numpages = {10},
location = {Atlanta, Georgia},
series = {PODS '83}
}

@inproceedings{10.1145/588058.588067,
author = {Mitchell, John C.},
title = {Inference Rules for Functional and Inclusion Dependencies},
year = {1983},
isbn = {0897910974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/588058.588067},
doi = {10.1145/588058.588067},
abstract = {A set Σ of functional dependencies and inclusion dependencies implies a single dependency σ if all databases (finite and infinite) which satisfy Σ also satisfy σ. This paper presents complete inference rules for deducing implications of inclusion and functional dependencies. The results of [5] suggest that the implication problem for functional and inclusion dependencies together has no simple axiomatization satisfying a natural set of conditions. Out of necessity, the inference rules presented here do not satisfy the conditions assumed in [5].},
booktitle = {Proceedings of the 2nd ACM SIGACT-SIGMOD Symposium on Principles of Database Systems},
pages = {58–69},
numpages = {12},
location = {Atlanta, Georgia},
series = {PODS '83}
}

@inproceedings{10.1145/3248274,
author = {Sevcik, K. C.},
title = {Session Details: Session 3},
year = {1983},
isbn = {0897910974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3248274},
doi = {10.1145/3248274},
booktitle = {Proceedings of the 2nd ACM SIGACT-SIGMOD Symposium on Principles of Database Systems},
numpages = {1},
location = {Atlanta, Georgia},
series = {PODS '83}
}

@inproceedings{10.1145/588058.588069,
author = {Munro, J. Ian and Poblete, Patricio V.},
title = {A Discipline for Robustness or Storage Reduction in Binary Search Trees},
year = {1983},
isbn = {0897910974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/588058.588069},
doi = {10.1145/588058.588069},
abstract = {We develop a method of representing binary search trees in an environment in which pointers and other structural information may be "lost" or "maliciously altered". Our fault tolerant representation permits any 2 field changes to be detected and any 1 to be corrected without significantly increasing to storage requirements of the binary tree. The detection and correction procedures applied to the entire tree require 0(n) time.Our discipline is also used to represent binary search trees with a single pointer per datum without altering the cost of searching or updating. While our scheme can be applied in conjunction with any underlying tree balancing scheme ([AVL], bounded balance [Nievergelt et al] etc), if no balancing scheme is employed, the trees we form will have significantly shorter search paths than those formed using the straightforward algorithm.},
booktitle = {Proceedings of the 2nd ACM SIGACT-SIGMOD Symposium on Principles of Database Systems},
pages = {70–75},
numpages = {6},
location = {Atlanta, Georgia},
series = {PODS '83}
}

@inproceedings{10.1145/588058.588070,
author = {Burkhard, Walter A.},
title = {Interpolation-Based Index Maintenance},
year = {1983},
isbn = {0897910974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/588058.588070},
doi = {10.1145/588058.588070},
abstract = {A new interpolation-based order preserving hashing algorithm suitable for on-line maintenance of large dynamic external files under sequences of four kinds of operations insertion, update, deletion, and orthogonal range query is proposed. The scheme, an adaptation of linear hashing, requires no index or address directory structure and utilizes O(n) space for files containing n records, all of the benefits of linear hashing are inherited by this new scheme. File implementations yielding average successful search lengths much less than 2 and average unsuccessful search lengths much less than 4 for individual records are obtainable, the actual storage required is controllable by the implementor.},
booktitle = {Proceedings of the 2nd ACM SIGACT-SIGMOD Symposium on Principles of Database Systems},
pages = {76–89},
numpages = {14},
location = {Atlanta, Georgia},
series = {PODS '83}
}

@inproceedings{10.1145/588058.588071,
author = {Ouksel, Mohamed and Scheuermann, Peter},
title = {Storage Mappings for Multidimensional Linear Dynamic Hashing},
year = {1983},
isbn = {0897910974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/588058.588071},
doi = {10.1145/588058.588071},
booktitle = {Proceedings of the 2nd ACM SIGACT-SIGMOD Symposium on Principles of Database Systems},
pages = {90–105},
numpages = {16},
location = {Atlanta, Georgia},
series = {PODS '83}
}

@inproceedings{10.1145/588058.588072,
author = {Ellis, Carla Schlatter},
title = {Extendible Hashing for Concurrent Operations and Distributed Data},
year = {1983},
isbn = {0897910974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/588058.588072},
doi = {10.1145/588058.588072},
abstract = {The extendible hash file is a dynamic data structure that is an alternative to B-trees for use as a database index. While there have been many algorithms proposed to allow concurrent access to B trees similar solutions for extendible hash files have not appeared. In this paper, we present solutions to allow for concurrency that are based on locking protocols and minor modifications in the data structure.Another question that deserves consideration is whether these indexing structures can be adapted for use in a distributed database. Among the motivations for distributing data are increased availability and ease of growth, however, unless data structures in the access path are designed to support those goals, they may not be realized. We describe some first attempts at adapting extendible hash files for distributed data.},
booktitle = {Proceedings of the 2nd ACM SIGACT-SIGMOD Symposium on Principles of Database Systems},
pages = {106–116},
numpages = {11},
location = {Atlanta, Georgia},
series = {PODS '83}
}

@inproceedings{10.1145/3248275,
author = {Aho, A. V.},
title = {Session Details: Session 4},
year = {1983},
isbn = {0897910974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3248275},
doi = {10.1145/3248275},
booktitle = {Proceedings of the 2nd ACM SIGACT-SIGMOD Symposium on Principles of Database Systems},
numpages = {1},
location = {Atlanta, Georgia},
series = {PODS '83}
}

@inproceedings{10.1145/588058.588074,
author = {Gonnet, Gaston H.},
title = {Unstructured Data Bases or Very Efficient Text Searching},
year = {1983},
isbn = {0897910974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/588058.588074},
doi = {10.1145/588058.588074},
abstract = {We present several algorithms to search data bases that consist of text. The algorithms apply mostly to very large data bases that are difficult to structure.We describe algorithms which search the original data base without transformation and hence could be used as general text searching algorithms. We also describe algorithms requiring pre-processing, the best of them achieving a logarithmic behaviour. These efficient algorithms solve the "plagiarism" problem among n papers.The problem of misspellings, ambiguous spellings, simple errors, endings, positional information, etc is nicely treated using signature functions.},
booktitle = {Proceedings of the 2nd ACM SIGACT-SIGMOD Symposium on Principles of Database Systems},
pages = {117–124},
numpages = {8},
keywords = {signatures, unstructured data bases, bibliographic search, string searching, membership testing, full text search, information retrieval, pattern matching, text searching, hashing, inverted files},
location = {Atlanta, Georgia},
series = {PODS '83}
}

@inproceedings{10.1145/588058.588075,
author = {Dayal, Umeshwar},
title = {Processing Queries with Quantifiers a Horticultural Approach},
year = {1983},
isbn = {0897910974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/588058.588075},
doi = {10.1145/588058.588075},
abstract = {Most research on query processing has focussed on quantifier-free conjunctive queries. Existing techniques for processing queries with quantifiers either compile the query into a nested loop program or use variants of Codd's reduction from the Relational Calculus to the Relational Algebra. In this paper we propose an alternative technique that uses an algebra of graft and prune operations on trees. This technique provides a significant savings in space and time. We show how to transform a quantified conjunctive query into a sequence of graft and prune operations.},
booktitle = {Proceedings of the 2nd ACM SIGACT-SIGMOD Symposium on Principles of Database Systems},
pages = {125–136},
numpages = {12},
location = {Atlanta, Georgia},
series = {PODS '83}
}

@inproceedings{10.1145/588058.588076,
author = {Kintala, C. M. R.},
title = {Attributed Grammars for Query Language Translations},
year = {1983},
isbn = {0897910974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/588058.588076},
doi = {10.1145/588058.588076},
abstract = {Systems which translate queries written using a high-level conceptual model of a database into sequences of commands based on another model of the database are studied here. We take the view that these translators are similar to, albeit simpler than, the compilers for programming languages. Motivated by the recent interest in describing all the aspects of a compiler by an attributed grammar, we specify the formal syntax and semantics of two working database translators using attributed grammars. All the precise details about the parsing, the code optimization and the rules for preserving the query semantics are captured by those grammars. It is hoped that this approach brings the understanding of query languages closer to that of programming languages, and opens the possibility of applying the emerging technology of semantics-directed compiler construction to build query language translator-generators and to prove those translators correct.},
booktitle = {Proceedings of the 2nd ACM SIGACT-SIGMOD Symposium on Principles of Database Systems},
pages = {137–148},
numpages = {12},
location = {Atlanta, Georgia},
series = {PODS '83}
}

@inproceedings{10.1145/588058.588077,
author = {Cosmadakis, Stavros S.},
title = {The Complexity of Evaluating Relational Queries},
year = {1983},
isbn = {0897910974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/588058.588077},
doi = {10.1145/588058.588077},
abstract = {We prove a sequence of results which characterize exactly the complexity of problems related to the evaluation of relational queries consisting of projections and natural joins. We show that testing whether the result of a given query on a given relation equals some other given relation is Dp complete (Dp is a class which includes both NP and co-NP, and was recently introduced in a totally different context [13]). We show that testing inclusion or equivalence of queries with respect to a fixed relation (or of relations with respect to a fixed query) is Π2p-complete. We also examine the complexity of estimating the number of tuples of the answer.},
booktitle = {Proceedings of the 2nd ACM SIGACT-SIGMOD Symposium on Principles of Database Systems},
pages = {149–155},
numpages = {7},
location = {Atlanta, Georgia},
series = {PODS '83}
}

@inproceedings{10.1145/3248276,
author = {Rosenkrantz, D. J.},
title = {Session Details: Session 5},
year = {1983},
isbn = {0897910974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3248276},
doi = {10.1145/3248276},
booktitle = {Proceedings of the 2nd ACM SIGACT-SIGMOD Symposium on Principles of Database Systems},
numpages = {1},
location = {Atlanta, Georgia},
series = {PODS '83}
}

@inproceedings{10.1145/588058.588079,
author = {Carey, Michael J.},
title = {Granularity Hierarchies in Concurrency Control},
year = {1983},
isbn = {0897910974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/588058.588079},
doi = {10.1145/588058.588079},
abstract = {This paper shows that granularity hierarchies may be used with many types of concurrency control algorithms. Hierarchical versions of a validation algorithm, a timestamp algorithm, and a multiversion algorithm are given, and hierarchical algorithm issues relating to request escalation and distributed databases are discussed as well. It is argued that these hierarchical algorithms should offer improved performance for certain transaction mixes.},
booktitle = {Proceedings of the 2nd ACM SIGACT-SIGMOD Symposium on Principles of Database Systems},
pages = {156–165},
numpages = {10},
location = {Atlanta, Georgia},
series = {PODS '83}
}

@inproceedings{10.1145/588058.588080,
author = {Lynch, Nancy A.},
title = {Concurrency Control for Resilient Nested Transactions},
year = {1983},
isbn = {0897910974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/588058.588080},
doi = {10.1145/588058.588080},
booktitle = {Proceedings of the 2nd ACM SIGACT-SIGMOD Symposium on Principles of Database Systems},
pages = {166–181},
numpages = {16},
location = {Atlanta, Georgia},
series = {PODS '83}
}

@inproceedings{10.1145/588058.588081,
author = {Hsu, Meichun and Madnick, Stuart E.},
title = {Hierarchical Database Decomposition: A Technique for Database Concurrency Control},
year = {1983},
isbn = {0897910974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/588058.588081},
doi = {10.1145/588058.588081},
abstract = {The classical approaches to enforcing serializability are the two-phase locking technique and the timestamp ondering technique. Either approach requires that a read operation from a transaction be negistered (in the form of either a read timestamp or a read lock), so that a write operation from a concurrent transaction will not interfere improperly with the read operation. However, setting a lock or leaving a timestamp with a data element is an expensive operation. The purpose of the current research is to seek ways to reduce the overhead of synchronizing certain types of read accesses while achieving the goal of serializability.To this end, a new technique of concurrency control for database management systems has been proposed. The technique makes use of a hierarchical database decomposition, a procedure which decomposes the entire database into data segments based on the access pattern of the update transactions to be run in the system. A corresponding classification of the update transactions is derived where each transaction class is 'rooted' in one of the data segments. The technique requires a timestamp ordering protocol be observed for acesses within an update transaction's own root segment, but enables read accesses to other data segments to proceed without ever having to wait or to leave any trace of these accesses, thereby reducing the overhead of concurrency control. An algorithm for handling ad-hoc read-only transactions in this environment is also devised, which does not require read-only transactions to wait or set any read timestamp.},
booktitle = {Proceedings of the 2nd ACM SIGACT-SIGMOD Symposium on Principles of Database Systems},
pages = {182–191},
numpages = {10},
location = {Atlanta, Georgia},
series = {PODS '83}
}

@inproceedings{10.1145/588058.588082,
author = {Korth, Henry F. and Krishnamurthy, Ravi and Nigam, Anil and Robinson, John T.},
title = {A Framework for Understanding Distributed (Deadlock Detection) Algorithms},
year = {1983},
isbn = {0897910974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/588058.588082},
doi = {10.1145/588058.588082},
abstract = {Distributed algorithms tend to be difficult to understand and even more difficult to prove correct. Using distributed dead-lock detection as a running example this paper presents a framework for stating, understanding, and proving the correctness of distributed algorithms for decision problems. The framework consists of a series of complexity levels. To simplify the initial levels, we treat the data structure of the algorithm as a database, and use the database notions of views and transaction atomicity. For each complexity level, we state theorems that need to be proved for each algorithm. The framework is illustrated using several existing deadlock detection algorithms. Finally, it is shown that the framework suggests new algorithms using the best features of several existing algorithms.},
booktitle = {Proceedings of the 2nd ACM SIGACT-SIGMOD Symposium on Principles of Database Systems},
pages = {192–202},
numpages = {11},
location = {Atlanta, Georgia},
series = {PODS '83}
}

@inproceedings{10.1145/3248277,
author = {Beeri, C.},
title = {Session Details: Session 6},
year = {1983},
isbn = {0897910974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3248277},
doi = {10.1145/3248277},
booktitle = {Proceedings of the 2nd ACM SIGACT-SIGMOD Symposium on Principles of Database Systems},
numpages = {1},
location = {Atlanta, Georgia},
series = {PODS '83}
}

@inproceedings{10.1145/588058.588084,
author = {Goodman, Nathan and Suri, Rajan and Tay, Y. C.},
title = {A Simple Analytic Model for Performance of Exclusive Locking in Database Systems},
year = {1983},
isbn = {0897910974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/588058.588084},
doi = {10.1145/588058.588084},
abstract = {Many different algorithms have been proposed for database concurrency control, and many more can be synthesized by combining locking and timestamping. The correctness of these algorithms is already well understood, their performance is not. We need a model to help us understand, compare and control the behavior of locking and timestamping we present here a model which we hope will eventually play such a role, but which we believe is simple to understand and use.},
booktitle = {Proceedings of the 2nd ACM SIGACT-SIGMOD Symposium on Principles of Database Systems},
pages = {203–215},
numpages = {13},
location = {Atlanta, Georgia},
series = {PODS '83}
}

@inproceedings{10.1145/588058.588085,
author = {Peterson, R. J. and Strickland, J. P.},
title = {Log Write-Ahead Protocols and IMS/VS Logging},
year = {1983},
isbn = {0897910974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/588058.588085},
doi = {10.1145/588058.588085},
booktitle = {Proceedings of the 2nd ACM SIGACT-SIGMOD Symposium on Principles of Database Systems},
pages = {216–243},
numpages = {28},
keywords = {database management system, resource consistency, transaction, system failure, process synchronization point, system log, database, recovery strategy},
location = {Atlanta, Georgia},
series = {PODS '83}
}

@inproceedings{10.1145/588058.588086,
author = {Hadzilacos, Vassos},
title = {An Operational Model for Database System Reliability},
year = {1983},
isbn = {0897910974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/588058.588086},
doi = {10.1145/588058.588086},
booktitle = {Proceedings of the 2nd ACM SIGACT-SIGMOD Symposium on Principles of Database Systems},
pages = {244–257},
numpages = {14},
location = {Atlanta, Georgia},
series = {PODS '83}
}

@inproceedings{10.1145/588058.588087,
author = {Murthy, Kowtha and Kam, John and Krishnamoorthy, M. S.},
title = {An Approximation Algorithm to the File Allocation Problem in Computer Networks},
year = {1983},
isbn = {0897910974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/588058.588087},
doi = {10.1145/588058.588087},
booktitle = {Proceedings of the 2nd ACM SIGACT-SIGMOD Symposium on Principles of Database Systems},
pages = {258–266},
numpages = {9},
location = {Atlanta, Georgia},
series = {PODS '83}
}

@inproceedings{10.1145/3248278,
author = {Fagin, R.},
title = {Session Details: Session 7},
year = {1983},
isbn = {0897910974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3248278},
doi = {10.1145/3248278},
booktitle = {Proceedings of the 2nd ACM SIGACT-SIGMOD Symposium on Principles of Database Systems},
numpages = {1},
location = {Atlanta, Georgia},
series = {PODS '83}
}

@inproceedings{10.1145/588058.588089,
author = {Goodman, Nathan and Shmueli, Oded and Tay, Y. C.},
title = {GYO Reductions, Canonical Connections, Tree and Cyclic Schemas and Tree Projections},
year = {1983},
isbn = {0897910974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/588058.588089},
doi = {10.1145/588058.588089},
abstract = {Database schemas may be partitioned into two sub-classes tree schemas and cyclic schemas. The analysis of tree vs cyclic schemas introduced the concepts of GYO reductions, canonical connections and tree projections. This paper investigates the intricate relationships among these concepts in the context of universal relation databases.},
booktitle = {Proceedings of the 2nd ACM SIGACT-SIGMOD Symposium on Principles of Database Systems},
pages = {267–278},
numpages = {12},
location = {Atlanta, Georgia},
series = {PODS '83}
}

@inproceedings{10.1145/588058.588090,
author = {Maier, David and Ullman, Jeffrey D. and Vardi, Moshe Y.},
title = {The Revenge of the JD},
year = {1983},
isbn = {0897910974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/588058.588090},
doi = {10.1145/588058.588090},
abstract = {Manifestations of the "universal relation assumption" can be seen either as definitions of a one-relation user view of data, or as algorithms for answering queries about arbitrary sets of attributes. In this paper we explore equivalences between these two points of view. We show that if the user's view is the representative instance, then our ability to answer queries about the universal relation, by applying relational algebra to the actual database, is equivalent to a "boundedness" condition on the dependencies of the database scheme. Further, whenever this condition holds, there is a finite union of lossless tableau mappings that produces the desired relation.},
booktitle = {Proceedings of the 2nd ACM SIGACT-SIGMOD Symposium on Principles of Database Systems},
pages = {279–287},
numpages = {9},
location = {Atlanta, Georgia},
series = {PODS '83}
}

@inproceedings{10.1145/588058.588091,
author = {Chan, Edward P. F. and Mendelzon, Alberto O.},
title = {Independent and Separable Database Schemes},
year = {1983},
isbn = {0897910974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/588058.588091},
doi = {10.1145/588058.588091},
abstract = {We propose and investigate the notion of separability to capture the design goal of independently updatable decompositions. As evidence in favor of separability as a natural concept of independence, we show that it is equivalent to a specialization of the abstract independent mappings defined by Bancilhon and SpyraLos. We then enaracterize separable schemes in the important case when the only constraints given are a set of functional dependencies and the join dependency for the database scheme. This characterization is also applicable to dependency preserving database schemes when a set of functional dependencies is given as constraint. Our characterization yields a polynomial-time algorithm for testing separability in these cases.},
booktitle = {Proceedings of the 2nd ACM SIGACT-SIGMOD Symposium on Principles of Database Systems},
pages = {288–296},
numpages = {9},
location = {Atlanta, Georgia},
series = {PODS '83}
}

@inproceedings{10.1145/588058.588092,
author = {Sacca, Domenico},
title = {On the Recognition of Coverings of Acyclic Database Hypergraphs},
year = {1983},
isbn = {0897910974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/588058.588092},
doi = {10.1145/588058.588092},
booktitle = {Proceedings of the 2nd ACM SIGACT-SIGMOD Symposium on Principles of Database Systems},
pages = {297–304},
numpages = {8},
location = {Atlanta, Georgia},
series = {PODS '83}
}

@inproceedings{10.1145/3248279,
author = {Ullman, J. D.},
title = {Session Details: Session 8},
year = {1983},
isbn = {0897910974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3248279},
doi = {10.1145/3248279},
booktitle = {Proceedings of the 2nd ACM SIGACT-SIGMOD Symposium on Principles of Database Systems},
numpages = {1},
location = {Atlanta, Georgia},
series = {PODS '83}
}

@inproceedings{10.1145/588058.588094,
author = {Imielinski, Tomasz and Lipski, Witold},
title = {Inverting Relational Expressions: A Uniform and Natural Technique for Various Database Problems},
year = {1983},
isbn = {0897910974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/588058.588094},
doi = {10.1145/588058.588094},
abstract = {Let f be a relational expression and let q be a relation. It appears, surprisingly enough, that the concept of the table introduced in order to represent incomplete information can be used as a tool for representing {r f(r) ⊇ q} for a class of relational expressions built up from projection, join and positive selection. This fact, together with some other known properties of tables has wide applications and leads to a new technique for expressing and solving many database problems, especially those concerned with views. This technique is, we believe, more natural and systematic than those previously used such as tableau techniques. Some applications, like view dependencies, translating states between views and the view equivalence problem are presented.},
booktitle = {Proceedings of the 2nd ACM SIGACT-SIGMOD Symposium on Principles of Database Systems},
pages = {305–311},
numpages = {7},
location = {Atlanta, Georgia},
series = {PODS '83}
}

@inproceedings{10.1145/588058.588095,
author = {Abiteboul, S. and Spyratos, M. and Spyratos, N.},
title = {Information Theoretic Aspects of Data Bases},
year = {1983},
isbn = {0897910974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/588058.588095},
doi = {10.1145/588058.588095},
booktitle = {Proceedings of the 2nd ACM SIGACT-SIGMOD Symposium on Principles of Database Systems},
pages = {312–316},
numpages = {5},
location = {Atlanta, Georgia},
series = {PODS '83}
}

@inproceedings{10.1145/588058.588096,
author = {Cosmadakis, Stavros S. and Papadimitriou, Christos H.},
title = {Updaies of Relational Views},
year = {1983},
isbn = {0897910974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/588058.588096},
doi = {10.1145/588058.588096},
abstract = {We study the problem of translating updates of database views. View updates are disambiguated by requning that a specified view complement (i.e. a second view which contnms all the information omitted from the given view) remains constant during the translation. We study some of the computational problems related to the application of this general methodology in the context of relational databases. We restrict our attention to projective views of databases which consist of a single relation and satisfy functional dependencies. We first characterize complementary views and show that finding a minimum complement of a given view is NP-complete. We then study in detail the problem of translating the insertion of a tuple into a view and extend our results to the cases of deletion and replacement of a tuple. Finally we define and study a new kind of dependencies the explicit functional dependencies, which intuitively state that some part of the database information can be computed from the rest.},
booktitle = {Proceedings of the 2nd ACM SIGACT-SIGMOD Symposium on Principles of Database Systems},
pages = {317–331},
numpages = {15},
location = {Atlanta, Georgia},
series = {PODS '83}
}

@inproceedings{10.1145/3248280,
author = {Yannakakis, M.},
title = {Session Details: Session 9},
year = {1983},
isbn = {0897910974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3248280},
doi = {10.1145/3248280},
booktitle = {Proceedings of the 2nd ACM SIGACT-SIGMOD Symposium on Principles of Database Systems},
numpages = {1},
location = {Atlanta, Georgia},
series = {PODS '83}
}

@inproceedings{10.1145/588058.588098,
author = {Ginsburg, Seymour and Hull, Richard},
title = {Sort Sets in the Relational Model},
year = {1983},
isbn = {0897910974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/588058.588098},
doi = {10.1145/588058.588098},
abstract = {The notion of "sort set" is introduced here to formalize the fact that certain database relations can be sorted so that two or more columns are simultaneously listed in order. This notion is shown to be applicable in several ways to enhance the efficiency of an implemented database. A characterization of when order dependency implies the existence of sort sets in a database is presented, along with several corollaries concerning conplexlty, Armstrong relations and cliques of certain graphs.Sort-set dependencies are then introduced A (finite) sound and complete set of inference rules for sort-set deoendencies is presented, but there is no such set for functional and sort-set dependencies taken together. Deciding logical immplication for sort-set dependencies is proved to be polynomial, but if functional dependencies are included the problem is co-NP complete. Each set of sort-set and functional dependencies is shown to have an Armstrong relation A natural generalization of Armstrong relation, here called "separator," is given and then used to study the relationship between order and sort-set dependencies.},
booktitle = {Proceedings of the 2nd ACM SIGACT-SIGMOD Symposium on Principles of Database Systems},
pages = {332–339},
numpages = {8},
location = {Atlanta, Georgia},
series = {PODS '83}
}

@inproceedings{10.1145/588058.588099,
author = {Beeri, C. and Kifer, M.},
title = {Elimination of Intersection Amomalies from Database Schemes},
year = {1983},
isbn = {0897910974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/588058.588099},
doi = {10.1145/588058.588099},
abstract = {The desirability of acyclic database scheme is well argued in [L,BFMY]. When a scheme is described by multivalued dependencies, acyclicity means that the dependencies do not split each other's left-hand side and do not form intersection anomalies. We show that if the second condition fails to hold, the scheme can be amended so that it holds. The basic step is to add one attribute and some dependencies to resolve one intersection anomaly. This step generates an extension of the given scheme in which the anomaly does not exists. We also analyze the repetitive use of the basic step and prove that the transformation so defined removes all intersection anomalies. Finally, we characterize a class of attributes that can be removed from the final scheme, leaving it acyclic.},
booktitle = {Proceedings of the 2nd ACM SIGACT-SIGMOD Symposium on Principles of Database Systems},
pages = {340–351},
numpages = {12},
location = {Atlanta, Georgia},
series = {PODS '83}
}

@inproceedings{10.1145/588058.588100,
author = {Fagin, Ronald and Ullman, Jeffrey D. and Vardi, Moshe Y.},
title = {On the Semantics of Updates in Databases},
year = {1983},
isbn = {0897910974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/588058.588100},
doi = {10.1145/588058.588100},
abstract = {We suggest here a methodology for updating databases with integrity constraints and rules for deriving inexphcit information. First we consider the problem of updating arbitrary theories by inserting into them or deleting from them arbitrary sentences. The solution involves two key ideas when replacing an old theory by a new one we wish to minimize the change in the theory, and when there are several theories that involve minimal changes, we look for a new theory that reflects that ambiguity. The methodology is also adapted to updating databases, where different facts can carry different priorities, and to updating user views.},
booktitle = {Proceedings of the 2nd ACM SIGACT-SIGMOD Symposium on Principles of Database Systems},
pages = {352–365},
numpages = {14},
location = {Atlanta, Georgia},
series = {PODS '83}
}

@inproceedings{10.1145/588058.588101,
author = {Graham, Marc H.},
title = {Path Expressions in Databases},
year = {1983},
isbn = {0897910974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/588058.588101},
doi = {10.1145/588058.588101},
booktitle = {Proceedings of the 2nd ACM SIGACT-SIGMOD Symposium on Principles of Database Systems},
pages = {366–378},
numpages = {13},
location = {Atlanta, Georgia},
series = {PODS '83}
}

@inproceedings{10.1145/3248281,
author = {Ginsburg, S.},
title = {Session Details: Session 10},
year = {1983},
isbn = {0897910974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3248281},
doi = {10.1145/3248281},
booktitle = {Proceedings of the 2nd ACM SIGACT-SIGMOD Symposium on Principles of Database Systems},
numpages = {1},
location = {Atlanta, Georgia},
series = {PODS '83}
}

@inproceedings{10.1145/588058.588103,
author = {Sciore, Edward},
title = {Improving Database Schemes by Adding Attributes},
year = {1983},
isbn = {0897910974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/588058.588103},
doi = {10.1145/588058.588103},
abstract = {This paper examines the technique of adding attributes to a relational database scheme. It is shown that doing so can result in an improvement in the conceptual simplicity and efficiency of the scheme. Some well-known non-independent schemes are made independent by adding attributes, results are given to support the conjecture that all schemes can be made independent as well.},
booktitle = {Proceedings of the 2nd ACM SIGACT-SIGMOD Symposium on Principles of Database Systems},
pages = {379–383},
numpages = {5},
location = {Atlanta, Georgia},
series = {PODS '83}
}

@inproceedings{10.1145/588058.588104,
author = {Abiteboul, Serge},
title = {Disaggregaticns in Databases},
year = {1983},
isbn = {0897910974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/588058.588104},
doi = {10.1145/588058.588104},
booktitle = {Proceedings of the 2nd ACM SIGACT-SIGMOD Symposium on Principles of Database Systems},
pages = {384–388},
numpages = {5},
location = {Atlanta, Georgia},
series = {PODS '83}
}

@inproceedings{10.1145/588058.588105,
author = {Vianu, Victor},
title = {Dynamic Constraints and Database Evolution},
year = {1983},
isbn = {0897910974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/588058.588105},
doi = {10.1145/588058.588105},
abstract = {A simple extension of the relational model is introduced to study the effects of dynamic constraints on database evolution. Both static and dynamic constraints are used in conjunction with this "dynamic" extension of the relational model. The static constraints considered here are functional dependencies (fd's). The dynamic constraints involve global updates and are restricted to certain analogs of fd's, called "dynamic" fd's. The results concern the interaction between the static and dynamic constraints. The effect of the past history of the database on the static constraints is investigated using the notions of age and age-closure. The connection between the static constraints and the future evolution of the database is described through the notions of survivability and survivability-closure.},
booktitle = {Proceedings of the 2nd ACM SIGACT-SIGMOD Symposium on Principles of Database Systems},
pages = {389–399},
numpages = {11},
location = {Atlanta, Georgia},
series = {PODS '83}
}

@inproceedings{10.1145/588058.588106,
author = {Hegner, Stephen J.},
title = {Algebraic Aspects of Relational Database Decomposition},
year = {1983},
isbn = {0897910974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/588058.588106},
doi = {10.1145/588058.588106},
abstract = {An algebraic framework for investigating the problem of decomposing a relational database schema into components is developed. It is argued that the views of a relational schema which are to be the components of a decomposition should form a finite atomic Boolean algebra. The unit of the algebra is the identity view, and the zero is the null view. The join operation in this algebra is to be a generalization of the usual concept of join; the resulting view should contain precisely the representation contained in the two component views as a unit. The meet operation in this algebra is to measure the interdependence of the components, and is to be zero if and only if they are independent. A decomposition of the schema is then to be a decomposition of the identity component, with the ultimate decomposition the one consisting entirely of atoms.The thrust of the results is in two directions. First, the general properties of relational schemata particular to this problem are developed, within the framework of first-order logic. The key formulations are those of abstract meet and join of schemata. Using these formulations, it is shown that a completely general decomposition theory is impossible. The second part of the work islolates a relatively large class of schemata which do admit reasonable decompositions. These schemata include all of the usual decomposition problems, including project-join decompositions and horizontal decompositions of schemata constrained by universal Horn sentences.},
booktitle = {Proceedings of the 2nd ACM SIGACT-SIGMOD Symposium on Principles of Database Systems},
pages = {400–413},
numpages = {14},
location = {Atlanta, Georgia},
series = {PODS '83}
}

