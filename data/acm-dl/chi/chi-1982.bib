@inproceedings{10.1145/800049.801744,
author = {Barnard, P. and Hammond, N. and MacLean, A. and Morton, J.},
title = {Learning and Remembering Interactive Commands},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801744},
doi = {10.1145/800049.801744},
abstract = {There is a rich and expanding folklore concerning the consequences of inappropriate naming of computer commands. The problems are particularly acute for occasional users of interactive systems who may be unfamiliar with the jargon of computing. While “naming” has long been of interest to philosophers, linguists and psychologists [2], there is little systematic research on the psychological processes involved in the understanding and acquisition of the vocabularies of interactive computer systems.Since the names for interactive commands tend to be drawn from the wider vocabulary of natural language, occasional users are faced with the task of understanding, learning and remembering new meanings for the words.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {2–7},
numpages = {6},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801745,
author = {Black, John B. and Moran, Thomas P.},
title = {Learning and Remembering Command Names},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801745},
doi = {10.1145/800049.801745},
abstract = {Natural language would seem to have a strong effect on users' behavior with artificial command languages for interacting with computer systems.We can divide the potential effects of natural language on command languages into: (a) effects on the names of commands, (b) effects on command arguments, and (c) effects on how command-argument units are interrelated (see Black and Sebrechts [2]). Others have investigated arguments (Barnard et al. [1]) and command-argument interrelations (Carroll [4]). In this paper, we describe our research concerning the first of these—namely, how the names of commands effect the learnability and memorability of the commands. Our investigation uses text-editing as the specific domain.Applied research in human-computer interaction is a subtle affair, with many pitfalls awaiting the unwary researcher. Thus, in addition to presenting research results, we will conclude this paper with some methodological lessons.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {8–11},
numpages = {4},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801746,
author = {Rosenberg, Jarrett},
title = {Evaluating the Suggestiveness of Command Names},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801746},
doi = {10.1145/800049.801746},
abstract = {An important feature of the design of human-computer interfaces is that of command languages: the vocabulary and syntax that allow a user to express commands to the system. If we look at command languages from the standpoint of natural languages, rather than formal ones, then there are three aspects to their user interface. The first is the overall structure of the user-system dialogue—its pragmatics, so to speak (e.g., [3]), which includes issues of contextual reference, presuppositions, and so on. The second aspect of command languages is their syntax (e.g., [1], [4]). The important issue here is the trade-off between consistency of the syntax and its similarity to that of natural language. The third aspect of command languages is their semantics, primarily that of their commands. Most command languages are fairly small, with simple data and control structures, and so their semantics are fairly trivial. More important is the “lexical” semantics of commands and their arguments and parameters. The crucial factor here is the names given to the entities and operations in the system by the command language: if those names are not apt, performance will be impaired just as with poorly designed syntax or dialogue structure. This paper investigates the psycholinguistic aspects of this naming problem.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {12–16},
numpages = {5},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801747,
author = {Scapin, Dominique L.},
title = {Computer Commands Labelled by Users versus Imposed Commands and the Effect of Structuring Rules on Recall},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801747},
doi = {10.1145/800049.801747},
abstract = {In the office of the future, computers will be found in the work environment to accomplish many various tasks. Often times, one will find computer command languages built from words of natural language, thereby facilitating the use of these new office automation systems for users inexperienced with computers. The study presented here focuses on very simple languages, without embedded features and where each computer command label corresponds to only one function. Three different approaches have been taken in order to improve the design of such simple languages: evaluation of existing languages (Scapin [1]); study of experimental languages that differ on linguistic or semantic variables (Hammond et al. [2]; Carroll [3]; Scapin [4]); research on the design of languages by the users themselves (Carroll [3]; Bisseret et Scapin [5]).},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {17–19},
numpages = {3},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801748,
author = {Hemenway, Kathleen},
title = {Psychological Issues in the Use of Icons in Command Menus},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801748},
doi = {10.1145/800049.801748},
abstract = {Graphic symbols are being used more and more frequently in computer applications, as high resolution displays with advanced graphic capabilities become more common (for example, see [14]). The motivations for using graphic symbols—or icons, as they have been called—in command menus are similar to the reasons graphic symbols have long been popular for use on maps.Their commercial and technical advantages aside, to a large extent the effects of icons on users' performance with a system are unknown. The study summarized here is an initial attempt to understand how commands are represented graphically, to identify the characteristics of icons that make them easy or difficult to comprehend, and to identify the characteristics that lead to retention of the icon-command correspondences. More generally, it is an initial attempt to identify how the user's ability to learn and understand a system is affected by the way in which the commands are represented.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {20–23},
numpages = {4},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801749,
author = {Marcus, Aaron},
title = {Typographic Design for Interfaces of Information Systems},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801749},
doi = {10.1145/800049.801749},
abstract = { Principles of information-oriented graphic design have been utilized in redesigning the interface for a large information management system. These principles are explained and examples of typical screen formats are shown to indicate the nature of improvements. },
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {26–30},
numpages = {5},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801750,
author = {Sauter, Steven L. and Gottlieb, Mark S. and Jones, Karen C.},
title = {A Systems Analysis of Stress-Strain in VDT Operation},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801750},
doi = {10.1145/800049.801750},
abstract = {The last half decade has witnessed a rapidly accelerating trend toward the application of video display terminal (VDT) technology for information management in the office workplace, and a growing body of scientific and anecdotal data on the implications of VDT use for the well-being of office workers [2,4,6-8,11,15,16]. A striking aspect of the research on this subject is the degree of conflict among reports regarding the type, magnitude, and causes of adverse changes in the health, comfort, and satisfaction of the VDT user, as is apparent in a recent review by Dainoff [5].Methodological limitations of much of the work to date probably account for some of these inconsistencies. Many of the studies are demonstrations, or pre-experimental or field investigations with control or statistical measures which allow at best, only general and limited inferences regarding the effects of VDT work [4,8,11,16]. A more serious limitation involves the conceptualization or operational definition of VDT use which in turn determines the elements or factors which eventually figure into a VDT stress model or study design. As an operation or job demand, VDT use is clearly not a unidimensional phenomenon. Based upon findings in an investigation of health complaints and job stress surrounding VDT use in newspaper and insurance facilities, Smith, et al. [16] demonstrated that VDTs may present a wide range of organizational as well as physical or environmental job challenges. To date, numerous investigations have focused mainly on the physical ergonomic demands associated with VDT use [7]. A few have placed strong emphasis on job content, psychosocial, and related operational-organizational factors [8,11,16]. None have systematically examined the unique and integrated effects of these two sets of potential stressors. Smith, et al. [16] maintained that in studying the problems of VDT operators, the contributions of both work and workplace design factors and their interactions must be considered. This is the aim of the present study.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {31–35},
numpages = {5},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801751,
author = {Savage, Ricky E. and Habinek, James K. and Barnhart, Thomas W.},
title = {The Design, Simulation, and Evaluation of a Menu Driven User Interface},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801751},
doi = {10.1145/800049.801751},
abstract = {As the number of system users increases, the degree of formal training of the typical user declines. Techniques such as menu selection, which can best accommodate the novice user, almost necessarily must be included in a strategy for person-computer communication. Yet care must be taken that the experienced or sophisticated user is not encumbered with an interface that involves frustratingly slow entry of commands or procedures. This paper details the process and techniques required to develop and test an interface that would satisfy the needs of a broad spectrum of users. Two design and evaluation iterations are described.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {36–40},
numpages = {5},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801752,
author = {Bury, Kevin F. and Boyle, James M. and Evey, R. James and Neal, Alan S.},
title = {Windowing vs Scrolling on a Visual Display Terminal},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801752},
doi = {10.1145/800049.801752},
abstract = {To study a different star the astronomer moves his telescope. To study a different bacterium the biologist moves his microscope slide. In the case of the astronomer, it is the viewing instrument that is being moved, while in the case of the biologist it is the viewed object that is being moved. These scientists have no choice, the nature of their equipment requires that they operate in a pre-defined way. The user of a video display terminal (VDT), however, can be given a choice. The VDT user views a representation of an area of computer memory. In most cases the portion of memory the user wishes to examine is much larger than that which will fit on the screen at one time. For this reason almost all VDT's are equipped with some sort of “scroll function” that allows the user to display data that is located beyond the limits of the screen.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {41–44},
numpages = {4},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801753,
author = {Geiselman, Ralph E. and Samet, Michael G.},
title = {Notetaking and Comprehension for Computer-Displayed Messages: Personalized versus Fixed Formats},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801753},
doi = {10.1145/800049.801753},
abstract = {An experiment was performed to evaluate the usefulness of an option for users of an automated information system to construct their own preferred formats for receiving intelligence messages. It was hypothesized that such an option would enhance the acquisition and comprehension of intelligence data from each message. The results indicated that users who personalized the format arranged the message elements in an interpretable manner, and they took fewer notes during the subsequent paced presentation of messages in their individualized formats than users who received the messages in a reasonable, pre-experimentally fixed format. In addition, the users with personalized formats learned more with the fixed format. These data suggest that the personalization of the message format was useful and led to improved subjective organization of the intelligence data.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {45–50},
numpages = {6},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801754,
author = {Soloway, Elliot and Ehrlich, Kate and Bonar, Jeffrey},
title = {Tapping into Tacit Programming Knowledge},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801754},
doi = {10.1145/800049.801754},
abstract = {The Cognition and Programming Group at Yale University is engaged in two complementary efforts:1. exploring the programming process empirically, paying special attention to the knowledge and strategies which expert and non-experts employ, and2. building computer-based environments which aid novices learning to program.In this extended abstract we will focus on the empirical strand of our research program; in particular, we will describe an experimental technique we have just begun to use to more carefully study what it is that expert and novice programmers do—and don't—know. In [19, 20, 22, 18, 7] we describe additional empirical studies, while [21] describes MENO-II, our intelligent programming tutor for Pascal.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {52–57},
numpages = {6},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801755,
author = {Jayaraman, Sundaresan and Lee, Mary Jane and Konopasek, Milos},
title = {Human-Computer Interface Considerations in the Design of Personal Computer Software},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801755},
doi = {10.1145/800049.801755},
abstract = {This paper examines some aspects of the design considerations of the human-computer interface as related to personal computers. It is shown that the success of a popular personal computer software product, visiCalc, may be attributed to a thoughtful reconciliation of these design factors with the hardware constraints. The trends of advancement in personal computer software for management-science- engineering problem-solving and decision-making are exemplified by discussing the microcomputer implementation of the Question Answering System on mathematical models and related data bases.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {58–62},
numpages = {5},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801756,
author = {Malone, Thomas W.},
title = {Heuristics for Designing Enjoyable User Interfaces: Lessons from Computer Games},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801756},
doi = {10.1145/800049.801756},
abstract = {In this paper, I will discuss two questions: (1) Why are computer games so captivating? and (2) How can the features that make computer games captivating be used to make other user interfaces interesting and enjoyable to use?After briefly summarizing several studies of what makes computer games fun, I will discuss some guidelines for designing enjoyable user interfaces. Even though I will focus primarily on what makes systems enjoyable, I will suggest how some of the same features that make systems enjoyable can also make them easier to learn and to use.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {63–68},
numpages = {6},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801757,
author = {Webb, Ronald},
title = {Political Determinants of System Design and Content},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801757},
doi = {10.1145/800049.801757},
abstract = {Computerized information systems seemingly offer technical solutions to corporate organization and adjustment problems. This idea of the system as the solution has certainly become the focus of information industry rhetoric and sales propaganda. Industry advertising promotes ideas such as (1) the advantages of instant communication in the relative success of any business, or (2) the threat posed by the volume of information produced by a company and unorganized by a particular micro-system. The questions missing from the rhetoric and propaganda are what problems require solutions and what do those problems have to do with the capabilities of computerized information systems. The information industry has transformed these questions in a rather interesting way: they have been handed over to their sales and marketing divisions.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {70–73},
numpages = {4},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801758,
author = {Zoltan, Elizabeth},
title = {How Acceptable Are Computers to Professional Persons?},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801758},
doi = {10.1145/800049.801758},
abstract = {Although our lives are all touched by computers these days, a great many people seem to be ambivalent about them, either fearing them or exhibiting reluctance about interacting with them. The most relevant study about attitudes towards computers was conducted by Lee [1] in 1963. He found two major orthogonal factors: the computer viewed as a beneficial tool of man, and as a superhuman thinking machine that downgrades man's previously unique significance in the order of things. Not only have computers changed quite dramatically since 1963, they have also become increasingly common. It would seem likely then that attitudes towards computers have also changed and hence need to be re-evaluated in the present decade.In this study, the attitudes of certified public accountants (CPAs), lawyers, pharmacists, and physicians were investigated. Professionals were studied because many marketing and electronics analysts have commented that industry is currently designing computers for professional persons [2]. Computer availability, however, does not necessarily lead to computer acceptability. Therefore, the primary question this study sought to answer was - how acceptable are computers to professional persons?},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {74–77},
numpages = {4},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801759,
author = {Kraft, Philip and Strauss, David},
title = {Human Relations, Scientific Management, and Human Factors Research},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801759},
doi = {10.1145/800049.801759},
abstract = {Human Factors research is concerned primarily with minimizing unpredictable behavior in computer-based systems. Much Human Factors research stresses simplification of computer-based work into discrete, standard, and measurable sub-tasks. The performance of these elemental work-fragments can then be compared against “expert” performance times. In addition to increased worker output, simplified and standardized jobs allow managers to control work more completely. Similarly, standardized jobs usually allow the use of less-skilled labor.This aspect of Human Factors research is an outgrowth of Scientific Management (“time and motion” studies) and, ironically, the management theories of Charles Babbage, the 19th-century inventor of the computer. Scientific Management and Human Factors research share a number of important assumptions. For the most part, these assumptions have not been subjected to careful scrutiny. In time, they may prove the source of significant problems for both systems designers and users.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {78–79},
numpages = {2},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801760,
author = {Cordes, Richard E.},
title = {Software Guideline Development: Proposed Methodology},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801760},
doi = {10.1145/800049.801760},
abstract = {Too often Human Factors guidelines or checklists are of limited value. The reasons for following them and the degree to which they should be followed are not always apparent. These problems in conjunction with the fact that they are usually full of words or concepts that are not adequately defined, result in guidelines which are misused and/or grossly under-consulted.A methodology will be advocated that will help alleviate these problems. This methodology, when followed, will produce guidelines which can be shown to be effective and are unambiguous in their use and interpretation. Guidelines produced by this procedure become useful tools for objectively evaluating software products.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {82–84},
numpages = {3},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801761,
author = {Ball, Eugene and Hayes, Phil},
title = {A Test-Bed for User Interface Designs},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801761},
doi = {10.1145/800049.801761},
abstract = {Most presently available interactive computer interfaces treat their users in an unfriendly, uncooperative, and inflexible way, resulting in feelings of frustration and a conseqeuent loss of productivity for the users. These problems have led to attempts (e.g. [6, 8, 12, 13]) to make interfaces appear more friendly and cooperative through the addition of advanced interface features such as spelling correction, on-line help, personalized defaults, etc.. While common-sense suggests such features may be helpful, there is little hard evidence about how helpful they are or whether they are worth the overheads they entail. A primary reason for this lack of information is the practical difficulty of experimentation. Many of these features are time-consuming to implement, are usually implemented without adequate instrumentation, and are implemented in different and difficult to compare ways from system to system (see [10], for example). These problems in evaluation suggest the need for a test-bed interface in which various advanced features could be tried out in a consistent and adequately instrumented way with a variety of application systems. In this paper, we present a detailed rationale and a partially implemented design for a test-bed of this kind.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {85–88},
numpages = {4},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801762,
author = {Turoff, Murray and Hiltz, Starr Roxanne and Kerr, Elaine B.},
title = {Controversies in the Design of Computer-Mediated Communication Systems: A Delphi Study},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801762},
doi = {10.1145/800049.801762},
abstract = {Computer-mediated communication systems represent a fairly new development in interactive computer systems.This paper will summarize the procedures followed in the Delphi survey, and the results and will then turn to a more detailed treatment of the disagreements that were discovered, presenting the arguments which underlie the disagreements. We will conclude with a brief discussion of the extent to which Delphi approaches may be generally useful design tools for summarizing the “state of the art” and pinpointing research priorities for new types of systems. The purpose of the synthesis of design choices presented in this paper is to familiarize the reader with the range of capabilities and characteristics that currently exist, and to summarize the “collective wisdom” of designers so as to establish design guidelines and options for future systems.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {89–100},
numpages = {12},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801763,
author = {Roach, John and Hartson, H. Rex and Ehrich, Roger W. and Yunten, Tamer and Johnson, Deborah H.},
title = {DMS: A Comprehensive System for Managing Human-Computer Dialogue},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801763},
doi = {10.1145/800049.801763},
abstract = {As the complexity of human-computer interfaces increases, those who use these interfaces as well as those reponsible for their design have recognized an urgent need for substantive research in the human factors of software development [2], [5]. Because of the magnitude of the task of producing software for individual human-computer interfaces, appropriate tools are needed for defining and improving such interfaces, both in research and production environments. This paper describes the research being carried out to construct DMS (Dialogue Management System), which is a complete system for defining, modifying, executing, and metering human-computer dialogues.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {102–105},
numpages = {4},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801764,
author = {Tombaugh, Jo W. and McEwen, Scott A.},
title = {Comparison of Two Information Retrieval Methods on Videotex: Tree-Structure versus Alphabetical Directory},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801764},
doi = {10.1145/800049.801764},
abstract = {Videotex systems are two-way communnication systems intended to give users access to large amounts of stored information from their homes and offices. These systems link computer databases to modified television sets over the telephone network. A central computer is used as a large information storage device, monitoring requests for information from several users at one time, finding and sending the information to the person who requested it.It is possible however, that the addition of an inexpensive supplement to the hierarchical tree search will improve user search performance without substantially altering the cost-benefits of the menu selection approach. One such method of retrieval is the on-line alphabetical directory approach where users look for a search term from a list of alphabetically organized items by menu selection.An example will indicate the difference between this method and a typical hierarchical search:},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {106–110},
numpages = {5},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801765,
author = {Feldman, Michael B. and Rogers, George T.},
title = {Toward the Design and Development of Style-Independent Interactive Systems},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801765},
doi = {10.1145/800049.801765},
abstract = {The research project in which we are involved seeks to improve the technical climate for experimentation with the human factors of interactive systems by developing tool Kits to aid the experimenter [3,5].These capabilities are in two general areas: languages and metrics to support the specification of user interfaces [1] and the evaluation of them with respect to ergonomic factors; and tools to facilitate the development of user interfaces at moderate cost and with short lead time. The latter area, which we have called “style-independent interactive systems”, or “abstract interaction handlers”, is taken up in this report.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {111–116},
numpages = {6},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801766,
author = {Norcio, A. F.},
title = {Indentation, Documentation and Programmer Comprehension},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801766},
doi = {10.1145/800049.801766},
abstract = {Recent investigations into the psychological factors underlying computer programming have focused on the effects of internal documentation and statement indentation on programmer performance [1, 5, 7]. Using memory recall approaches several studies have concentrated on the relationship between logic segments of a program's algorithm and the memory organization of the programmer.Since memory organization appears to be a functional psychological process, it seems reasonable to assume that indentation and documentation function as aids to comprehension rather than as organizers for memory [4]. The purpose of this study was to examine experimentally the relationship between documentation, indentation and the comprehension of computer programs.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {118–120},
numpages = {3},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801767,
author = {Sheppard, Sylvia B. and Kruesi, Elizabeth and Bailey, John W.},
title = {An Empirical Evaluation of Software Documentation Formats},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801767},
doi = {10.1145/800049.801767},
abstract = {The success of any software development project depends in part on the quality of the communication among the individuals involved: users, designers, coders and managers. On large systems, a variety of individuals perform various tasks at different points in time. The efficiency and correctness with which later tasks are performed depends critically on the documentation supplied during previous phases of the development cycle. This paper describes a series of three experiments designed to examine the effects of documentation format on the performance of programmers on different software-related tasks.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {121–124},
numpages = {4},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801768,
author = {Brooks, Ruven},
title = {A Theoretical Analysis of the Role of Documentation in the Comprehension of Computer Programs},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801768},
doi = {10.1145/800049.801768},
abstract = { The Problem of Optimizing Computer Program Documentation Thls assessment is entlrely by trial and error, usually of the most informal and anecdotal kind. Given the propensity of computer sclence to invent and propose new kinds of documentation, a useful task for engineerlng psychology is the development of a set of design guides for the selection of these devices. Not only would such information be useful for assessing new devices, but it could also be used to suggest where existing devices could be improved. Hence, development of such design guides is a task of immediate and practical relevance to improving software development and maintenance.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {125–129},
numpages = {5},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801769,
author = {Goldstein, David K.},
title = {The Impact of Development Aids on the Systems Development Process},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801769},
doi = {10.1145/800049.801769},
abstract = {Increasing the productivity of programmers has become a “hot” topic with both data processing managers and information systems researchers. Currently, there are not enough systems analysts and programmers available to develop all the applications that users need. Consequently, there is a need to produce more output from the available programmers and analysts. This has led to the development of tools and methods that aid analysts and programmers in system development. For example, automatic code generators simplify programming and debugging for many applications. Structured analysis and design methods aid developers in determining user needs and developing system specifications.There has been a great deal of literature written addressing the question: What affects do systems development aids have on the productivity of systems development personnel? This paper will summarize this body of literature from a research perspective. It will concentrate on aids used in business application development, focusing on the early stages of the software lifecycle: systems analysis, design, and coding.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {130–134},
numpages = {5},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801770,
author = {Roberts, Teresa L. and Moran, Thomas P.},
title = {Evaluation of Text Editors},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801770},
doi = {10.1145/800049.801770},
abstract = {This paper presents a methodology for evaluating computer text editors from the viewpoint of their users—from novices learning the editor to dedicated experts who have mastered the editor. The dimensions which this methodology addresses are:—Time to perform edit tasks by experts.—Errors made by experts.—Learning of basic edit tasks by novices.—Functionality over all possible edit tasks.The methodology is objective and thorough, yet easy to use. The criterion of objectivity implies that the evaluation scheme not be biased in favor of any particular editor's conceptual model—its way of representing text and operations on the text. In addition, data is gathered by observing people who are equally familiar with each system. Thoroughness implies that several different aspects of editor usage be considered. Ease-of-use means that methodology is usable by editor designers, managers of word processing centers, or other non-psychologists who need this kind of information, but have limited time and equipment resources.In this paper, we explain the methodology first, then give some interesting empirical results from applying it to several editors.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {136–141},
numpages = {6},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801771,
author = {Good, Michael},
title = {An Ease of Use Evaluation of an Integrated Document Processing System},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801771},
doi = {10.1145/800049.801771},
abstract = {Designers of systems intended to be easy to use have many guidelines available to them in the literature. Most of these recommendations are based on the intuition and experiences of particular designers with particular systems. Very few of them have been evaluated experimentally, so one must be cautious not to attribute more authority to these guidelines than they deserve [6].This paper summarizes the results of an experimental evaluation of the Etude text processing system [8]. Section 2 provides a brief overview of Etude. Section 3 describes the development of suitable ease of use criteria. Section 4 presents the experimental protocol. Section 5 discusses the results of the evaluation. A complete description of the experiment can be found in [7].},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {142–147},
numpages = {6},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801772,
author = {Schneider, M. L. and Nudelman, S. and Hirsh-Pasek, K.},
title = {An Analysis of Line Numbering Strategies in Text Editors},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801772},
doi = {10.1145/800049.801772},
abstract = {Many techniques are employed in numbering lines for text editing. The simplest approach uses a single integer that changes each time a line is added or deleted (1). BASIC, in addition to other systems, uses fixed multi-digit numbers bound to each line. This approach has problems: only a fixed number of lines can be inserted between two consecutive lines of text, otherwise the original text must be renumbered. This negates one advantage of line numbers: the ability to compare different versions of the same document.In order to overcome these disadvantages, two basic schemes have been proposed and implemented. The following grammar defines the two schemes: fractional line numbering (FLN) and hierarchical line numbering (HLN).},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {148–151},
numpages = {4},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801773,
author = {Embley, David W. and Nagy, George},
title = {Can We Expect to Improve Text Editing Performance?},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801773},
doi = {10.1145/800049.801773},
abstract = {For some time now we have also been interested in studying human factors aspects of computer text editors. We have surveyed the literature [9], and we have conducted several investigations of our own [10] ranging from an application of file-comparison algorithms in editor research [1], through prediction of editing performance [7], to the design and implementation of SIMPLE, our own editing system for beginners [8, 11].Currently we are concentrating our efforts on gathering data to determine how much time users spend performing various editing activities. We intend to extend the work begun in previous studies, to investigate suboptimal editor performance including errors and nonoptimal means of achieving goals, and to study the broder aspects of editing such as file manipulation and job control that have largely been ignored.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {152–156},
numpages = {5},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801774,
author = {Harris, Randall R.},
title = {An Automated Office Communications Study in an Operational Setting},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801774},
doi = {10.1145/800049.801774},
abstract = {In recent years there has been a proliferation of electronic office products developed under the umbrella label of “office of the future”. The justification for office automation has been the promise of increased office productivity and significant cost-benefits to the user. In most cases these systems have been driven by the rapid evolution of technological advances in the computer industry. As a result, these technologically leading edge solutions often must then search for a set of office problems to solve.The present study evolved out of the identification of one such set of office problems. Office communications have increasingly been identified as a major source of inefficiency and frustration.The purpose of the present study was to investigate ways of solving the variety of problems associated with the use of the telephone. The telephone has been labelled as probably the most intrusive device on work flow in the office (Bair, Farber, &amp; Uhlig, 1980). Typically office principals, particularly those without a personal secretary, don't have any means of screening themselves from telephone interruptions. Unsuccessful attempts to call someone are another source of inefficiency.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {158–162},
numpages = {5},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801775,
author = {Kedzierski, Beverly I.},
title = {Communication and Management Support in System Development Environments},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801775},
doi = {10.1145/800049.801775},
abstract = {A System Development Support Environment that assists in communication and management tasks of software project members should aid the development of large, evolutionary computer systems. The environment proposed in this paper will include integrated capabilities for project management, system evaluation, documentation/help, and intelligent communication between designers/users, and either the system or other designers. The goal is to have the environment help collect, organize and disseminate information about a project, using a model of the underlying system. The work is based on the idea that people perform “Communication Acts” (ACTs) such as: questioning, griping, planning, requesting or informing, while interacting with a system, and that processing of these ACTs can be automated. A Taxonomy of “simple” ACTs has been created from initial, informal studies of system/user interaction. A knowledge-based synthesis approach is used to create an experimental environment to support a program synthesis (software) project [Phillips-81]. The environment design and framework, which is part of the author's Ph.D. thesis work in progress [Kedzierski-80], is discussed.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {163–168},
numpages = {6},
keywords = {Human-computer interfaces, Project management, Programming environments, Knowledge-based systems, Software engineering, Knowledge representation, Artificial intelligence, System development support, Software psychology},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801776,
author = {Licker, Paul S.},
title = {LAMP: Language for Active Message Protocols},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801776},
doi = {10.1145/800049.801776},
abstract = {Among the most prominent aspects of office automation is the concept of electronic mail. Despite the fact that numerous “Office of the Future&amp;" descriptions seem to focus upon electronic mail as a great opportunity, seldom is it treated as a phenomenon in its own right rather than product. More often it seems to be a technological byproduct, available to counter certain specific business ailments, most notably the inefficiency of transportation of packaged messages. Despite the obvious advantages of E-mail, it is not seen as either essential to office of the future as a concept or as theoretically interesting to researchers.Several commentators, however, have pointed out that messaging may be an alternative form of interpersonal communication (See Bair [l]), without especially treating messaging as a core concept in office automation.This paper proposes to open the debate, not into the technical or behavioral feasibility of E-mail or the other messaging manifestations, nor into the economic benefits of implementation, but rather into the foundations of pre-programmed, non-real-time verbal interaction (printed and oral) as a general phenomenon.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {169–173},
numpages = {5},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801777,
author = {Epple, W. K. and Rembold, U.},
title = {Communication - Nets for the Specification of Operator Dialogs},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801777},
doi = {10.1145/800049.801777},
abstract = {The model of a man - machine - system is the basis of the proposed notation. It consists of the components man and machine. With these (statical) components a (dynamic) process, called man - machine - communication or man - machine - dialog, is realized.The (three) possible dynamic interfaces are described. According to /CAR;69/ an evaluation, decision and control module for the exchange of information belongs to an active bidirectional communication. An operator dialog is such a communication.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {174–179},
numpages = {6},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801778,
author = {Petersen, Rohn J. and Banks, William W. and Gertman, David I.},
title = {Performance-Based Evaluation of Graphic Displays for Nuclear Power Plant Control Rooms},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801778},
doi = {10.1145/800049.801778},
abstract = {This paper reports several methodologies for evaluating the perceptual and perceptual/decision making aspects of displays used in the control rooms of nuclear power plants. This NRC funded study focuses upon the Safety Parameter Display System (SPDS) and relates the utility of the display to objective performance and preference measures obtained in experimental conditions. The first condition is a traditional laboratory setting where classical experimental methodologies can be employed. The second condition is an interactive control room simulation where the operator's performance is assessed while he/she operates the simulator. The third condition is a rating scale designed to assess operator preferences and opinions regarding a variety of display formats. The goal of this study is the development of a cost-efficient display evaluation methodology which correlates highly with the operators ability to control a plant.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {182–189},
numpages = {8},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801779,
author = {Card, Stuart K.},
title = {User Perceptual Mechanisms in the Search of Computer Command Menus},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801779},
doi = {10.1145/800049.801779},
abstract = {Menu-based command systems, in which a user selects a command from a set of choices displayed to him, have acquired widespread use as a human-computer interface technique. The technique is especially attractive for use with new or untrained users since the user need not recall the command he wishes, but merely recognize it. But menu systems also find application in more sophisticated systems meant for expert users (for example, Teitelman, 1977) where they can be used to reduce the complexity of the options with which the user is presented.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {190–196},
numpages = {7},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801780,
author = {Goldsmith, Timothy E. and Schvaneveldt, Roger W.},
title = {The Role of Integral Displays in Decision Making},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801780},
doi = {10.1145/800049.801780},
abstract = {A common approach to designing human-computer decision systems is to divide decision tasks between the person and the computer. The success of this approach depends on knowledge of the specific task components and their interactions, information important for allocating tasks to man and machine. Such knowledge is often unavailable for complex, realistic decision situations. Also, people are reluctant to relinquish part of their decision-making responsibilities. One way to circumvent these problems is to provide general assistance to the decision maker that is independent of any particular decision situation. We propose to use the computer to reduce the decision maker's cognitive load rather than his task load. Specifically, we hope to show that human decision processes can be aided by displaying decision-relevant information in ways that capitalize on certain characteristics of the human perceputal system.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {197–201},
numpages = {5},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801781,
author = {Wilkinson, Leland},
title = {An Experimental Evaluation of Multivariate Graphical Point Representations},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801781},
doi = {10.1145/800049.801781},
abstract = {In a generally optimistic assessment of progress in the psychology of human-computer interaction, Moran [30] reported that the field “needs to work more at bringing existing areas of cognitive psychology and traditional human factors to bear on user behavior.” This caveat applies especially to the area of computer graphics because of the dearth of experiments and theory on the effectiveness of various types of graphical displays. Broad applications of psychological theory to graphic design have been presented in [6], [19], [28], [32] and [33]. These articles have drawn heavily on Gestalt theory, memory models, and the theory of cognitive schemas in human judgment. They present little experimental evidence relevant to complex visual displays, however.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {202–209},
numpages = {8},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801782,
author = {Curtis, Bill},
title = {A Review of Human Factors Research on Programming Languages and Specifications},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801782},
doi = {10.1145/800049.801782},
abstract = {This paper presents a partial review of the human factors work on computer programming. It begins by giving an overview of the behavioral science approach to studying programming. Because of space limitations this review will concentrate on cognitive models of programmer problem solving and the experimental research on language characteristics and specification formats. Areas not reviewed include debugging, programming teams, individual differnces, and research methods. The conclusions discuss promising directions for future theory and research.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {212–218},
numpages = {7},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801783,
author = {Irons, Dennis M.},
title = {Cognitive Correlates of Programming Tasks in Novice Programmers},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801783},
doi = {10.1145/800049.801783},
abstract = {The study presented here had two primary goals. First, to identify a set of subtasks which constitute a typology of the task of computer programming—specifically, the task structure of FORTRAN programming as perceived by novice programmers; second, to assess the relationship between individual differences in cognitive functioning (human information-processing characteristics) and performance on the perceived programming subtasks. The criterion instrument was a 77-item test of programming skill and knowledge, arranged by sections of homogeneous items. Each section included items representing one of three major subtask categories (composition, comprehension and debugging). Skill and knowledge acquisition was not studied as this would have required a longitudinal study. Likewise, program modification was omitted as Schneiderman and Mayer have defined it as an amalgam of the three primary tasks.Cognitive ability dimensions have been empirically defined in a large number of studies. Ekstrom, French and Harman [3] have reviewed the status of 24 factors which have been replicated in several studies, and are well established. Of interest are those dimensions which appear to have explanatory power for programming tasks. A listing of these factors follows.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {219–222},
numpages = {4},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801784,
author = {DeYoung, Gerrit E. and Kampen, Garry R. and Topolski, James M.},
title = {Analyzer-Generated and Human-Judged Predictors of Computer Program Readability},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801784},
doi = {10.1145/800049.801784},
abstract = {The readability of a computer program has recently attained a high level of interest deriving in part from its expected close relationship with program maintainability; debugging and modification expenses are understood to account for a large proportion of software costs over the life of the software. A computable measure of readability would therefore be useful to program developers during coding and to those assuming responsibility for maintenance of software developed elsewhere. In a series of Algol 68 programs, analyzer generated (machine-computable) and human-judged program factors were examined. The first two present authors found that program length and reasonable practice concerning identifier length were excellent predictors of judgments of readability. These predictors were chosen from a large set of analyzer-generated predictors including software science measures as defined by Halstead and several others; the analyzer-generated predictors were found to replicably estimate a high proportion (41 percent) of variance in readability in new readability judgments.While an estimate of readability based only on analyzer-generated predictors would be clearly useful, human ratings (such as quality of comments, logicality of control flow, and meaningfulness of identifier names) were examined to determine whether they could add significantly to the quality of estimates of readability. The addition of the rating of well structured control flow to the set of analyzer-generated predictors increased the proportion of replicably estimated variance in new readability judgments from 41 to 72 percent.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {223–228},
numpages = {6},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801785,
author = {McNicholl, Daniel G. and Magel, Ken},
title = {The Subjective Nature of Programming Complexity},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801785},
doi = {10.1145/800049.801785},
abstract = {One of the more difficult problems confronting software engineers today is the construction of accurate predictive models of the software development process, [2],[8] and [9]. It has long been recognized that one of the most essential elements of any successful model of this process is a quantification of the complexity of software systems. During the past several years a great deal of work has been performed by researchers such as Halstead [3], McCab [5], and others in an attempt to develop metrics which adequately capture the complexity of software systems. Yet one very important aspect of software development complexity seems to have been overlooked in the rush to develop software complexity metrics, q.e. it's psychological nature.A basic tenet of our research is that the effort to develop a software system is a function of it's 'perceived' complexity; which in turn is dependent upon both the physical nature of the software system being developed and the psychological nature of the individual(s) performing the development. The immediate goal of the research reported on in this paper was to examine this dual dependency. In order to do so we collected data from two sections (same instructor) of a college sophomore - level class on PL/I which consisted of fifty-six students. During this class each student was given six written programming assignments which were relatively simple in scope.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {229–234},
numpages = {6},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801786,
author = {Reed, Adam V.},
title = {Error-Correcting Strategies and Human Interaction with Computer Systems},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801786},
doi = {10.1145/800049.801786},
abstract = {Human problem-solving strategies may be classified as error-preventing (no response is chosen until one can be selected with relatively high confidence) or error-correcting (a tentative solution is formulated immediately, subject to revision in the light of subsequent evidence). Recent work in the author's laboratory indicates a strong preference for error-correcting over error-preventing strategies on the part of human problem-solvers. Unfortunately, most contemporary computer languages and programming environments enforce an error-preventing rather than error-correcting strategy. Using Marvin Minsky's concept of a frame, an error-correcting programming strategy may be thought of as obtaining a program frame with all parameters pre-set to their default values, and then revising those values until a script corresponding to a successful solution is arrived at. The present paper defines a frame-based programming environment which can accommodate error-correcting programming strategies, and discusses the application of such environments to different types of programming languages.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {236–238},
numpages = {3},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801787,
author = {Roemer, Joan M. and Chapanis, Alphonse},
title = {Learning Performance and Attitudes as a Function of the Reading Grade Level of a Computer-Presented Tutorial},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801787},
doi = {10.1145/800049.801787},
abstract = {The purpose of this study was to determine the most appropriate level of language sophistication, or “readability” of the text of a computer-presented tutorial. The tutorial teaches first-time users how to operate a display terminal. The effects of readability on performance and attitudes of adults with different levels of reading ability were examined.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {239–244},
numpages = {6},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801788,
author = {Gilfoil, David M.},
title = {Warming up to Computers: A Study of Cognitive and Affective Interaction over Time},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801788},
doi = {10.1145/800049.801788},
abstract = {This experiment studies how people learn to use computers. Four computer-naive persons performed six computer tasks at each of 20 task sessions over a one month period. Participants were allowed to choose a menu-driven or command-driven dialogue at any point during the study. Cognitive, affective, and performance variables were closely monitored. Results generally support the appropriateness of a menu-driven dialogue for novice users and the transition to a command-driven dialogue after approximately 16 - 20 hours of task experience. With experience, users were shown to a) choose b) perform better, and c) be more satisfied with a command driven dialogue. Results are explained within the context of a “cognitive schema” theory.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {245–250},
numpages = {6},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801789,
author = {Furnas, George W. and Gomez, Louis M. and Landauer, Thomas K. and Dumais, Susan T.},
title = {Statistical Semantics: How Can a Computer Use What People Name Things to Guess What Things People Mean When They Name Things?},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801789},
doi = {10.1145/800049.801789},
abstract = {The descriptors or categories assigned to entries in an information system form the basis of most retrieval mechanisms (e.g., menu or key word). These descriptors are the primary means of communication between system designers and end users. In this paper we analyze some of the factors which influence this communication link. Our goal is to uncover some psychological principles that will help us to understand naming and describing behavior and thus improve the communication between designers and users.In traditional communication (e.g., conversation) the communicator can accommodate to different listeners, both by shifting perspective and by attending to explicit feedback from the listener. In describing items in a data base, however, system designers are at a disadvantage in that they do not usually get explicit, immediate, and continuous feedback from users. Knowing how people describe common objects and shift their descriptions for audiences of different levels of sophistication may help designers build systems whose information is accessible to the widest possible audience.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {251–253},
numpages = {3},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801790,
author = {Hopelain, David G.},
title = {Assessing the Climate for Change: A Methodology for Managing Human Factors in a Computerized Information System Implementation},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801790},
doi = {10.1145/800049.801790},
abstract = {It is now well established that computers and other information technologies are instruments of organizational change. That is, successful implementation of an information system will change the way in which organizational members do their work. There is an extensive literature on social change which characterizes the change process and how to manage it. In particular, there is a subset of this literature which concerns the implementation of computerized information systems},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {256–261},
numpages = {6},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801791,
author = {Peterson, David E. and Botterill, J Howard},
title = {IBM System/38—an IBM Usability Experience},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801791},
doi = {10.1145/800049.801791},
abstract = {Although advancing technology is making more and more complex systems available to the small-system user, the interface between the user and such systems cannot become correspondingly more complex. Instead, the interface must become easier to use so that more people can take advantage of the richer function. In the small business environment, in particular, it is crucial that new systems be usable by a customer's current staff and not require the addition of new and sophisticated data processing expertise. Personnel costs already comprise 45-50% of most data processing budgets (1).Much of the ease-of-use of smaller systems has been due to their limited function. The user has been able to learn to use the system interfaces because each interface involved only a few functions and the interfaces were few in number. Conversely, very large and complex systems have traditionally been programmed and managed by high powered, highly trained staffs with the resources and the sophistication to cope with complex challenges. Here too, however, the high cost and the limited availability of such people increase the need for ease-of-use breakthroughs(5).},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {262–267},
numpages = {6},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801792,
author = {Whitfield, David},
title = {Some Human Factors Aspects of Computers in Air Traffic Control},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801792},
doi = {10.1145/800049.801792},
abstract = {This paper reviews some of the human factors issues arising during eight years of systems research into computer-based concepts for air traffic control (ATC), carried out by the Royal Signals and Radar Establishment (RSRE) on behalf of the U.K. Civil Aviation Authority (CAA). The Ergonomics Development Unit (EDU) at Aston has been responsible for the human factors aspects.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {268–274},
numpages = {7},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801793,
author = {Miller, Duncan C.},
title = {Experience with Advanced Office Automation Techniques for Project Management},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801793},
doi = {10.1145/800049.801793},
abstract = {This paper describes experiences gained during the course of a fairly large, multi-site project in which an integrated, computer-based electronic message and document preparation system was employed as the principal coordinating mechanism for the project. Approximately 60 individuals had direct access to this system and used it as their primary means of communication for the duration of the project.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {276–277},
numpages = {2},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801794,
author = {Hersh, Harry M.},
title = {Electronic Mail Usage Analysis},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801794},
doi = {10.1145/800049.801794},
abstract = {An electronic mail system (EMS) has been in operation within Digital Equipment Corporation now for several years. The function of the system is to help serve the internal communication needs of this geographically distributed corporation. In particular, the system was intended to increase the effectiveness of managers, although secretaries, engineers, and other employees also use the system. As the mail system grew from a pilot operation to a global communications utility, the system's managers continued to receive a wide range of informal feedback concerning users' perceptions and utilization of the system.In order to assess reliably how users were reacting to this new communication mode, usage aspects of the electronic mail system were investigated by a random survey of the user population and by an analysis of EMS learning behavior. The survey portion of the study will be discussed in this paper.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {278–280},
numpages = {3},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801795,
author = {DeVaris, Panayotis Eric},
title = {The Impact of Electronics on Humans and Their Work Environment},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801795},
doi = {10.1145/800049.801795},
abstract = {The American industry experiences today the “Information Revolution”, a phenomenon which affects greatly the development of modern technology, and which follows a universal movement toward great scientific innovation and a tremendous increase in information processing needs. The backbone of this “Information Revolution” is the computer. As a result we find that the computer, so far restricted in the backstage of a secluded computer room, expands rapidly onto every work-station in the plant and the office environment. This expansion presents a serious concern to many sociologists, psychologists, environmentalists, computer scientists, designers, architects and industrial engineers.Our concern emanates from the possible effects that this new intruder to the work environment will have on its human operators. An inkling of these effects is presented to us today when we visit a data center: wide open areas with huge display tubes planted like in a grove, is the first thing we see; behind them are the people working with them. They are slouching in front of a keyboard which is located on a standard height desk, and they are staring at a display tube through the hazy reflections of the ceiling lights and their own face. They are hiding from each other with the help of three-foot high piles of computer printouts located on their desk, on a chair, on the floor, in the waste paper basket. They are talking to the terminal, sometimes lovingly, sometimes cursingly. They are talking to each other with a confusing jargon. It is here where we can see that the side effects of this computer invasion have already created some problems with the interaction between the human and the computer.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {281–286},
numpages = {6},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801796,
author = {Badre, Albert N.},
title = {Designing the Human-Computer Interface},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801796},
doi = {10.1145/800049.801796},
abstract = {There is a growing awareness in the academic and industrial computing communities of the need to introduce human factors considerations into the design of computer systems. At the School of Information and Computer Science of the Georgia Institute of Technology, this need is being met through a well-funded graduate research program in the human factors of computer systems as well as the introduction of courses that emphasize usability in designing the human-computer interface. The course detailed in this paper has the title “Human-Computer Interface.”},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {288–291},
numpages = {4},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801797,
author = {Foley, James D.},
title = {Teaching the Design and Evaluation of User-Computer Interfaces},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801797},
doi = {10.1145/800049.801797},
abstract = {In this paper we describe a graduate Computer Science course, “The Design of User-Computer Interfaces”, which the author developed and has taught since 1979. Students taking the course are normally in their second year of graduate study, and have thus been exposed to several different interactive computing environments.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {292–294},
numpages = {3},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801798,
author = {Moran, Thomas P. and Card, Stuart K.},
title = {Applying Cognitive Psychology to Computer Systems: A Graduate Seminar in Psychology},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801798},
doi = {10.1145/800049.801798},
abstract = {This paper describes a graduate seminar given by the authors at Stanford University in the Department of Psychology in the Spring of 1980. Although the seminar was also listed as a Computer Science course and was attended by students and faculty from Computer Science and other departments, the course was addressed to Ph.D. students in cognitive psychology. The seminar assumed that the students were familiar with modern cognitive psychology, but did not assume that they necessarily had much experience with interactive computing.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {295–298},
numpages = {4},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801799,
author = {Shneiderman, Ben},
title = {Teaching Software Psychology Experimentation through Team Projects},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801799},
doi = {10.1145/800049.801799},
abstract = {This paper describes an undergraduate human factors course which emphasizes psychologically oriented experimentation on the human use of computers. The reductionist principles of the scientific method are emphasized throughout the course: lucid statement of testable hypotheses, alteration of independent variables, measurement of dependent variables, selection and assignment of subjects, control for biasing, and statistical testing. Term-length team projects are highly motivating for students and have led to worthwhile research contributions.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {299–301},
numpages = {3},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801800,
author = {Reisner, Phyllis},
title = {Further Developments toward Using Formal Grammar as a Design Tool},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801800},
doi = {10.1145/800049.801800},
abstract = {First, we will describe how some kinds of “cognitive” information can be incorporated into a formal grammar. This information will permit us to describe a system, formally, for different classes of users. Most current models are limited to specific classes of users. They do not, for example, permit us to describe a system differently for naive and for expert users.Next, we will describe, explicitly, the prediction process.The last point to be discussed is our general approach to testing the use of formal grammar as a design tool. This idea is being developed and tested using an IBM editor as an example.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {304–308},
numpages = {5},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801801,
author = {Bleser, Teresa and Foley, James D.},
title = {Towards Specifying and Evaluating the Human Factors of User-Computer Interfaces},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801801},
doi = {10.1145/800049.801801},
abstract = {Despite the current interest in user-computer interfaces, the design of a good interface remains to a great extent an art, with much argument over guidelines and principles for interface design. Pertinent information, scattered throughout the literature of psychology, graphic design. linguistics, hardware design, and under the general umbrella of computer science, is only gradually being gathered into survey publications for application by computer scientists [1,4,12,15]. Our purpose is to design a specification language which will serve as a vehicle for the design of and experimentation with user-computer interfaces. The specification language not only defines the external characteristics of the interface, but can also be analyzed to determine whether the interface meets a set of generally-accepted human factors guidelines. We believe the language is general enough to be used with principles of interface design other than those we have proposed.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {309–314},
numpages = {6},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801802,
author = {Jacob, Robert J. K.},
title = {Using Formal Specifications in the Design of a Human-Computer Interface},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801802},
doi = {10.1145/800049.801802},
abstract = {This paper surveys specification techniques that can be applied to human-computer interfaces, provides examples of specifications, and presents some conclusions drawn from the author's experience using the techniques for specifying the user interface of the message system.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {315–321},
numpages = {7},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801803,
author = {Tyler, Sherman W. and Roth, Steven and Post, Timothy},
title = {The Acquisition of Text Editing Skills},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801803},
doi = {10.1145/800049.801803},
abstract = {The study of text editing is a significant undertaking for at least two reasons.Our study sought to examine text editing more extensively in two regards. First, we wanted to discover how the basic task develops into a routine cognitive skill, i.e., how does the novice user differ from the expert and how is that expertise eventually acquired. Second, we wanted to determine possible ways of improving the techniques for training people in the use of text editors, based on knowledge of how text editing skills develop.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {324–325},
numpages = {2},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801804,
author = {Folley, Lisa J. and Williges, Robert C.},
title = {User Models of Text Editing Command Languages},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801804},
doi = {10.1145/800049.801804},
abstract = {The present study was aimed at developing a method for determining novice and expert user's models of interactive text editing by empirically analyzing patterns of command language usage. These models, in turn, can form the basis for developing an interactive editor which is designed from the user, rather than the system, point of view.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {326–331},
numpages = {6},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801805,
author = {Foss, Donald J. and Rosson, Mary Beth and Smith, Penny L.},
title = {Reducing Manual Labor: An Experimental Analysis of Learning Aids for a Text Editor},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801805},
doi = {10.1145/800049.801805},
abstract = {It is by now a truism to say that computational systems should be designed with ease of use in mind. Indeed, Shneiderman [10] collects together nearly a dozen lists of advice produced by authors in the past decade on how to meet this laudable goal. The advice that is given seems often to be quite good, but it is almost always qualitative in nature, rather vague, and sometimes contradictory. Remarkably little work has been done examining the actual usefulness of carrying out some of the advice, the extent of savings that can be realized by so doing, or the theoretical rationale behind it. In this paper we will present the rationale for investigating two variables that may aid the user, in particular the novice user, and we will describe an extensive experiment designed to examine the actual effects of these two variables. The goals of the work are (1) to understand better the acquisition, representation, and utilization of knowledge by novice or occasional users of computer-based information systems, and (2) to put to the test some ideas derived from current views of memory and attention.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {332–336},
numpages = {5},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801806,
author = {Egan, Dennis E. and Bowers, Cheryll and Gomez, Louis M.},
title = {Learner Characteristics That Predict Success in Using a Text-Editor Tutorial},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801806},
doi = {10.1145/800049.801806},
abstract = {Today, it is not unusual for secretaries to use computer-based word-processing systems to deal with manuscripts, correspondence, and memos. In the future, such functions as updating personal calendars, filing, and leaving messages undoubtedly will be handled by computers. For all these functions, people without a technical background are required to interact effectively with a computer system.A person's introduction to computers often begins with an attempt to learn how to use a text editor. Thus, knowing how to use a text editor is a requirement for a growing number of jobs. The importance of text editing is underscored by the recent psychological research devoted to understanding this skill [1,2,3,5].},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {337–340},
numpages = {4},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801807,
author = {Smith, Sidney L.},
title = {Patterned Prose for Automatic Specification Generation},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801807},
doi = {10.1145/800049.801807},
abstract = {Writing functional system specifications is a significant job in the early stages of most system development programs. Computer aids for automatic generation of draft material could help produce comprehensive specifications more quickly.To create such computer aids, we must find some way to input defined requirements. A functional capabilities checklist has been proposed for that purpose. And we must find a way to output the appropriate words to describe those requirements. A novel technique called “patterned prose” is proposed for this purpose.The use of patterned prose for automatic specification generation must still be evaluated in practical application. If that evaluation proves successful, this technique may offer promise as a means of organizing knowledge derived from past experience so that it can be used effectively in future work.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {342–346},
numpages = {5},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801808,
author = {Hendricks, Daniel E.},
title = {An Exploratory, Human Engineering Study of DARCOM Human-Computer Interfaces in Management Information Systems},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801808},
doi = {10.1145/800049.801808},
abstract = {The field which studies human-machine interaction is usually called human factors or human engineering. The DARCOM Directorate of Management Information (DMIS) requested the US Army Human Engineering Laboratory (HEL) to investigate human factors aspects of current MIS systems and provide guidelines for use by system designers.The study involved the use of semi-structured interviews and observations at seven DARCOM installations covering a wide variety of MIS applications to obtain a composite picture of DARCOM MIS users, positive human engineering aspects of current systems, and problems in human-computer interaction. MIS users, for this study, were defined broadly as those who design and program systems, those who are involved in the preparation or input of data into a computer, those who receive or obtain information from a computer system, and those who manage computer systems.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {347–349},
numpages = {3},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801809,
author = {Maguire, Martin},
title = {The Development of Dialogue Design Guidelines for a Computer Based Local Information System to Be Used by the General Public},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801809},
doi = {10.1145/800049.801809},
abstract = {A number of trends over the last twenty years have brought the prospect of instant computer power to the ordinary man and woman to near fruition. The arrival of interactive computing coupled with developments in the communications field have enabled man and computer to converse both at high speed and at long distance. Furthermore the decreasing cost of microprocessor hardware has made the acquisition of a computer or remote computer access, affordable by most establishments and many ordinary people. A need exists therefore, to develop usable software interfaces or man-computer dialogues to support this equipment.This abstract reports on an experiment which was carried out as part of a research project /5/ to investigate the use which was made of a computer access system, developed by the author, to provide local information to the public.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {350–354},
numpages = {5},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801810,
author = {Zachary, W. and Wherry, R. and Glenn, F. and Hopson, J.},
title = {Decision Situations, Decision Processes, and Decision Functions: Towards a Theory-Based Framework for Decision-Aid Design},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801810},
doi = {10.1145/800049.801810},
abstract = {Decision augmentation systems differ qualitatively from current man-computer interactive systems because they involve intelligent, complex, and largely symbiotic man-machine relationships. They thus provide the stimulus for the development of a new branch of human factors, one concerned with the human engineering of relationships between humans and intelligent, quasi-autonomous, computer-based systems. The threefold objective of the research described in this paper has therefore been to identify the human factors problems which such a framework should address, to generate the basic information around which it should be built, and to determine the general structure which it should take.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {355–358},
numpages = {4},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801811,
author = {Bolt, Richard A.},
title = {Eyes at the Interface},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801811},
doi = {10.1145/800049.801811},
abstract = {There is little dispute that the main channels of intercommunication of people with the world at large are: sight, sound, and touch; and for people with other people: eye-contact, speech, gesture.Advanced human-computer interfaces increasingly implicate speech i/o, and touch or some form of manual input.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {360–362},
numpages = {3},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801812,
author = {Schmandt, Christopher and Hulteen, Eric A.},
title = {The Intelligent Voice-Interactive Interface},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801812},
doi = {10.1145/800049.801812},
abstract = {“Put That There” is a voice and gesture interactive system implemented at the Architecture Machine Group at MIT. It allows a user to build and modify a graphical database on a large format video display. The goal of the research is a simple, conversational interface to sophisticated computer interaction. Natural language and gestures are used, while speech output allows the system to query the user on ambiguous input.This project starts from the assumption that speech recognition hardware will never be 100% accurate, and explores other techniques to increase the usefulness (i.e., the “effective accuracy”) of such a system. These include: redundant input channels, syntactic and semantic analysis, and context-sensitive interpretation. In addition, we argue that recognition errors will be more tolerable if they are evident sooner through feedback and easily corrected by voice.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {363–366},
numpages = {4},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801813,
author = {Gould, John D. and Conti, John and Hovanyecz, Todd},
title = {Composing Letters with a Simulated Listening Typewriter},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801813},
doi = {10.1145/800049.801813},
abstract = {Speech recognition is not yet advanced enough to provide people with a reliable listening typewriter with which they could compose documents. The aim of this experiment was to determine if an imperfect listening typewriter would be useful for highly experienced dictators. Participants dictated either in isolated words or in continuous speech, and used a simulated listening typewriter which recognized a limited vocabulary as well as one which recognized an unlimited one. Results suggest that reducing the rate at which people dictate, either through limitations in vocabulary size or through speaking in isolated words, led to reductions in people's performance. For these first-time users, no version of the listening typewriter was better than traditional dictating methods.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {367–370},
numpages = {4},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801814,
author = {Bly, Sara},
title = {Presenting Information in Sound},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801814},
doi = {10.1145/800049.801814},
abstract = {In the past few years, the increase in interactive use of computers has led to an emphasis on human factors and the ways in which digital information can best be presented to users. Computer graphics has been at the forefront of this growth involving vision as an active aid in interpreting data. Bar charts, psuedo-color image processing, and 3-dimensional figures are but a few means of providing the viewer with data information.As the use of computers increases, the need for a variety of alternatives of interacting with computers also increases. Computer-generated sound is one capability not being fully utilized in the computer/human interface. Just as an x-y plot reveals relationships in data, sounds might also reveal relationships in data. This report focuses on the potential for using computer generated sounds to present data information. The first section addresses multivariate data problems which might be aided by sound output. The second describes experiments performed to determine whether listeners can discriminate among data sets based on sound. The final section discusses ongoing work and future directions.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {371–375},
numpages = {5},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801815,
author = {Norman, Donald A.},
title = {Steps toward a Cognitive Engineering: Design Rules Based on Analyses of Human Error},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801815},
doi = {10.1145/800049.801815},
abstract = {This paper uses the analysis of human error to provide a tool for the development of principles of system design, both to minimize the occurrence of error and to minimize its effects. Eventually, it should be possible to establish a systematic set of guidelines, with explicit, quantitative cost-benefit tradeoffs that can lead toward a design discipline—a “Cognitive Engineering.” This short note starts the process.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {378–382},
numpages = {5},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801816,
author = {Halasz, Frank and Moran, Thomas P.},
title = {Analogy Considered Harmful},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801816},
doi = {10.1145/800049.801816},
abstract = { The computer is like a typewriter. The computer is like a filing cabinet. The computer is a personal servant ready to obey your every command. It is often claimed (e.g., Carroll and Thomas [3], Rumelhart and Norman [7]) that the best way to introduce a new user to a computer system is to draw an analogy between the computer and some situation familiar to the user. Given the analogy, the new user can draw upon his knowledge about the familiar situation in order to reason about the workings of the mysterious new computer system. For example, if the new user wants to understand about how the computer file system works, he need only think about how an office filing cabinet works and then carry over this same way of thinking to the computer file system.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {383–386},
numpages = {4},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801817,
author = {Lewis, Clayton and Mack, Robert},
title = {Learning to Use a Text Processing System: Evidence from “Thinking Aloud” Protocols},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801817},
doi = {10.1145/800049.801817},
abstract = {There is growing interest in cognitive science in the the mental processes that underly learning and using computer systems (e. g., Bott {1}; Mayer, {2}; Card, Moran &amp; Newell {3}). In this paper we report generalizations about the problems people who are not experienced with computers have learning to use a text-processing system. We are especially interested in unaided self-instruction, because of the practical interest in reducing the role of experienced personel in the training process. We analyze these difficulties in terms of the interaction between the cognitive characteristics of the learner, and the design of self-instruction, and the interface. Finally, we are also interested in implications of these problems for designing better training methods and computer interfaces that are easier to learn.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {387–392},
numpages = {6},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

@inproceedings{10.1145/800049.801818,
author = {Durrett, John and Stimmel, Theron},
title = {A Production-System Model of Human-Computer Interaction},
year = {1982},
isbn = {9781450373890},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800049.801818},
doi = {10.1145/800049.801818},
abstract = {This paper presents what we believe to be a novel application of production systems to the modeling of complex human-computer interaction. Within the limits of this paper we will briefly describe a production system and discuss its use to model human-computer interaction. We will also mention some existing research supporting its plausibility as a modeling technique. We describe a relatively complex task requiring human-computer interaction that provided experimental data to test the applicability of production systems to this problem area. The completion of this task by individuals was modeled using a set of psychologically plausible productions. The results of this process indicated that a production system may be a powerful empirical and theoretical technique for studying the human factors associated with computer systems.},
booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
pages = {393–399},
numpages = {7},
location = {Gaithersburg, Maryland, USA},
series = {CHI '82}
}

