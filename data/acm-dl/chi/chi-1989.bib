@inproceedings{10.1145/67449.67451,
author = {Lewis, C. and Hair, D. C. and Schoenberg, V.},
title = {Generalization, Consistency, and Control},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67451},
doi = {10.1145/67449.67451},
abstract = {Easy learning of a user interface depends in part on users being able to generalize successfully about it. Philosophical doctrine, and some recent work in human-computer interaction, argues that causal analysis of interactions can support generalization. But neither the philosophical literature nor the HCI literature provides a rigorous theory of causal analysis adequate for problems in human-computer interaction. We propose such a rigorous theory here, and show how it accounts for two robust generalizations, using certain general assumptions. We then present evidence that these assumptions are accepted by people. Finally we compare this theory with other treatments of consistency.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {1–5},
numpages = {5},
series = {CHI '89}
}

@article{10.1145/67450.67451,
author = {Lewis, C. and Hair, D. C. and Schoenberg, V.},
title = {Generalization, Consistency, and Control},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67451},
doi = {10.1145/67450.67451},
abstract = {Easy learning of a user interface depends in part on users being able to generalize successfully about it. Philosophical doctrine, and some recent work in human-computer interaction, argues that causal analysis of interactions can support generalization. But neither the philosophical literature nor the HCI literature provides a rigorous theory of causal analysis adequate for problems in human-computer interaction. We propose such a rigorous theory here, and show how it accounts for two robust generalizations, using certain general assumptions. We then present evidence that these assumptions are accepted by people. Finally we compare this theory with other treatments of consistency.},
journal = {SIGCHI Bull.},
month = mar,
pages = {1–5},
numpages = {5}
}

@inproceedings{10.1145/67449.67452,
author = {Carroll, J. M. and Kellogg, W. A.},
title = {Artifact as Theory-Nexus: Hermeneutics Meets Theory-Based Design},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67452},
doi = {10.1145/67449.67452},
abstract = {We suggest that HCI designs characteristically embody multiple, distinct psychological claims, that virtually every aspect of a system's usability is overdetermined by independent psychological rationales inherent in its design. These myriad claims cohere in being implemented together in a running system. Thus, HCI artifacts themselves are perhaps the most effective medium for theory development in HCI. We advance a framework for articulating the psychological claims embodied by artifacts. This proposal reconciles the contrasting perspectives of theory-based design and hermeneutics, and clarifies the apparent paradox of HCI application leading HCI theory.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {7–14},
numpages = {8},
series = {CHI '89}
}

@article{10.1145/67450.67452,
author = {Carroll, J. M. and Kellogg, W. A.},
title = {Artifact as Theory-Nexus: Hermeneutics Meets Theory-Based Design},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67452},
doi = {10.1145/67450.67452},
abstract = {We suggest that HCI designs characteristically embody multiple, distinct psychological claims, that virtually every aspect of a system's usability is overdetermined by independent psychological rationales inherent in its design. These myriad claims cohere in being implemented together in a running system. Thus, HCI artifacts themselves are perhaps the most effective medium for theory development in HCI. We advance a framework for articulating the psychological claims embodied by artifacts. This proposal reconciles the contrasting perspectives of theory-based design and hermeneutics, and clarifies the apparent paradox of HCI application leading HCI theory.},
journal = {SIGCHI Bull.},
month = mar,
pages = {7–14},
numpages = {8}
}

@inproceedings{10.1145/67449.67453,
author = {Young, R. M. and Green, T. R. G. and Simon, T.},
title = {Programmable User Models for Predictive Evaluation of Interface Designs},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67453},
doi = {10.1145/67449.67453},
abstract = {A Programmable User Model (PUM) is a psychologically constrained architecture which an interface designer is invited to program to simulate a user performing a range of tasks with a proposed interface. It provides a novel way of conveying psychological considerations to the designer, by involving the designer in the process of making predictions of usability. Development of the idea leads to a complementary perspective, of the PUM as an interpreter for an “instruction language”. The methodology used in this research involves the use of concrete HCI scenarios to assess different approaches to cognitive modelling. The research findings include analyses of the cognitive processes involved in the use of interactive computer systems, and a number of issues to be resolved in future cognitive models.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {15–19},
numpages = {5},
series = {CHI '89}
}

@article{10.1145/67450.67453,
author = {Young, R. M. and Green, T. R. G. and Simon, T.},
title = {Programmable User Models for Predictive Evaluation of Interface Designs},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67453},
doi = {10.1145/67450.67453},
abstract = {A Programmable User Model (PUM) is a psychologically constrained architecture which an interface designer is invited to program to simulate a user performing a range of tasks with a proposed interface. It provides a novel way of conveying psychological considerations to the designer, by involving the designer in the process of making predictions of usability. Development of the idea leads to a complementary perspective, of the PUM as an interpreter for an “instruction language”. The methodology used in this research involves the use of concrete HCI scenarios to assess different approaches to cognitive modelling. The research findings include analyses of the cognitive processes involved in the use of interactive computer systems, and a number of issues to be resolved in future cognitive models.},
journal = {SIGCHI Bull.},
month = mar,
pages = {15–19},
numpages = {5}
}

@inproceedings{10.1145/67449.67454,
author = {Good, M. and Campbell, R. and Lynch, G. and Wright, P.},
title = {Experience with Contextual Field Research},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67454},
doi = {10.1145/67449.67454},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {21–24},
numpages = {4},
series = {CHI '89}
}

@article{10.1145/67450.67454,
author = {Good, M. and Campbell, R. and Lynch, G. and Wright, P.},
title = {Experience with Contextual Field Research},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67454},
doi = {10.1145/67450.67454},
journal = {SIGCHI Bull.},
month = mar,
pages = {21–24},
numpages = {4}
}

@inproceedings{10.1145/67449.67455,
author = {Marcus, A. and Cowan, W. B. and Smith, W.},
title = {Color in User Interface Design: Functionally and Aesthetics},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67455},
doi = {10.1145/67449.67455},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {25–27},
numpages = {3},
series = {CHI '89}
}

@article{10.1145/67450.67455,
author = {Marcus, A. and Cowan, W. B. and Smith, W.},
title = {Color in User Interface Design: Functionally and Aesthetics},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67455},
doi = {10.1145/67450.67455},
journal = {SIGCHI Bull.},
month = mar,
pages = {25–27},
numpages = {3}
}

@inproceedings{10.1145/67449.67456,
author = {Gibbs, S. J.},
title = {LIZA: An Extensible Groupware Toolkit},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67456},
doi = {10.1145/67449.67456},
abstract = {Software for supporting groups of cooperating users — groupware — raises a number of new issues in user interface design. This paper gives a definition of groupware and presents a model of group tools based on active objects. The model has been applied to the design and implementation of an extensible groupware toolkit known as LIZA. The paper describes the architecture of LIZA. Examples of group tools running under LIZA are used to illustrate some of the problems in the design of multi-user interfaces.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {29–35},
numpages = {7},
series = {CHI '89}
}

@article{10.1145/67450.67456,
author = {Gibbs, S. J.},
title = {LIZA: An Extensible Groupware Toolkit},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67456},
doi = {10.1145/67450.67456},
abstract = {Software for supporting groups of cooperating users — groupware — raises a number of new issues in user interface design. This paper gives a definition of groupware and presents a model of group tools based on active objects. The model has been applied to the design and implementation of an extensible groupware toolkit known as LIZA. The paper describes the architecture of LIZA. Examples of group tools running under LIZA are used to illustrate some of the problems in the design of multi-user interfaces.},
journal = {SIGCHI Bull.},
month = mar,
pages = {29–35},
numpages = {7}
}

@inproceedings{10.1145/67449.67457,
author = {Yoder, E. and Akscyn, R. and McCracken, D.},
title = {Collaboration in KMS, a Shared Hypermedia System},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67457},
doi = {10.1145/67449.67457},
abstract = {This paper describes how we use a hypermedia system (KMS) for our collaborative work. Based on our experience with KMS and our previous research with the ZOG system at Carnegie Mellon University, we believe that a shared-database hypermedia system provides a powerful foundation for collaboration. In this paper, we show how the shared-database capability of KMS, plus particular aspects of its data model, address six of the fundamental issues facing designers of collaborative work systems.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {37–42},
numpages = {6},
series = {CHI '89}
}

@article{10.1145/67450.67457,
author = {Yoder, E. and Akscyn, R. and McCracken, D.},
title = {Collaboration in KMS, a Shared Hypermedia System},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67457},
doi = {10.1145/67450.67457},
abstract = {This paper describes how we use a hypermedia system (KMS) for our collaborative work. Based on our experience with KMS and our previous research with the ZOG system at Carnegie Mellon University, we believe that a shared-database hypermedia system provides a powerful foundation for collaboration. In this paper, we show how the shared-database capability of KMS, plus particular aspects of its data model, address six of the fundamental issues facing designers of collaborative work systems.},
journal = {SIGCHI Bull.},
month = mar,
pages = {37–42},
numpages = {6}
}

@inproceedings{10.1145/67449.67458,
author = {Sheffield, J.},
title = {The Effects of Bargaining Orientation and Communication Medium on Negotiations in the Bilateral Monopoly Task: A Comparison of Decision Room and Computer Conferencing Communication Media},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67458},
doi = {10.1145/67449.67458},
abstract = {Pairs of subjects with either a competitive or an integrative bargaining orientation completed the Bilateral Monopoly Task in one of four communication media (text- only, text-plus-visual-access, audio-only, and audio-plus-visual-access). As hypothesized, an integrative bargaining orientation and/or an audio mode of communication led to a higher joint outcome. In addition, visual access resulted in higher joint outcomes for subjects with integrative bargaining orientations, but lower joint outcomes for those with competitive orientations. The support for negotiation offered by decision room and computer conferencing technologies is compared based on the efficiency and richness of the communication media available in each.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {43–48},
numpages = {6},
series = {CHI '89}
}

@article{10.1145/67450.67458,
author = {Sheffield, J.},
title = {The Effects of Bargaining Orientation and Communication Medium on Negotiations in the Bilateral Monopoly Task: A Comparison of Decision Room and Computer Conferencing Communication Media},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67458},
doi = {10.1145/67450.67458},
abstract = {Pairs of subjects with either a competitive or an integrative bargaining orientation completed the Bilateral Monopoly Task in one of four communication media (text- only, text-plus-visual-access, audio-only, and audio-plus-visual-access). As hypothesized, an integrative bargaining orientation and/or an audio mode of communication led to a higher joint outcome. In addition, visual access resulted in higher joint outcomes for subjects with integrative bargaining orientations, but lower joint outcomes for those with competitive orientations. The support for negotiation offered by decision room and computer conferencing technologies is compared based on the efficiency and richness of the communication media available in each.},
journal = {SIGCHI Bull.},
month = mar,
pages = {43–48},
numpages = {6}
}

@inproceedings{10.1145/67449.67459,
author = {Fischer, G. and Doane, S.},
title = {University of Colorado at Boulder, Institute of Cognitive Science},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67459},
doi = {10.1145/67449.67459},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {49–50},
numpages = {2},
series = {CHI '89}
}

@article{10.1145/67450.67459,
author = {Fischer, G. and Doane, S.},
title = {University of Colorado at Boulder, Institute of Cognitive Science},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67459},
doi = {10.1145/67450.67459},
journal = {SIGCHI Bull.},
month = mar,
pages = {49–50},
numpages = {2}
}

@inproceedings{10.1145/67449.67460,
author = {Moran, T. P.},
title = {What is EuroParc?},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67460},
doi = {10.1145/67449.67460},
abstract = {EuroPARC is a systems research laboratory supported by Rank Xerox Limited and allied with the Xerox Palo Alto Research Center (PARC). The decision to create EuroPARC was announced in November of 1986, and the lab was officially dedicated in June of 1988. EuroPARC's research charter is human-computer interaction. The research program is coordinated with PARC's, but the goal is to combine PARC-style systems research with European points of view, issues, and approaches.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {51–52},
numpages = {2},
series = {CHI '89}
}

@article{10.1145/67450.67460,
author = {Moran, T. P.},
title = {What is EuroParc?},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67460},
doi = {10.1145/67450.67460},
abstract = {EuroPARC is a systems research laboratory supported by Rank Xerox Limited and allied with the Xerox Palo Alto Research Center (PARC). The decision to create EuroPARC was announced in November of 1986, and the lab was officially dedicated in June of 1988. EuroPARC's research charter is human-computer interaction. The research program is coordinated with PARC's, but the goal is to combine PARC-style systems research with European points of view, issues, and approaches.},
journal = {SIGCHI Bull.},
month = mar,
pages = {51–52},
numpages = {2}
}

@inproceedings{10.1145/67449.67461,
author = {Atwood, M. E.},
title = {NYNEX Intelligent Systems Group},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67461},
doi = {10.1145/67449.67461},
abstract = {The Intelligent Interfaces Group is an interdisciplinary group with interests in artificial intelligence, human-computer interaction, and cognitive science. The primary mission is to provide research and development support to both the regulated and unregulated business units of NYNEX (the Regional Bell Operating Company for New York and New England). The Group was started in October 1986. The Intelligent Interfaces Group is part of the Artificial Intelligence Laboratory; other groups in this Laboratory are Expert Systems, Neural Networks and Machine Learning, and Speech Technologies.Staff members have interests in tutoring systems and tutoring strategies, the design and use of multi-modal communications systems, the evaluation of interactive systems, the development of software toolkits, and similar areas. Projects are selected to support these interests as well as have near-term practical benefits. Some projects are conducted at the request of NYNEX family units, others are initiated by staff members. All projects are funded by NYNEX.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {53–54},
numpages = {2},
series = {CHI '89}
}

@article{10.1145/67450.67461,
author = {Atwood, M. E.},
title = {NYNEX Intelligent Systems Group},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67461},
doi = {10.1145/67450.67461},
abstract = {The Intelligent Interfaces Group is an interdisciplinary group with interests in artificial intelligence, human-computer interaction, and cognitive science. The primary mission is to provide research and development support to both the regulated and unregulated business units of NYNEX (the Regional Bell Operating Company for New York and New England). The Group was started in October 1986. The Intelligent Interfaces Group is part of the Artificial Intelligence Laboratory; other groups in this Laboratory are Expert Systems, Neural Networks and Machine Learning, and Speech Technologies.Staff members have interests in tutoring systems and tutoring strategies, the design and use of multi-modal communications systems, the evaluation of interactive systems, the development of software toolkits, and similar areas. Projects are selected to support these interests as well as have near-term practical benefits. Some projects are conducted at the request of NYNEX family units, others are initiated by staff members. All projects are funded by NYNEX.},
journal = {SIGCHI Bull.},
month = mar,
pages = {53–54},
numpages = {2}
}

@inproceedings{10.1145/67449.67462,
author = {Rudisill, M. and Gillan, D. J.},
title = {NASA Johnson Space Center, Human-Computer Interaction},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67462},
doi = {10.1145/67449.67462},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {55–56},
numpages = {2},
series = {CHI '89}
}

@article{10.1145/67450.67462,
author = {Rudisill, M. and Gillan, D. J.},
title = {NASA Johnson Space Center, Human-Computer Interaction},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67462},
doi = {10.1145/67450.67462},
journal = {SIGCHI Bull.},
month = mar,
pages = {55–56},
numpages = {2}
}

@inproceedings{10.1145/67449.67463,
author = {Maulsby, D. L. and Witten, I. H.},
title = {Inducing Programs in a Direct-Manipulation Environment},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67463},
doi = {10.1145/67449.67463},
abstract = {End users who need to program within highly interactive direct-manipulation interfaces should be able to communicate their intentions through concrete demonstration rather than in terms of symbolic abstraction. This paper describes a system that learns procedures in interactive graphics taught to it “by example” by minimally trained users. It shows how techniques of machine learning and reactive interfaces can support one another—the former providing generalization heuristics to identify constraints implicit in user actions, the latter offering immediate feedback to help the user clarify hidden constraints and correct errors before they are planted into the procedure. The teacher's attention is focused on the learning system's perceptual and inferential shortcomings through a metaphorical apprentice called Metamouse, which generalizes action sequences on the fly and eagerly carries out any actions it can predict. The success of the induction process is assessed quantitatively by counting erroneous predictions made during example tasks.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {57–62},
numpages = {6},
series = {CHI '89}
}

@article{10.1145/67450.67463,
author = {Maulsby, D. L. and Witten, I. H.},
title = {Inducing Programs in a Direct-Manipulation Environment},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67463},
doi = {10.1145/67450.67463},
abstract = {End users who need to program within highly interactive direct-manipulation interfaces should be able to communicate their intentions through concrete demonstration rather than in terms of symbolic abstraction. This paper describes a system that learns procedures in interactive graphics taught to it “by example” by minimally trained users. It shows how techniques of machine learning and reactive interfaces can support one another—the former providing generalization heuristics to identify constraints implicit in user actions, the latter offering immediate feedback to help the user clarify hidden constraints and correct errors before they are planted into the procedure. The teacher's attention is focused on the learning system's perceptual and inferential shortcomings through a metaphorical apprentice called Metamouse, which generalizes action sequences on the fly and eagerly carries out any actions it can predict. The success of the induction process is assessed quantitatively by counting erroneous predictions made during example tasks.},
journal = {SIGCHI Bull.},
month = mar,
pages = {57–62},
numpages = {6}
}

@inproceedings{10.1145/67449.67464,
author = {Neal, L. R.},
title = {A System for Example-Based Programming},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67464},
doi = {10.1145/67449.67464},
abstract = {We present an approach to programming environments that integrates syntax-directed editors with concepts borrowed from software reuse. We call our approach example-based programming, and we define it as programming using examples as visual aids or to fully or partially copy into programs. To implement an example-based programming environment, we augmented a syntax-directed editor with a window for example programs. The example programs, which are easily accessible, can be used as examples of language constructs, thus providing syntactic information through instantiations of templates, or as examples of algorithms or programs. The code in the example window can be viewed, totally or partially copied, or run. We discuss the motivation for example-based programming, describe our system implementing example-based programming in greater depth, and report on the results of an experiment to see how the system is used by programmers.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {63–68},
numpages = {6},
series = {CHI '89}
}

@article{10.1145/67450.67464,
author = {Neal, L. R.},
title = {A System for Example-Based Programming},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67464},
doi = {10.1145/67450.67464},
abstract = {We present an approach to programming environments that integrates syntax-directed editors with concepts borrowed from software reuse. We call our approach example-based programming, and we define it as programming using examples as visual aids or to fully or partially copy into programs. To implement an example-based programming environment, we augmented a syntax-directed editor with a window for example programs. The example programs, which are easily accessible, can be used as examples of language constructs, thus providing syntactic information through instantiations of templates, or as examples of algorithms or programs. The code in the example window can be viewed, totally or partially copied, or run. We discuss the motivation for example-based programming, describe our system implementing example-based programming in greater depth, and report on the results of an experiment to see how the system is used by programmers.},
journal = {SIGCHI Bull.},
month = mar,
pages = {63–68},
numpages = {6}
}

@inproceedings{10.1145/67449.67465,
author = {Lange, B. M. and Moher, T. G.},
title = {Some Strategies of Reuse in an Object-Oriented Programming Environment},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67465},
doi = {10.1145/67449.67465},
abstract = {In a single-subject study of a software developer working in an object-oriented programming environment, we found evidence of a development style characterized by pervasive software reuse. The subject employed regular strategies for template selection and coding in her work, and avoided techniques requiring deep understanding of code details or symbolic execution whenever possible. Within the limits of the design of the study, the subject's performance is related to attributes of object-oriented programming and our interpretation of the mature mental model with which she approached her task.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {69–73},
numpages = {5},
series = {CHI '89}
}

@article{10.1145/67450.67465,
author = {Lange, B. M. and Moher, T. G.},
title = {Some Strategies of Reuse in an Object-Oriented Programming Environment},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67465},
doi = {10.1145/67450.67465},
abstract = {In a single-subject study of a software developer working in an object-oriented programming environment, we found evidence of a development style characterized by pervasive software reuse. The subject employed regular strategies for template selection and coding in her work, and avoided techniques requiring deep understanding of code details or symbolic execution whenever possible. Within the limits of the design of the study, the subject's performance is related to attributes of object-oriented programming and our interpretation of the mature mental model with which she approached her task.},
journal = {SIGCHI Bull.},
month = mar,
pages = {69–73},
numpages = {5}
}

@inproceedings{10.1145/67449.67466,
author = {Spenke, M. and Beilken, C.},
title = {A Spreadsheet Interface for Logic Programming},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67466},
doi = {10.1145/67449.67466},
abstract = {We present PERPLEX, a programming environment intended for the end-user. In its design, the concepts of logic programming and spreadsheets are combined. Thus, on the one hand, logic programming becomes an interactive, incremental task where the user gets direct visual feedback, on the other hand, functionality and scope of a conventional spreadsheet program are considerably extended. In order to perform calculations and queries, constraints are imposed on the contents of the spreadsheet cells. New predicates can be defined using a programming-by-example technique: Rules are extracted from the user's solutions for example problems. Thus, concrete intermediate results take over the role of abstract logic variables in the programming process. PERPLEX has been successfully implemented on a Symbolics Lisp Machine.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {75–80},
numpages = {6},
series = {CHI '89}
}

@article{10.1145/67450.67466,
author = {Spenke, M. and Beilken, C.},
title = {A Spreadsheet Interface for Logic Programming},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67466},
doi = {10.1145/67450.67466},
abstract = {We present PERPLEX, a programming environment intended for the end-user. In its design, the concepts of logic programming and spreadsheets are combined. Thus, on the one hand, logic programming becomes an interactive, incremental task where the user gets direct visual feedback, on the other hand, functionality and scope of a conventional spreadsheet program are considerably extended. In order to perform calculations and queries, constraints are imposed on the contents of the spreadsheet cells. New predicates can be defined using a programming-by-example technique: Rules are extracted from the user's solutions for example problems. Thus, concrete intermediate results take over the role of abstract logic variables in the programming process. PERPLEX has been successfully implemented on a Symbolics Lisp Machine.},
journal = {SIGCHI Bull.},
month = mar,
pages = {75–80},
numpages = {6}
}

@inproceedings{10.1145/67449.67467,
author = {Black, J. B. and Bechtold, J. S. and Mitrani, M. and Carroll, J. M.},
title = {On-Line Tutorials: What Kind of Inference Leads to the Most Effective Learning?},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67467},
doi = {10.1145/67449.67467},
abstract = {This paper presents an empirical study comparing the effectiveness of four different versions of an on-line database tutorial, each of which calls upon the student to perform a different kind of inference. The general-to-specific version presents instructions in the form of general rules, from which the students expected to infer how to apply the rule in the give context. The explanation-to-specific version supplies information about the functional organization of the database program in addition to general rules. The specific-to-specific condition gives an example of the use of a command; the student must infer how to apply the command in a slightly different context. The control version gives explicit instructions. The best performance on a post-test consisting of realistic tasks was obtained from the general-to-specific and explanation-to-specific conditions.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {81–83},
numpages = {3},
series = {CHI '89}
}

@article{10.1145/67450.67467,
author = {Black, J. B. and Bechtold, J. S. and Mitrani, M. and Carroll, J. M.},
title = {On-Line Tutorials: What Kind of Inference Leads to the Most Effective Learning?},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67467},
doi = {10.1145/67450.67467},
abstract = {This paper presents an empirical study comparing the effectiveness of four different versions of an on-line database tutorial, each of which calls upon the student to perform a different kind of inference. The general-to-specific version presents instructions in the form of general rules, from which the students expected to infer how to apply the rule in the give context. The explanation-to-specific version supplies information about the functional organization of the database program in addition to general rules. The specific-to-specific condition gives an example of the use of a command; the student must infer how to apply the command in a slightly different context. The control version gives explicit instructions. The best performance on a post-test consisting of realistic tasks was obtained from the general-to-specific and explanation-to-specific conditions.},
journal = {SIGCHI Bull.},
month = mar,
pages = {81–83},
numpages = {3}
}

@inproceedings{10.1145/67449.67468,
author = {Hill, W. C.},
title = {How Some Advice Fails},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67468},
doi = {10.1145/67449.67468},
abstract = {Video data for thirty-four cases of advice seeking, giving and following behavior at a graphical computer interface were analyzed in detail. The evidence indicated that clients followed prescriptive advice effectively and efficiently in slightly more than half the cases. For other cases, clients performed twice as many actions as needed in three times as much time and never reached prescribed states. A hypothesis that observed advice following difficulties were correlated with advice abstractness was not supported. Rather, it seems advice did not match well with clients' knowledge of the system in particular isolated details.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {85–90},
numpages = {6},
series = {CHI '89}
}

@article{10.1145/67450.67468,
author = {Hill, W. C.},
title = {How Some Advice Fails},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67468},
doi = {10.1145/67450.67468},
abstract = {Video data for thirty-four cases of advice seeking, giving and following behavior at a graphical computer interface were analyzed in detail. The evidence indicated that clients followed prescriptive advice effectively and efficiently in slightly more than half the cases. For other cases, clients performed twice as many actions as needed in three times as much time and never reached prescribed states. A hypothesis that observed advice following difficulties were correlated with advice abstractness was not supported. Rather, it seems advice did not match well with clients' knowledge of the system in particular isolated details.},
journal = {SIGCHI Bull.},
month = mar,
pages = {85–90},
numpages = {6}
}

@inproceedings{10.1145/67449.67469,
author = {Moore, J. D.},
title = {Responding to :20HUH?”: Answering Vaguely Articulated Follow-up Questions},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67469},
doi = {10.1145/67449.67469},
abstract = {Expert and advice-giving systems produce complex multi-sentential responses to user's queries. Results from analyses of novice/expert dialogues indicate that novices often do not understand an expert's response and rarely ask a well-formulated follow-up question. Thus systems must be able to provide further information in response to vaguely articulated questions. However, current systems cannot clarify misunderstood explanations or elaborate on previous explanations. In this paper we describe an approach to explanation generation that expands a system's explanatory capabilities and enables the production of clarifying or elaborating explanations in response to follow-up questions or indication that the explanation was not understood.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {91–96},
numpages = {6},
series = {CHI '89}
}

@article{10.1145/67450.67469,
author = {Moore, J. D.},
title = {Responding to :20HUH?”: Answering Vaguely Articulated Follow-up Questions},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67469},
doi = {10.1145/67450.67469},
abstract = {Expert and advice-giving systems produce complex multi-sentential responses to user's queries. Results from analyses of novice/expert dialogues indicate that novices often do not understand an expert's response and rarely ask a well-formulated follow-up question. Thus systems must be able to provide further information in response to vaguely articulated questions. However, current systems cannot clarify misunderstood explanations or elaborate on previous explanations. In this paper we describe an approach to explanation generation that expands a system's explanatory capabilities and enables the production of clarifying or elaborating explanations in response to follow-up questions or indication that the explanation was not understood.},
journal = {SIGCHI Bull.},
month = mar,
pages = {91–96},
numpages = {6}
}

@inproceedings{10.1145/67449.67470,
author = {Samuelson, P.},
title = {Protecting User Interfaces through Copyright: The Debate},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67470},
doi = {10.1145/67449.67470},
abstract = {This paper will provide an overview of the legal controversy about the extent of copyright protection that is appropriate for software user interfaces. The controversy reflects different views of how traditional principles of copyright law should be applied to software. After a brief introduction to copyright principles, the paper will set forth an argument for maximal copyright protection for software user interfaces, and then an argument for minimal copyright protection for user interfaces. Both arguments apply copyright principles; they simply draw on different parts of copyright doctrine in doing so. The paper does not aim to resolve the debate, but only to familiarize the user interface design community of the legal context in which the debate is taking place.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {97–104},
numpages = {8},
series = {CHI '89}
}

@article{10.1145/67450.67470,
author = {Samuelson, P.},
title = {Protecting User Interfaces through Copyright: The Debate},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67470},
doi = {10.1145/67450.67470},
abstract = {This paper will provide an overview of the legal controversy about the extent of copyright protection that is appropriate for software user interfaces. The controversy reflects different views of how traditional principles of copyright law should be applied to software. After a brief introduction to copyright principles, the paper will set forth an argument for maximal copyright protection for software user interfaces, and then an argument for minimal copyright protection for user interfaces. Both arguments apply copyright principles; they simply draw on different parts of copyright doctrine in doing so. The paper does not aim to resolve the debate, but only to familiarize the user interface design community of the legal context in which the debate is taking place.},
journal = {SIGCHI Bull.},
month = mar,
pages = {97–104},
numpages = {8}
}

@inproceedings{10.1145/67449.67471,
author = {Mountford, S. J. and Buxton, B. and Krueger, M. and Laurel, B. and Vertelney, L.},
title = {Drama and Personality in User Interface Design},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67471},
doi = {10.1145/67449.67471},
abstract = {The title of this panel immediately leaps out as being out of place. Of all the things that come to mind when one thinks of computers and user interfaces, drama and personality are among the last. The point here is not to make using computers more dramatic, per se, but to learn and borrow from the performing arts about techniques that could improve main stream interface design. The contributions described in this panel are borrowed from the theatrical world, film producing and music. In all the panelists work, the user is at the very center of creating the actual user interface experience, either through direct user participation or via engaging the individual viewer's personality. The panelists' pioneering research has produced and created several examples of new user interface experiences and designs. The discussion will focus on what techniques offer the most promise for facilitating the design of really new experiential user interfaces.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {105–108},
numpages = {4},
series = {CHI '89}
}

@article{10.1145/67450.67471,
author = {Mountford, S. J. and Buxton, B. and Krueger, M. and Laurel, B. and Vertelney, L.},
title = {Drama and Personality in User Interface Design},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67471},
doi = {10.1145/67450.67471},
abstract = {The title of this panel immediately leaps out as being out of place. Of all the things that come to mind when one thinks of computers and user interfaces, drama and personality are among the last. The point here is not to make using computers more dramatic, per se, but to learn and borrow from the performing arts about techniques that could improve main stream interface design. The contributions described in this panel are borrowed from the theatrical world, film producing and music. In all the panelists work, the user is at the very center of creating the actual user interface experience, either through direct user participation or via engaging the individual viewer's personality. The panelists' pioneering research has produced and created several examples of new user interface experiences and designs. The discussion will focus on what techniques offer the most promise for facilitating the design of really new experiential user interfaces.},
journal = {SIGCHI Bull.},
month = mar,
pages = {105–108},
numpages = {4}
}

@inproceedings{10.1145/67449.67472,
author = {John, B. E. and Newell, A.},
title = {Cumulating the Science of HCI: From s-R Compatibility to Transcription Typing},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67472},
doi = {10.1145/67449.67472},
abstract = {In keeping with our claim that an applied psychology of HCI must be based on cumulative work within a unified framework, we present two extensions of the Model Human Processor. A model of immediate response behavior and stimulus-response (S-R) compatibility is presented and extended to a new domain: transcription typing. Parameters are estimated using one S-R compatibility experiment, used to make a priori predictions in four other S-R compatibility tasks, and then carried over into the area of typing. A model of expert transcription typing is described and its prediction of typing phenomena is demonstrated and summarized.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {109–114},
numpages = {6},
series = {CHI '89}
}

@article{10.1145/67450.67472,
author = {John, B. E. and Newell, A.},
title = {Cumulating the Science of HCI: From s-R Compatibility to Transcription Typing},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67472},
doi = {10.1145/67450.67472},
abstract = {In keeping with our claim that an applied psychology of HCI must be based on cumulative work within a unified framework, we present two extensions of the Model Human Processor. A model of immediate response behavior and stimulus-response (S-R) compatibility is presented and extended to a new domain: transcription typing. Parameters are estimated using one S-R compatibility experiment, used to make a priori predictions in four other S-R compatibility tasks, and then carried over into the area of typing. A model of expert transcription typing is described and its prediction of typing phenomena is demonstrated and summarized.},
journal = {SIGCHI Bull.},
month = mar,
pages = {109–114},
numpages = {6}
}

@inproceedings{10.1145/67449.67473,
author = {Lee, A. Y. and Polson, P. G. and Bailey, W. A.},
title = {Learning and Transfer of Measurement Tasks},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67473},
doi = {10.1145/67449.67473},
abstract = {This study presents a theoretically motivated analysis of learning and performance on a micro-processor based oscilloscope. An analysis of the knowledge required to make basic measurements was done using the GOMS model and Cognitive Complexity Theory (CCT). From these analyses and the criterion used in Polson, Muncher, and Engelbeck (1986), tasks were selected for an experiment evaluating training order manipulations using naive users of oscilloscopes. Production system models for each training task were derived from CCT. The models successfully predicted transfer between tasks and training order effects. Implications for the design of systems with embedded micro-processors are discussed.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {115–120},
numpages = {6},
series = {CHI '89}
}

@article{10.1145/67450.67473,
author = {Lee, A. Y. and Polson, P. G. and Bailey, W. A.},
title = {Learning and Transfer of Measurement Tasks},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67473},
doi = {10.1145/67450.67473},
abstract = {This study presents a theoretically motivated analysis of learning and performance on a micro-processor based oscilloscope. An analysis of the knowledge required to make basic measurements was done using the GOMS model and Cognitive Complexity Theory (CCT). From these analyses and the criterion used in Polson, Muncher, and Engelbeck (1986), tasks were selected for an experiment evaluating training order manipulations using naive users of oscilloscopes. Production system models for each training task were derived from CCT. The models successfully predicted transfer between tasks and training order effects. Implications for the design of systems with embedded micro-processors are discussed.},
journal = {SIGCHI Bull.},
month = mar,
pages = {115–120},
numpages = {6}
}

@inproceedings{10.1145/67449.67474,
author = {Lerch, F. J. and Mantei, M. M. and Olson, J. R.},
title = {Skilled Financial Planning: The Cost of Translating Ideas into Action},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67474},
doi = {10.1145/67449.67474},
abstract = {We use GOMS models to predict error rates and mental times for translating financial concepts into equations in two widely used interface representations. The first of these, common to spreadsheet packages, is characterized by non-mnemonic naming and absolute referencing of variables. The second, common to non-procedural command-driven software, is characterized by mnemonic naming conventions and relative referencing of variables. These predictions were tested in an experiment using experienced financial analysts. Although the interface that allows mnemonic and relative names (called keyword) takes longer overall, it produces seventy-five percent fewer simple errors and requires less mental effort. Given the overall serious cost of errors in financial models, we conclude that interfaces having the keyword representation are far superior.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {121–126},
numpages = {6},
series = {CHI '89}
}

@article{10.1145/67450.67474,
author = {Lerch, F. J. and Mantei, M. M. and Olson, J. R.},
title = {Skilled Financial Planning: The Cost of Translating Ideas into Action},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67474},
doi = {10.1145/67450.67474},
abstract = {We use GOMS models to predict error rates and mental times for translating financial concepts into equations in two widely used interface representations. The first of these, common to spreadsheet packages, is characterized by non-mnemonic naming and absolute referencing of variables. The second, common to non-procedural command-driven software, is characterized by mnemonic naming conventions and relative referencing of variables. These predictions were tested in an experiment using experienced financial analysts. Although the interface that allows mnemonic and relative names (called keyword) takes longer overall, it produces seventy-five percent fewer simple errors and requires less mental effort. Given the overall serious cost of errors in financial models, we conclude that interfaces having the keyword representation are far superior.},
journal = {SIGCHI Bull.},
month = mar,
pages = {121–126},
numpages = {6}
}

@inproceedings{10.1145/67449.67475,
author = {Manheimer, J. M. and Burnett, R. C. and Wallers, J. A.},
title = {A Case Study of User Interface Management System Development and Application},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67475},
doi = {10.1145/67449.67475},
abstract = {This paper discusses the design and applications of an object-oriented user interface management system (UIMS). Specifically, the Lockheed User Interface System (LUIS) is described. LUIS is based on a user interface model that includes declarative and procedural components. The package has been used by both non-programmers and programmers in several applications at Lockheed. Experiences derived from applications of the package are used to address several key issues in the UIMS field, such as procedural versus declarative specification, separation of the user interface from applications, UIMS flexibility, and UIMS support for design evaluation.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {127–132},
numpages = {6},
series = {CHI '89}
}

@article{10.1145/67450.67475,
author = {Manheimer, J. M. and Burnett, R. C. and Wallers, J. A.},
title = {A Case Study of User Interface Management System Development and Application},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67475},
doi = {10.1145/67450.67475},
abstract = {This paper discusses the design and applications of an object-oriented user interface management system (UIMS). Specifically, the Lockheed User Interface System (LUIS) is described. LUIS is based on a user interface model that includes declarative and procedural components. The package has been used by both non-programmers and programmers in several applications at Lockheed. Experiences derived from applications of the package are used to address several key issues in the UIMS field, such as procedural versus declarative specification, separation of the user interface from applications, UIMS flexibility, and UIMS support for design evaluation.},
journal = {SIGCHI Bull.},
month = mar,
pages = {127–132},
numpages = {6}
}

@inproceedings{10.1145/67449.67476,
author = {Singh, G. and Green, M.},
title = {A High-Level User Interface Management System},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67476},
doi = {10.1145/67449.67476},
abstract = {A high-level UIMS which automatically generates the lexical and syntactic design of graphical user interfaces is presented. The interfaces generated by the UIMS can easily and rapidly be refined by the designer by using highly interactive and graphical facilities. The UIMS accepts a high-level description of the semantic commands supported by the application, a description of the implementation device, and optionally, the end user's preferences. Based on these inputs the UIMS generates graphical user interfaces in which the commands are selected from menus and command arguments are provided through interaction with graphical interaction techniques.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {133–138},
numpages = {6},
series = {CHI '89}
}

@article{10.1145/67450.67476,
author = {Singh, G. and Green, M.},
title = {A High-Level User Interface Management System},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67476},
doi = {10.1145/67450.67476},
abstract = {A high-level UIMS which automatically generates the lexical and syntactic design of graphical user interfaces is presented. The interfaces generated by the UIMS can easily and rapidly be refined by the designer by using highly interactive and graphical facilities. The UIMS accepts a high-level description of the semantic commands supported by the application, a description of the implementation device, and optionally, the end user's preferences. Based on these inputs the UIMS generates graphical user interfaces in which the commands are selected from menus and command arguments are provided through interaction with graphical interaction techniques.},
journal = {SIGCHI Bull.},
month = mar,
pages = {133–138},
numpages = {6}
}

@inproceedings{10.1145/67449.67477,
author = {DeSoi, J. F. and Lively, W. M. and Sheppard, S. V.},
title = {Graphical Specification of User Interfaces with Behavior Abstraction},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67477},
doi = {10.1145/67449.67477},
abstract = {The Application Display Generator (ADG) is a graphical environment for the design and implementation of embedded system user interfaces. It is a major component of the Graphical Specification Subsystem (GSS) in Lockheed's Express knowledge-based software development environment. ADG gives non-programmers simple and flexible methods for graphically specifying the presentation and behavior of embedded system user interfaces. In the ADG methodology arbitrary presentations are attached to abstract object behaviors. This approach makes it possible to provide unconstrained presentations, intelligent user support, rapid prototyping, and flexible facilities for composing complex objects.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {139–144},
numpages = {6},
series = {CHI '89}
}

@article{10.1145/67450.67477,
author = {DeSoi, J. F. and Lively, W. M. and Sheppard, S. V.},
title = {Graphical Specification of User Interfaces with Behavior Abstraction},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67477},
doi = {10.1145/67450.67477},
abstract = {The Application Display Generator (ADG) is a graphical environment for the design and implementation of embedded system user interfaces. It is a major component of the Graphical Specification Subsystem (GSS) in Lockheed's Express knowledge-based software development environment. ADG gives non-programmers simple and flexible methods for graphically specifying the presentation and behavior of embedded system user interfaces. In the ADG methodology arbitrary presentations are attached to abstract object behaviors. This approach makes it possible to provide unconstrained presentations, intelligent user support, rapid prototyping, and flexible facilities for composing complex objects.},
journal = {SIGCHI Bull.},
month = mar,
pages = {139–144},
numpages = {6}
}

@inproceedings{10.1145/67449.67478,
author = {Malone, T. W.},
title = {Center for Coordination Science, MIT},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67478},
doi = {10.1145/67449.67478},
abstract = {The costs and capabilities of information technology are improving by orders of magnitude every decade, but we are only beginning to understand the opportunities these changes provide for new ways of organizing human activity and new kinds of technology to help people work together. The new MIT Center for Coordination Science conducts multidisciplinary research to help understand these possibilities better. Research in the center draws upon many parts of MIT and ongoing projects in a variety of fields, including: computer science, organization theory, psychology, information systems, management science, and economics.We believe that a powerful source of intellectual leverage on questions about how groups of people can use computers will result from a better understanding of the nature of coordination. Therefore, work in the center focuses on how coordination can occur, both with and without technology. The center includes projects in the following areas:Coordination technology - designing and studying innovative computer systems that help people work together in small or large groups (e.g., “groupware”, “computer-supported cooperative work”, and “electronic markets”).Organizational structures and information technology - observing, analyzing, and predicting how information technology affects organizational structures and processes and how organizations can use information technology more effectively.Coordination theory - developing and testing theories about how the activities of separate actors can be coordinated. These theories are expected to draw upon and illuminate coordination among people and also coordination in distributed or parallel processing computer systems.In addition to research projects in these areas, the Center also sponsors seminars, workshops, working papers, and conferences.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {145–146},
numpages = {2},
series = {CHI '89}
}

@article{10.1145/67450.67478,
author = {Malone, T. W.},
title = {Center for Coordination Science, MIT},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67478},
doi = {10.1145/67450.67478},
abstract = {The costs and capabilities of information technology are improving by orders of magnitude every decade, but we are only beginning to understand the opportunities these changes provide for new ways of organizing human activity and new kinds of technology to help people work together. The new MIT Center for Coordination Science conducts multidisciplinary research to help understand these possibilities better. Research in the center draws upon many parts of MIT and ongoing projects in a variety of fields, including: computer science, organization theory, psychology, information systems, management science, and economics.We believe that a powerful source of intellectual leverage on questions about how groups of people can use computers will result from a better understanding of the nature of coordination. Therefore, work in the center focuses on how coordination can occur, both with and without technology. The center includes projects in the following areas:Coordination technology - designing and studying innovative computer systems that help people work together in small or large groups (e.g., “groupware”, “computer-supported cooperative work”, and “electronic markets”).Organizational structures and information technology - observing, analyzing, and predicting how information technology affects organizational structures and processes and how organizations can use information technology more effectively.Coordination theory - developing and testing theories about how the activities of separate actors can be coordinated. These theories are expected to draw upon and illuminate coordination among people and also coordination in distributed or parallel processing computer systems.In addition to research projects in these areas, the Center also sponsors seminars, workshops, working papers, and conferences.},
journal = {SIGCHI Bull.},
month = mar,
pages = {145–146},
numpages = {2}
}

@inproceedings{10.1145/67449.67479,
author = {Hollan, J. and Curtis, B.},
title = {CHI Research at MCC},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67479},
doi = {10.1145/67449.67479},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {147–149},
numpages = {3},
series = {CHI '89}
}

@article{10.1145/67450.67479,
author = {Hollan, J. and Curtis, B.},
title = {CHI Research at MCC},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67479},
doi = {10.1145/67450.67479},
journal = {SIGCHI Bull.},
month = mar,
pages = {147–149},
numpages = {3}
}

@inproceedings{10.1145/67449.67480,
author = {Olson, G. M.},
title = {Cognitive Science and Machine Intelligence Laboratory, University of Michigan},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67480},
doi = {10.1145/67449.67480},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {151–152},
numpages = {2},
series = {CHI '89}
}

@article{10.1145/67450.67480,
author = {Olson, G. M.},
title = {Cognitive Science and Machine Intelligence Laboratory, University of Michigan},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67480},
doi = {10.1145/67450.67480},
journal = {SIGCHI Bull.},
month = mar,
pages = {151–152},
numpages = {2}
}

@inproceedings{10.1145/67449.67481,
author = {Bisseret, A.},
title = {The Ergonomics Psychology Project at Inria},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67481},
doi = {10.1145/67449.67481},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {153–154},
numpages = {2},
series = {CHI '89}
}

@article{10.1145/67450.67481,
author = {Bisseret, A.},
title = {The Ergonomics Psychology Project at Inria},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67481},
doi = {10.1145/67450.67481},
journal = {SIGCHI Bull.},
month = mar,
pages = {153–154},
numpages = {2}
}

@inproceedings{10.1145/67449.67482,
author = {Ware, C. and Baxter, C.},
title = {Bat Brushes: On the Uses of Six Position and Orientation Parameters in a Paint Program},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67482},
doi = {10.1145/67449.67482},
abstract = {A geometry is described for converting hand position and orientation into six useful variables for computer input. The application is that of controlling form and color in an experimental computer “paint” program. We find that the most easily controlled parameters of hand placement are x,y and z cartesian coordinates and a twist parameter which approximates the wrist action that occurs when a dial is turned.The two remaining parameters are horizontal and vertical wrist rotations. In order to capture these it is necessary to correct for the rotation about the elbow which naturally occurs when the hand is translated. However, these two parameters are difficult to control independently of hand translations. Computer paint “brushes” are described which allow the real-time control of size, color and position on the screen using the hand parameters described.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {155–160},
numpages = {6},
series = {CHI '89}
}

@article{10.1145/67450.67482,
author = {Ware, C. and Baxter, C.},
title = {Bat Brushes: On the Uses of Six Position and Orientation Parameters in a Paint Program},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67482},
doi = {10.1145/67450.67482},
abstract = {A geometry is described for converting hand position and orientation into six useful variables for computer input. The application is that of controlling form and color in an experimental computer “paint” program. We find that the most easily controlled parameters of hand placement are x,y and z cartesian coordinates and a twist parameter which approximates the wrist action that occurs when a dial is turned.The two remaining parameters are horizontal and vertical wrist rotations. In order to capture these it is necessary to correct for the rotation about the elbow which naturally occurs when the hand is translated. However, these two parameters are difficult to control independently of hand translations. Computer paint “brushes” are described which allow the real-time control of size, color and position on the screen using the hand parameters described.},
journal = {SIGCHI Bull.},
month = mar,
pages = {155–160},
numpages = {6}
}

@inproceedings{10.1145/67449.67483,
author = {Jackson, J. C. and Roske-Hofstrand, R. J.},
title = {Circling: A Method of Mouse-Based Selection without Button Presses},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67483},
doi = {10.1145/67449.67483},
abstract = {A method for selecting graphical objects with a mouse by circling them is described. Circling motions are detected automatically; no button presses are required. Trials conducted on a Sun 3 workstation indicate that, for the object size and layout chosen, even users experienced with mouse selection via button presses and unfamiliar with circling are able to select pairs of objects in approximately the same amount of time with either method. The number of target misses between circling and clicking also compare well for both single and paired object cases. Furthermore, many users showed a measurable preference for the circling method when given a choice.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {161–166},
numpages = {6},
series = {CHI '89}
}

@article{10.1145/67450.67483,
author = {Jackson, J. C. and Roske-Hofstrand, R. J.},
title = {Circling: A Method of Mouse-Based Selection without Button Presses},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67483},
doi = {10.1145/67450.67483},
abstract = {A method for selecting graphical objects with a mouse by circling them is described. Circling motions are detected automatically; no button presses are required. Trials conducted on a Sun 3 workstation indicate that, for the object size and layout chosen, even users experienced with mouse selection via button presses and unfamiliar with circling are able to select pairs of objects in approximately the same amount of time with either method. The number of target misses between circling and clicking also compare well for both single and paired object cases. Furthermore, many users showed a measurable preference for the circling method when given a choice.},
journal = {SIGCHI Bull.},
month = mar,
pages = {161–166},
numpages = {6}
}

@inproceedings{10.1145/67449.67484,
author = {Raskin, J.},
title = {Systemic Implications of Leap and an Improved Two-Part Cursor},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67484},
doi = {10.1145/67449.67484},
abstract = {The lowly text cursor is a non-issue for most interface designers. Nonetheless, current text cursor designs suffer from at least two problems: one-off errors and a lack of visibility of function. These problems are exacerbated in an editing environment which uses the extremely fast Leap cursor-moving technology.This paper presents solutions to these cursor design problems and reveals the surprising way many other aspects of system design can be improved as a consequence of designing the cursor correctly.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {167–170},
numpages = {4},
series = {CHI '89}
}

@article{10.1145/67450.67484,
author = {Raskin, J.},
title = {Systemic Implications of Leap and an Improved Two-Part Cursor},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67484},
doi = {10.1145/67450.67484},
abstract = {The lowly text cursor is a non-issue for most interface designers. Nonetheless, current text cursor designs suffer from at least two problems: one-off errors and a lack of visibility of function. These problems are exacerbated in an editing environment which uses the extremely fast Leap cursor-moving technology.This paper presents solutions to these cursor design problems and reveals the surprising way many other aspects of system design can be improved as a consequence of designing the cursor correctly.},
journal = {SIGCHI Bull.},
month = mar,
pages = {167–170},
numpages = {4}
}

@inproceedings{10.1145/67449.67485,
author = {Olsen, D. R.},
title = {A Programming Language Basis for User Interface},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67485},
doi = {10.1145/67449.67485},
abstract = {The Mickey UIMS maps the user interface style and techniques of the Apple Macintosh onto the declarative constructs of Pascal. The relationships between user interfaces and the programming language control the interface generation. This imposes some restrictions on the possible styles of user interfaces but greatly enhances the usability of the UIMS.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {171–176},
numpages = {6},
series = {CHI '89}
}

@article{10.1145/67450.67485,
author = {Olsen, D. R.},
title = {A Programming Language Basis for User Interface},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67485},
doi = {10.1145/67450.67485},
abstract = {The Mickey UIMS maps the user interface style and techniques of the Apple Macintosh onto the declarative constructs of Pascal. The relationships between user interfaces and the programming language control the interface generation. This imposes some restrictions on the possible styles of user interfaces but greatly enhances the usability of the UIMS.},
journal = {SIGCHI Bull.},
month = mar,
pages = {171–176},
numpages = {6}
}

@inproceedings{10.1145/67449.67486,
author = {Wellner, P. D.},
title = {Statemaster: A UIMS Based on Statecharts for Prototyping and Target Implementation},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67486},
doi = {10.1145/67449.67486},
abstract = {Most User Interface Management systems are state based and some use state transition diagrams for dialog specification. Although these diagrams have significant advantages, they suffer from drawbacks that make them impractical for the specification of complex user interfaces. Statecharts are a hierarchical extension of state transition diagrams and are well suited for specification of complex user interface dialogs. Statemaster is a UIMS implemented in C + + that uses statecharts for dialog specification. It has been successfully used both for rapid prototyping and target implementation of user interfaces. This paper describes the use of statecharts for dialog specification and the implementation of Statemaster.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {177–182},
numpages = {6},
series = {CHI '89}
}

@article{10.1145/67450.67486,
author = {Wellner, P. D.},
title = {Statemaster: A UIMS Based on Statecharts for Prototyping and Target Implementation},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67486},
doi = {10.1145/67450.67486},
abstract = {Most User Interface Management systems are state based and some use state transition diagrams for dialog specification. Although these diagrams have significant advantages, they suffer from drawbacks that make them impractical for the specification of complex user interfaces. Statecharts are a hierarchical extension of state transition diagrams and are well suited for specification of complex user interface dialogs. Statemaster is a UIMS implemented in C + + that uses statecharts for dialog specification. It has been successfully used both for rapid prototyping and target implementation of user interfaces. This paper describes the use of statecharts for dialog specification and the implementation of Statemaster.},
journal = {SIGCHI Bull.},
month = mar,
pages = {177–182},
numpages = {6}
}

@inproceedings{10.1145/67449.67487,
author = {Siochi, A. C. and Hartson, H. R.},
title = {Task-Oriented Representation of Asynchronous User Interfaces},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67487},
doi = {10.1145/67449.67487},
abstract = {A simple, task-oriented notation for describing user actions in asynchronous user interfaces is introduced. This User Action Notation (UAN) allows the easy association of actions with feedback and system state changes as part of a set of asynchronous interface design techniques, by avoiding the verbosity and potential vagueness of prose. Use within an actual design and implementation project showed the UAN to be expressive, concise, and highly readable because of its simplicity. The task- and user-oriented techniques are naturally asynchronous and a good match for object-oriented implementation. Levels of abstraction are readily applied to allow definition of primitive tasks for sharing and reusability and to allow hiding of details for chunking. The UAN provides a critical articulation point, bridging the gap between the task viewpoint of the behavioral domain and the event-driven nature of the object-oriented implementational domain. The potential for UAN task description analysis may address some of the difficulties in developing asynchronous interfaces.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {183–188},
numpages = {6},
series = {CHI '89}
}

@article{10.1145/67450.67487,
author = {Siochi, A. C. and Hartson, H. R.},
title = {Task-Oriented Representation of Asynchronous User Interfaces},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67487},
doi = {10.1145/67450.67487},
abstract = {A simple, task-oriented notation for describing user actions in asynchronous user interfaces is introduced. This User Action Notation (UAN) allows the easy association of actions with feedback and system state changes as part of a set of asynchronous interface design techniques, by avoiding the verbosity and potential vagueness of prose. Use within an actual design and implementation project showed the UAN to be expressive, concise, and highly readable because of its simplicity. The task- and user-oriented techniques are naturally asynchronous and a good match for object-oriented implementation. Levels of abstraction are readily applied to allow definition of primitive tasks for sharing and reusability and to allow hiding of details for chunking. The UAN provides a critical articulation point, bridging the gap between the task viewpoint of the behavioral domain and the event-driven nature of the object-oriented implementational domain. The potential for UAN task description analysis may address some of the difficulties in developing asynchronous interfaces.},
journal = {SIGCHI Bull.},
month = mar,
pages = {183–188},
numpages = {6}
}

@inproceedings{10.1145/67449.67488,
author = {Poltrock, S. E.},
title = {Innovation in User Interface Development: Obstacles and Opportunities},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67488},
doi = {10.1145/67449.67488},
abstract = {Case studies of two software development organizations suggest that common practices of these organizations pose obstacles to innovation. Although software development organizations have good reasons to be conservative and resist innovation, they recognize the importance of innovations to the competitiveness of their products. But organizations experienced at development of regularly scheduled releases are not well suited to development of innovations. In this research investigators worked with the user interface teams in two organizations while interviewing people throughout the organizations. Both organizations developed prototypes, but only small design changes were prototyped and tested early in development. Innovative changes were evaluated late, when resistance to iteration was great. User interface designs and prototypes were often not shown to users. Mechanisms for coordinating development were another conservative influence. Both organizations successfully overcame these obstacles by departing from established practices.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {191–195},
numpages = {5},
series = {CHI '89}
}

@article{10.1145/67450.67488,
author = {Poltrock, S. E.},
title = {Innovation in User Interface Development: Obstacles and Opportunities},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67488},
doi = {10.1145/67450.67488},
abstract = {Case studies of two software development organizations suggest that common practices of these organizations pose obstacles to innovation. Although software development organizations have good reasons to be conservative and resist innovation, they recognize the importance of innovations to the competitiveness of their products. But organizations experienced at development of regularly scheduled releases are not well suited to development of innovations. In this research investigators worked with the user interface teams in two organizations while interviewing people throughout the organizations. Both organizations developed prototypes, but only small design changes were prototyped and tested early in development. Innovative changes were evaluated late, when resistance to iteration was great. User interface designs and prototypes were often not shown to users. Mechanisms for coordinating development were another conservative influence. Both organizations successfully overcame these obstacles by departing from established practices.},
journal = {SIGCHI Bull.},
month = mar,
pages = {191–195},
numpages = {5}
}

@inproceedings{10.1145/67449.67489,
author = {Grudin, J. and Poltrock, S. E.},
title = {User Interface Design in Large Corporations: Coordination and Communication across Disciplines},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67489},
doi = {10.1145/67449.67489},
abstract = {This report describes some of the results of a survey constructed to address the multidisciplinary, collaborative nature of user interface design as it is practiced in large software development organizations today. Survey forms were prepared for Software Engineers, Human Factors Engineers, Industrial Design Engineers, Technical Writers, Training Developers, and Marketing representatives. The survey was filled out by over 200 designers from multiple sites within 7 large companies. Previous interview studies of user interface design have relied on far smaller samples taken primarily from single organizations, and have focused on the individual designer's perspective, primarily that of programmers or software engineers. While surveys have limitations as information-gathering tools, the findings in this report suggest specific places where organizational change or tool development might improve the coordination or communication among the different professionals and managers who contribute to interface design in large company settings.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {197–203},
numpages = {7},
series = {CHI '89}
}

@article{10.1145/67450.67489,
author = {Grudin, J. and Poltrock, S. E.},
title = {User Interface Design in Large Corporations: Coordination and Communication across Disciplines},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67489},
doi = {10.1145/67450.67489},
abstract = {This report describes some of the results of a survey constructed to address the multidisciplinary, collaborative nature of user interface design as it is practiced in large software development organizations today. Survey forms were prepared for Software Engineers, Human Factors Engineers, Industrial Design Engineers, Technical Writers, Training Developers, and Marketing representatives. The survey was filled out by over 200 designers from multiple sites within 7 large companies. Previous interview studies of user interface design have relied on far smaller samples taken primarily from single organizations, and have focused on the individual designer's perspective, primarily that of programmers or software engineers. While surveys have limitations as information-gathering tools, the findings in this report suggest specific places where organizational change or tool development might improve the coordination or communication among the different professionals and managers who contribute to interface design in large company settings.},
journal = {SIGCHI Bull.},
month = mar,
pages = {197–203},
numpages = {7}
}

@inproceedings{10.1145/67449.67490,
author = {Egan, Dennis E. and Remde, Joel R. and Landauer, Thomas K. and Lochbaum, Carol C. and Gomez, L. M.},
title = {Behavioral Evaluation and Analysis of a Hypertext Browser},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67490},
doi = {10.1145/67449.67490},
abstract = {Students performed a variety of tasks using a statistics text presented either in conventional printed form or via the text browser “SuperBook” (Remde, Gomez and Landauer [18]). Students using SuperBook answered more search questions correctly, wrote higher quality “open-book” essays, and recalled certain incidental information better than students using the conventional text. Subjective ratings overwhelmingly favored SuperBook. The advantage of SuperBook appears to be particularly strong for questions that are not anticipated by the author's organization of a text.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {205–210},
numpages = {6},
series = {CHI '89}
}

@article{10.1145/67450.67490,
author = {Egan, Dennis E. and Remde, Joel R. and Landauer, Thomas K. and Lochbaum, Carol C. and Gomez, L. M.},
title = {Behavioral Evaluation and Analysis of a Hypertext Browser},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67490},
doi = {10.1145/67450.67490},
abstract = {Students performed a variety of tasks using a statistics text presented either in conventional printed form or via the text browser “SuperBook” (Remde, Gomez and Landauer [18]). Students using SuperBook answered more search questions correctly, wrote higher quality “open-book” essays, and recalled certain incidental information better than students using the conventional text. Subjective ratings overwhelmingly favored SuperBook. The advantage of SuperBook appears to be particularly strong for questions that are not anticipated by the author's organization of a text.},
journal = {SIGCHI Bull.},
month = mar,
pages = {205–210},
numpages = {6}
}

@inproceedings{10.1145/67449.67491,
author = {Mackay, W. E. and Malone, T. W. and Crowston, K. and Rao, R. and Rosenblitt, D. and Card, S. K.},
title = {How Do Experienced Information Lens Users Use Rules?},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67491},
doi = {10.1145/67449.67491},
abstract = {The Information Lens provides electronic mail users with the ability to write rules that automatically sort, select, and filter their messages. This paper describes preliminary results from an eighteen-month investigation of the use of this system at a corporate test site. We report the experiences of 13 voluntary users who have each had at least three months experience with the most recent version of the system. We found that:People without significant computer experience are able to create and use rules effectively.Useful rules can be created based on the fields present in all messages (e.g., searching for distribution lists or one's own name in the address fields or for character strings in the subject field), even without any special message templates.People use rules both to prioritize messages before reading them and to sort messages into folders for storage after reading them.People use delete rules primarily to filter out messages from low-priority distribution lists, not to delete personal messages to themselves.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {211–216},
numpages = {6},
series = {CHI '89}
}

@article{10.1145/67450.67491,
author = {Mackay, W. E. and Malone, T. W. and Crowston, K. and Rao, R. and Rosenblitt, D. and Card, S. K.},
title = {How Do Experienced Information Lens Users Use Rules?},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67491},
doi = {10.1145/67450.67491},
abstract = {The Information Lens provides electronic mail users with the ability to write rules that automatically sort, select, and filter their messages. This paper describes preliminary results from an eighteen-month investigation of the use of this system at a corporate test site. We report the experiences of 13 voluntary users who have each had at least three months experience with the most recent version of the system. We found that:People without significant computer experience are able to create and use rules effectively.Useful rules can be created based on the fields present in all messages (e.g., searching for distribution lists or one's own name in the address fields or for character strings in the subject field), even without any special message templates.People use rules both to prioritize messages before reading them and to sort messages into folders for storage after reading them.People use delete rules primarily to filter out messages from low-priority distribution lists, not to delete personal messages to themselves.},
journal = {SIGCHI Bull.},
month = mar,
pages = {211–216},
numpages = {6}
}

@inproceedings{10.1145/67449.67492,
author = {Hendrickson, J. J.},
title = {Performance, Preference, and Visual Scan Patterns on a Menu-Based System: Implications for Interface Design},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67492},
doi = {10.1145/67449.67492},
abstract = {This study was conducted to provide evidence for the nature of visual search processes with menus, and to derive design principles for menu-based natural language (MBNL) interfaces to databases. The effects of window size, window activity, and query length were investigated. It was found that longer queries were performed faster with single active windows, but multiple active windows were rated as more 'natural'. Query times increased with query length, as did eye fixation frequencies, fixation durations, and dwell times. Errors were most likely to occur on the longest query. Fixation durations also varied with window size. However, visual behavior depended on the area being viewed and on the interaction between window activity and query length. In contrast with previous studies, it was also found that menus were not scanned randomly. However, scanpaths were less deterministic with multiple active windows and became even more unconstrained as query length increased. User interface design recommendations were derived from the findings.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {217–222},
numpages = {6},
series = {CHI '89}
}

@article{10.1145/67450.67492,
author = {Hendrickson, J. J.},
title = {Performance, Preference, and Visual Scan Patterns on a Menu-Based System: Implications for Interface Design},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67492},
doi = {10.1145/67450.67492},
abstract = {This study was conducted to provide evidence for the nature of visual search processes with menus, and to derive design principles for menu-based natural language (MBNL) interfaces to databases. The effects of window size, window activity, and query length were investigated. It was found that longer queries were performed faster with single active windows, but multiple active windows were rated as more 'natural'. Query times increased with query length, as did eye fixation frequencies, fixation durations, and dwell times. Errors were most likely to occur on the longest query. Fixation durations also varied with window size. However, visual behavior depended on the area being viewed and on the interaction between window activity and query length. In contrast with previous studies, it was also found that menus were not scanned randomly. However, scanpaths were less deterministic with multiple active windows and became even more unconstrained as query length increased. User interface design recommendations were derived from the findings.},
journal = {SIGCHI Bull.},
month = mar,
pages = {217–222},
numpages = {6}
}

@inproceedings{10.1145/67449.67493,
author = {Farrand, A. B. and Erickson, T. and Hoeber, T. and Parkhurst, B. and Wilson, T.},
title = {My User Interface is the Best Because...},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67493},
doi = {10.1145/67449.67493},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {223–225},
numpages = {3},
series = {CHI '89}
}

@article{10.1145/67450.67493,
author = {Farrand, A. B. and Erickson, T. and Hoeber, T. and Parkhurst, B. and Wilson, T.},
title = {My User Interface is the Best Because...},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67493},
doi = {10.1145/67450.67493},
journal = {SIGCHI Bull.},
month = mar,
pages = {223–225},
numpages = {3}
}

@inproceedings{10.1145/67449.67494,
author = {Cohen, P. R. and Dalrymple, M. and Moran, D. B. and Pereira, F. C. and Sullivan, J. W.},
title = {Synergistic Use of Direct Manipulation and Natural Language},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67494},
doi = {10.1145/67449.67494},
abstract = {This paper shows how the integration of natural language with direct manipulation produces a multimodal interface that overcomes limitations of these techniques when used separately. Natural language helps direct manipulation in being able to specify objects and actions by description, while direct manipulation enables users to learn which objects and actions are available in the system. Furthermore, graphical rendering and manipulation of context provides a partial solution to difficult problems of natural language anaphora.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {227–233},
numpages = {7},
series = {CHI '89}
}

@article{10.1145/67450.67494,
author = {Cohen, P. R. and Dalrymple, M. and Moran, D. B. and Pereira, F. C. and Sullivan, J. W.},
title = {Synergistic Use of Direct Manipulation and Natural Language},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67494},
doi = {10.1145/67450.67494},
abstract = {This paper shows how the integration of natural language with direct manipulation produces a multimodal interface that overcomes limitations of these techniques when used separately. Natural language helps direct manipulation in being able to specify objects and actions by description, while direct manipulation enables users to learn which objects and actions are available in the system. Furthermore, graphical rendering and manipulation of context provides a partial solution to difficult problems of natural language anaphora.},
journal = {SIGCHI Bull.},
month = mar,
pages = {227–233},
numpages = {7}
}

@inproceedings{10.1145/67449.67495,
author = {Weimer, D. and Ganapathy, S. K.},
title = {A Synthetic Visual Environment with Hand Gesturing and Voice Input},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67495},
doi = {10.1145/67449.67495},
abstract = {This paper describes a practical synthetic visual environment for use in CAD and teleoperation. Instead of using expensive head mounted display systems, we use a standard display and compute smooth shaded images using an AT&amp;T Pixel Machine. The interface uses a VPL DataGlove [9] to track the hand, bringing the synthetic world into the same space as the hand. Hand gesturing is used to implement a virtual control panel, and some 3D modeling tasks. When simple speech recognition was added it markedly improved the interface. We also outline what extensions might be needed for using this kind of interface for teleoperation.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {235–240},
numpages = {6},
series = {CHI '89}
}

@article{10.1145/67450.67495,
author = {Weimer, D. and Ganapathy, S. K.},
title = {A Synthetic Visual Environment with Hand Gesturing and Voice Input},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67495},
doi = {10.1145/67450.67495},
abstract = {This paper describes a practical synthetic visual environment for use in CAD and teleoperation. Instead of using expensive head mounted display systems, we use a standard display and compute smooth shaded images using an AT&amp;T Pixel Machine. The interface uses a VPL DataGlove [9] to track the hand, bringing the synthetic world into the same space as the hand. Hand gesturing is used to implement a virtual control panel, and some 3D modeling tasks. When simple speech recognition was added it markedly improved the interface. We also outline what extensions might be needed for using this kind of interface for teleoperation.},
journal = {SIGCHI Bull.},
month = mar,
pages = {235–240},
numpages = {6}
}

@inproceedings{10.1145/67449.67496,
author = {Hauptmann, A. G.},
title = {Speech and Gestures for Graphic Image Manipulation},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67496},
doi = {10.1145/67449.67496},
abstract = {An experiment was conducted with people using gestures and speech to manipulate graphic images on a computer screen. A human was substituted for the recognition devices. The analysis showed that people strongly prefer to use both gestures and speech for the graphics manipulation and that they intuitively use multiple hands and multiple fingers in all three dimensions. There was surprising uniformity and simplicity in the gestures and speech. The analysis of these results provides strong encouragement for future development of integrated multi-modal interaction systems.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {241–245},
numpages = {5},
series = {CHI '89}
}

@article{10.1145/67450.67496,
author = {Hauptmann, A. G.},
title = {Speech and Gestures for Graphic Image Manipulation},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67496},
doi = {10.1145/67450.67496},
abstract = {An experiment was conducted with people using gestures and speech to manipulate graphic images on a computer screen. A human was substituted for the recognition devices. The analysis showed that people strongly prefer to use both gestures and speech for the graphics manipulation and that they intuitively use multiple hands and multiple fingers in all three dimensions. There was surprising uniformity and simplicity in the gestures and speech. The analysis of these results provides strong encouragement for future development of integrated multi-modal interaction systems.},
journal = {SIGCHI Bull.},
month = mar,
pages = {241–245},
numpages = {5}
}

@inproceedings{10.1145/67449.67497,
author = {MacLean, A. and Young, R. M. and Moran, T. P.},
title = {Design Rationale: The Argument behind the Artifact},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67497},
doi = {10.1145/67449.67497},
abstract = {We assert that the product of user interface design should be not only the interface itself but also a rationale for why the interface is the way it is. We describe a representation for design based around a semi-formal notation which allows us explicitly to represent alternative design options and reasons for choosing among them. We illustrate the approach with examples from an analysis of scrolling mechanisms. We discuss the roles we expect such a representation to play in improving the coherence of designs and in communicating reasons for choices to others, whether designers, maintainers, collaborators or end users.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {247–252},
numpages = {6},
series = {CHI '89}
}

@article{10.1145/67450.67497,
author = {MacLean, A. and Young, R. M. and Moran, T. P.},
title = {Design Rationale: The Argument behind the Artifact},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67497},
doi = {10.1145/67450.67497},
abstract = {We assert that the product of user interface design should be not only the interface itself but also a rationale for why the interface is the way it is. We describe a representation for design based around a semi-formal notation which allows us explicitly to represent alternative design options and reasons for choosing among them. We illustrate the approach with examples from an analysis of scrolling mechanisms. We discuss the roles we expect such a representation to play in improving the coherence of designs and in communicating reasons for choices to others, whether designers, maintainers, collaborators or end users.},
journal = {SIGCHI Bull.},
month = mar,
pages = {247–252},
numpages = {6}
}

@inproceedings{10.1145/67449.67498,
author = {Frohlich, D. M. and Luff, P.},
title = {Conversational Resources for Situated Action},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67498},
doi = {10.1145/67449.67498},
abstract = {Suchman (1987) has recently drawn attention to the situated nature of human social action and its implications for the design of interactive computer systems. In particular, she has highlighted the shortcomings of globally managing human computer dialogues by matching user actions to some idealised plan for carrying out a task. In this paper we outline a scheme for the local management of dialogues based on the findings of conversation analysis. The scheme makes available a variety of communicative resources to both user and system, including the ability to give and take turns at talk, to initiate and carry out repair work, and to continue or change the topic of conversation. An implementation of the scheme in a welfare rights Advice System is described.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {253–258},
numpages = {6},
series = {CHI '89}
}

@article{10.1145/67450.67498,
author = {Frohlich, D. M. and Luff, P.},
title = {Conversational Resources for Situated Action},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67498},
doi = {10.1145/67450.67498},
abstract = {Suchman (1987) has recently drawn attention to the situated nature of human social action and its implications for the design of interactive computer systems. In particular, she has highlighted the shortcomings of globally managing human computer dialogues by matching user actions to some idealised plan for carrying out a task. In this paper we outline a scheme for the local management of dialogues based on the findings of conversation analysis. The scheme makes available a variety of communicative resources to both user and system, including the ability to give and take turns at talk, to initiate and carry out repair work, and to continue or change the topic of conversation. An implementation of the scheme in a welfare rights Advice System is described.},
journal = {SIGCHI Bull.},
month = mar,
pages = {253–258},
numpages = {6}
}

@inproceedings{10.1145/67449.67499,
author = {Gutierrez, O.},
title = {Prototyping Techniques for Different Problem Contexts},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67499},
doi = {10.1145/67449.67499},
abstract = {Rapid prototyping and other experimental techniques are playing an increasingly important role in software development. Some common issues that concern their adoption are identifying the place in a system's life cycle where they may be appropriate, and selecting which tools to use. This paper presents a model of different problem types, suggesting that a fit must be found between the nature of the problem at hand and the features associated with available techniques. Emphasis is placed on the fact that most commercial tools are suitable for only certain problem types.Some areas of further development are highlighted and implications concerning human-computer interaction discussed.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {259–264},
numpages = {6},
series = {CHI '89}
}

@article{10.1145/67450.67499,
author = {Gutierrez, O.},
title = {Prototyping Techniques for Different Problem Contexts},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67499},
doi = {10.1145/67450.67499},
abstract = {Rapid prototyping and other experimental techniques are playing an increasingly important role in software development. Some common issues that concern their adoption are identifying the place in a system's life cycle where they may be appropriate, and selecting which tools to use. This paper presents a model of different problem types, suggesting that a fit must be found between the nature of the problem at hand and the features associated with available techniques. Emphasis is placed on the fact that most commercial tools are suitable for only certain problem types.Some areas of further development are highlighted and implications concerning human-computer interaction discussed.},
journal = {SIGCHI Bull.},
month = mar,
pages = {259–264},
numpages = {6}
}

@inproceedings{10.1145/67449.67500,
author = {Wolf, C. G. and Carroll, J. M. and Landauer, T. K. and John, B. E. and Whiteside, J.},
title = {The Role of Laboratory  Experiments in HCI: Help, Hindrance, or Ho-Hum?},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67500},
doi = {10.1145/67449.67500},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {265–268},
numpages = {4},
series = {CHI '89}
}

@article{10.1145/67450.67500,
author = {Wolf, C. G. and Carroll, J. M. and Landauer, T. K. and John, B. E. and Whiteside, J.},
title = {The Role of Laboratory  Experiments in HCI: Help, Hindrance, or Ho-Hum?},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67500},
doi = {10.1145/67450.67500},
journal = {SIGCHI Bull.},
month = mar,
pages = {265–268},
numpages = {4}
}

@inproceedings{10.1145/67449.67501,
author = {Fischer, G. and McCall, R. and Morch, A.},
title = {Design Environments for Constructive and Argumentative Design},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67501},
doi = {10.1145/67449.67501},
abstract = {Design Environments are computer systems which support design by enabling cooperative problem solving between designer and computer. There are two complementary problem solving activities in design: constructive design and argumentative design. We have created two computer-supported environments, CRACK and VIEWPOINTS, to support these two activities.CRACK is a knowledge-based critic which has knowledge about how kitchen appliances can be assembled into functional kitchens. VIEWPOINTS is a hypertext system based on the IBIS design methodology and contains useful information about the principles of kitchen design. The integration of these two types of systems will eliminate shortcomings of the individual systems.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {269–275},
numpages = {7},
series = {CHI '89}
}

@article{10.1145/67450.67501,
author = {Fischer, G. and McCall, R. and Morch, A.},
title = {Design Environments for Constructive and Argumentative Design},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67501},
doi = {10.1145/67450.67501},
abstract = {Design Environments are computer systems which support design by enabling cooperative problem solving between designer and computer. There are two complementary problem solving activities in design: constructive design and argumentative design. We have created two computer-supported environments, CRACK and VIEWPOINTS, to support these two activities.CRACK is a knowledge-based critic which has knowledge about how kitchen appliances can be assembled into functional kitchens. VIEWPOINTS is a hypertext system based on the IBIS design methodology and contains useful information about the principles of kitchen design. The integration of these two types of systems will eliminate shortcomings of the individual systems.},
journal = {SIGCHI Bull.},
month = mar,
pages = {269–275},
numpages = {7}
}

@inproceedings{10.1145/67449.67502,
author = {Wiecha, C. and Bennett, W. and Boies, s. and Gould, J.},
title = {Generating Highly Interactive User Interfaces},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67502},
doi = {10.1145/67449.67502},
abstract = {Developers of User Interface Management Systems (UIMS) have demonstrated that separating the application from its user interface supports device independence and customization. Interfaces produced in UIMS are typically crafted by designers expert in human factors and graphic arts. Little attention has been paid, however, to capturing the knowledge of such experts so that interfaces might be automatically generated by the application of style rules to additional applications. This paper considers how toolkits and style rules can be structured so that the resulting interfaces take advantage of the best human factors and graphic arts knowledge, and are consistently styled.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {277–282},
numpages = {6},
series = {CHI '89}
}

@article{10.1145/67450.67502,
author = {Wiecha, C. and Bennett, W. and Boies, s. and Gould, J.},
title = {Generating Highly Interactive User Interfaces},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67502},
doi = {10.1145/67450.67502},
abstract = {Developers of User Interface Management Systems (UIMS) have demonstrated that separating the application from its user interface supports device independence and customization. Interfaces produced in UIMS are typically crafted by designers expert in human factors and graphic arts. Little attention has been paid, however, to capturing the knowledge of such experts so that interfaces might be automatically generated by the application of style rules to additional applications. This paper considers how toolkits and style rules can be structured so that the resulting interfaces take advantage of the best human factors and graphic arts knowledge, and are consistently styled.},
journal = {SIGCHI Bull.},
month = mar,
pages = {277–282},
numpages = {6}
}

@inproceedings{10.1145/67449.67503,
author = {Knox, S. T. and Bailey, W. A. and Lynch, E. F.},
title = {Directed Dialogue Protocols: Verbal Data for User Interface Design},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67503},
doi = {10.1145/67449.67503},
abstract = {The development of an interface design tool called “directed dialogue protocols” is discussed. The tool is based upon Kato's (1986) method of verbal data collection, “question-asking protocols.” Three extensions to the question-asking method are detailed: 1) an experimental procedure of atomic tasks which facilitate the quantization of verbal data; 2) interventions by the experimenter that probe the subject's expectations and prompt verbalizations; and 3) a technique for answering subject queries called sequential disclosure. Also discussed are applications of the directed dialogue that have identified design choices which build learnability and usability into a product's user-interface.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {283–287},
numpages = {5},
series = {CHI '89}
}

@article{10.1145/67450.67503,
author = {Knox, S. T. and Bailey, W. A. and Lynch, E. F.},
title = {Directed Dialogue Protocols: Verbal Data for User Interface Design},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67503},
doi = {10.1145/67450.67503},
abstract = {The development of an interface design tool called “directed dialogue protocols” is discussed. The tool is based upon Kato's (1986) method of verbal data collection, “question-asking protocols.” Three extensions to the question-asking method are detailed: 1) an experimental procedure of atomic tasks which facilitate the quantization of verbal data; 2) interventions by the experimenter that probe the subject's expectations and prompt verbalizations; and 3) a technique for answering subject queries called sequential disclosure. Also discussed are applications of the directed dialogue that have identified design choices which build learnability and usability into a product's user-interface.},
journal = {SIGCHI Bull.},
month = mar,
pages = {283–287},
numpages = {5}
}

@inproceedings{10.1145/67449.67504,
author = {Whalen, T. and Patrick, A.},
title = {Conversational Hypertext: Information Access through Natural Language Dialogues with Computers},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67504},
doi = {10.1145/67449.67504},
abstract = {One need not create a natural language understanding system in order to create a hypertext data base that can be traversed with unconstrained natural language. The task is simplified because the computer creates a constrained context, imposes a non-negotiable topic, and elicits simple questions. Two small hypertext data bases describing the authors' organization and the terms and rules of baseball were implemented on an IBM PC. When ten untrained people were allowed to search through these data bases, 59 per cent of their queries were answered correctly by the first data base and 64 per cent by the second.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {289–292},
numpages = {4},
series = {CHI '89}
}

@article{10.1145/67450.67504,
author = {Whalen, T. and Patrick, A.},
title = {Conversational Hypertext: Information Access through Natural Language Dialogues with Computers},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67504},
doi = {10.1145/67450.67504},
abstract = {One need not create a natural language understanding system in order to create a hypertext data base that can be traversed with unconstrained natural language. The task is simplified because the computer creates a constrained context, imposes a non-negotiable topic, and elicits simple questions. Two small hypertext data bases describing the authors' organization and the terms and rules of baseball were implemented on an IBM PC. When ten untrained people were allowed to search through these data bases, 59 per cent of their queries were answered correctly by the first data base and 64 per cent by the second.},
journal = {SIGCHI Bull.},
month = mar,
pages = {289–292},
numpages = {4}
}

@inproceedings{10.1145/67449.67505,
author = {Glushko, Robert J.},
title = {Transforming Text into Hypertext for a Compact Disc Encyclopedia},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67505},
doi = {10.1145/67449.67505},
abstract = {A hypertext version of a multi-volume engineering encyclopedia on a compact disc is described. The methods for characterizing the explicit and implicit structure of the document, the novel user interface to the compact disc version, and the design and development lessons that apply to any hypertext project involving realistic amounts of text and graphics are discussed.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {293–298},
numpages = {6},
series = {CHI '89}
}

@article{10.1145/67450.67505,
author = {Glushko, Robert J.},
title = {Transforming Text into Hypertext for a Compact Disc Encyclopedia},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67505},
doi = {10.1145/67450.67505},
abstract = {A hypertext version of a multi-volume engineering encyclopedia on a compact disc is described. The methods for characterizing the explicit and implicit structure of the document, the novel user interface to the compact disc version, and the design and development lessons that apply to any hypertext project involving realistic amounts of text and graphics are discussed.},
journal = {SIGCHI Bull.},
month = mar,
pages = {293–298},
numpages = {6}
}

@inproceedings{10.1145/67449.67506,
author = {Fairchild, K. and Meredith, G. and Wexelblat, A.},
title = {The Tourist Artificial Reality},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67506},
doi = {10.1145/67449.67506},
abstract = {This paper describes a prototype system designed to meet the needs of the next generation of user interfaces. We address research questions of information complexity, multiple shared semantically-oriented views, and customizable tool environments. Our domain of interest is software systems that require interfaces for teams of people to large bodies of design artifacts. This prototype is built around the metaphor of tourists and tour guides.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {299–304},
numpages = {6},
series = {CHI '89}
}

@article{10.1145/67450.67506,
author = {Fairchild, K. and Meredith, G. and Wexelblat, A.},
title = {The Tourist Artificial Reality},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67506},
doi = {10.1145/67450.67506},
abstract = {This paper describes a prototype system designed to meet the needs of the next generation of user interfaces. We address research questions of information complexity, multiple shared semantically-oriented views, and customizable tool environments. Our domain of interest is software systems that require interfaces for teams of people to large bodies of design artifacts. This prototype is built around the metaphor of tourists and tour guides.},
journal = {SIGCHI Bull.},
month = mar,
pages = {299–304},
numpages = {6}
}

@inproceedings{10.1145/67449.67507,
author = {Kendzierski, N.},
title = {Human-Computer Interaction Department, Hewlett-Packard Laboratories},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67507},
doi = {10.1145/67449.67507},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {305–306},
numpages = {2},
series = {CHI '89}
}

@article{10.1145/67450.67507,
author = {Kendzierski, N.},
title = {Human-Computer Interaction Department, Hewlett-Packard Laboratories},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67507},
doi = {10.1145/67450.67507},
journal = {SIGCHI Bull.},
month = mar,
pages = {305–306},
numpages = {2}
}

@inproceedings{10.1145/67449.67508,
author = {Hoppe, H. U. and King, R. T. and Tissen, A.},
title = {Cognitive User Interface Laboratory, GMD-IPSI},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67508},
doi = {10.1145/67449.67508},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {307–308},
numpages = {2},
series = {CHI '89}
}

@article{10.1145/67450.67508,
author = {Hoppe, H. U. and King, R. T. and Tissen, A.},
title = {Cognitive User Interface Laboratory, GMD-IPSI},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67508},
doi = {10.1145/67450.67508},
journal = {SIGCHI Bull.},
month = mar,
pages = {307–308},
numpages = {2}
}

@inproceedings{10.1145/67449.67509,
author = {Shneiderman, B.},
title = {Human-Computer Interaction Lab, University of Maryland},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67509},
doi = {10.1145/67449.67509},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {309–310},
numpages = {2},
series = {CHI '89}
}

@article{10.1145/67450.67509,
author = {Shneiderman, B.},
title = {Human-Computer Interaction Lab, University of Maryland},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67509},
doi = {10.1145/67450.67509},
journal = {SIGCHI Bull.},
month = mar,
pages = {309–310},
numpages = {2}
}

@inproceedings{10.1145/67449.67510,
author = {Hunt, R. M.},
title = {Search Technology, Inc.},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67510},
doi = {10.1145/67449.67510},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {311–312},
numpages = {2},
series = {CHI '89}
}

@article{10.1145/67450.67510,
author = {Hunt, R. M.},
title = {Search Technology, Inc.},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67510},
doi = {10.1145/67450.67510},
journal = {SIGCHI Bull.},
month = mar,
pages = {311–312},
numpages = {2}
}

@inproceedings{10.1145/67449.67511,
author = {Baudelaire, P. and Gangnet, M.},
title = {Planar Maps: An Interaction Paradigm for Graphic Design},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67511},
doi = {10.1145/67449.67511},
abstract = {Compared to traditional media, computer illustration software offers superior editing power at the cost of reduced freedom in the picture construction process. To reduce this discrepancy, we propose an extension to the classical paradigm of 2D layered drawing, the map paradigm, that is conducive to a more natural drawing technique. We present the key concepts on which the new paradigm is based: a) graphical objects, called planar maps, that describe shapes with multiple colors and contours; b) a drawing technique, called map sketching, that allows the iterative construction of arbitrarily complex objects. We also discuss user interface design issues in map based illustration software.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {313–318},
numpages = {6},
series = {CHI '89}
}

@article{10.1145/67450.67511,
author = {Baudelaire, P. and Gangnet, M.},
title = {Planar Maps: An Interaction Paradigm for Graphic Design},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67511},
doi = {10.1145/67450.67511},
abstract = {Compared to traditional media, computer illustration software offers superior editing power at the cost of reduced freedom in the picture construction process. To reduce this discrepancy, we propose an extension to the classical paradigm of 2D layered drawing, the map paradigm, that is conducive to a more natural drawing technique. We present the key concepts on which the new paradigm is based: a) graphical objects, called planar maps, that describe shapes with multiple colors and contours; b) a drawing technique, called map sketching, that allows the iterative construction of arbitrarily complex objects. We also discuss user interface design issues in map based illustration software.},
journal = {SIGCHI Bull.},
month = mar,
pages = {313–318},
numpages = {6}
}

@inproceedings{10.1145/67449.67512,
author = {Myers, B. A.},
title = {Encapsulating Interactive Behaviors},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67512},
doi = {10.1145/67449.67512},
abstract = {Although there has been important progress in models and packages for the output of graphics to computer screens, there has been little change in the way that input from the mouse, keyboard and other input devices is handled. New graphics standards are still using a ten year old model even though it is widely accepted as inadequate, and most modern window managers simply return a stream of device-dependent input events. This paper presents a new model for how input devices can be handled for highly-interactive, direct manipulation, graphical user interfaces. This model encapsulates interactive behaviors into a few “interactor” object types. Application programs can then create instances of these interactor objects, and the details of the handling of the input devices are separated from the application and from the output graphics.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {319–324},
numpages = {6},
series = {CHI '89}
}

@article{10.1145/67450.67512,
author = {Myers, B. A.},
title = {Encapsulating Interactive Behaviors},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67512},
doi = {10.1145/67450.67512},
abstract = {Although there has been important progress in models and packages for the output of graphics to computer screens, there has been little change in the way that input from the mouse, keyboard and other input devices is handled. New graphics standards are still using a ten year old model even though it is widely accepted as inadequate, and most modern window managers simply return a stream of device-dependent input events. This paper presents a new model for how input devices can be handled for highly-interactive, direct manipulation, graphical user interfaces. This model encapsulates interactive behaviors into a few “interactor” object types. Application programs can then create instances of these interactor objects, and the details of the handling of the input devices are separated from the application and from the output graphics.},
journal = {SIGCHI Bull.},
month = mar,
pages = {319–324},
numpages = {6}
}

@inproceedings{10.1145/67449.67513,
author = {Zanden, B. T.},
title = {Constraint Grammars–a New Model for Specifying Graphical Applications},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67513},
doi = {10.1145/67449.67513},
abstract = {User Interface Management Systems often attempt to separate the graphical and nongraphical aspects of an application, but rarely succeed. Constraint grammars provide a new model for specifying interfaces that achieves this goal by encapsulating the data structures in a single package, and providing a powerful transformation-based editing model for manipulating them. Constraint grammars incorporate a number of important tools, such as the part-whole hierarchy, almost hierarchical structures, and multidirectional constraints, that permit designers to specify a wide variety of graphical applications, including simulation systems, program visualization systems, and visual programming environments.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {325–330},
numpages = {6},
series = {CHI '89}
}

@article{10.1145/67450.67513,
author = {Zanden, B. T.},
title = {Constraint Grammars–a New Model for Specifying Graphical Applications},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67513},
doi = {10.1145/67450.67513},
abstract = {User Interface Management Systems often attempt to separate the graphical and nongraphical aspects of an application, but rarely succeed. Constraint grammars provide a new model for specifying interfaces that achieves this goal by encapsulating the data structures in a single package, and providing a powerful transformation-based editing model for manipulating them. Constraint grammars incorporate a number of important tools, such as the part-whole hierarchy, almost hierarchical structures, and multidirectional constraints, that permit designers to specify a wide variety of graphical applications, including simulation systems, program visualization systems, and visual programming environments.},
journal = {SIGCHI Bull.},
month = mar,
pages = {325–330},
numpages = {6}
}

@inproceedings{10.1145/67449.67514,
author = {Roberts, T. L. and Engelbeck, G.},
title = {The Effects of Device Technology on the Usability of Advanced Telephone Functions},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67514},
doi = {10.1145/67449.67514},
abstract = {This paper presents a pilot study that addresses the effect that device technology has on the usability of advanced telephone functions. We prototyped telephone systems using three technologies: the current 12-button phone set, the current phone set augmented with speech synthesis, and a phone set augmented with a display and pointing device. The functions that we offered included call routing, call screening, and message retrieval. Experiments showed that a display-based phone was the fastest to use and was preferred; an interface that used voice-prompting was the slowest and least liked. This points out that future work on prompting interfaces will have to address user control and efficiency issues without causing learning/forgetting problems.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {331–337},
numpages = {7},
series = {CHI '89}
}

@article{10.1145/67450.67514,
author = {Roberts, T. L. and Engelbeck, G.},
title = {The Effects of Device Technology on the Usability of Advanced Telephone Functions},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67514},
doi = {10.1145/67450.67514},
abstract = {This paper presents a pilot study that addresses the effect that device technology has on the usability of advanced telephone functions. We prototyped telephone systems using three technologies: the current 12-button phone set, the current phone set augmented with speech synthesis, and a phone set augmented with a display and pointing device. The functions that we offered included call routing, call screening, and message retrieval. Experiments showed that a display-based phone was the fastest to use and was preferred; an interface that used voice-prompting was the slowest and least liked. This points out that future work on prompting interfaces will have to address user control and efficiency issues without causing learning/forgetting problems.},
journal = {SIGCHI Bull.},
month = mar,
pages = {331–337},
numpages = {7}
}

@inproceedings{10.1145/67449.67515,
author = {Brown, M. L. and Newsome, S. L. and Glinert, E. P.},
title = {An Experiment into the Use of Auditory Cues to Reduce Visual Workload},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67515},
doi = {10.1145/67449.67515},
abstract = {The potential utility of dividing the information flowing from computer to human among several sensory modalities is investigated by means of a rigorous experiment which compares the effectiveness of auditory and visual cues in the performance of a visual search task. The results indicate that a complex auditory cue can be used to replace cues traditionally presented in the visual modality. Implications for the design of multimodal workstations are discussed.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {339–346},
numpages = {8},
series = {CHI '89}
}

@article{10.1145/67450.67515,
author = {Brown, M. L. and Newsome, S. L. and Glinert, E. P.},
title = {An Experiment into the Use of Auditory Cues to Reduce Visual Workload},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67515},
doi = {10.1145/67450.67515},
abstract = {The potential utility of dividing the information flowing from computer to human among several sensory modalities is investigated by means of a rigorous experiment which compares the effectiveness of auditory and visual cues in the performance of a visual search task. The results indicate that a complex auditory cue can be used to replace cues traditionally presented in the visual modality. Implications for the design of multimodal workstations are discussed.},
journal = {SIGCHI Bull.},
month = mar,
pages = {339–346},
numpages = {8}
}

@inproceedings{10.1145/67449.67516,
author = {Halstead-Nussloch, R.},
title = {The Design of Phone-Based Interfaces for Consumers},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67516},
doi = {10.1145/67449.67516},
abstract = {This paper identifies guidelines for designing human-computer interfaces using telephones as terminals. Although they are ubiquitous and convenient to use, phones differ from screen terminals in two important ways: the information display is auditory and serial, and users do not have a pointer. The differences result in limitations for the interface designer. The guidelines focus on developing an effective interface within the limitations. Ongoing analysis, design, development, and testing work at IBM Poughkeepsie and literature are synthesized into guidelines. They present design options for user input, system output, and the system and user roles in a phone-based dialogue.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {347–352},
numpages = {6},
series = {CHI '89}
}

@article{10.1145/67450.67516,
author = {Halstead-Nussloch, R.},
title = {The Design of Phone-Based Interfaces for Consumers},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67516},
doi = {10.1145/67450.67516},
abstract = {This paper identifies guidelines for designing human-computer interfaces using telephones as terminals. Although they are ubiquitous and convenient to use, phones differ from screen terminals in two important ways: the information display is auditory and serial, and users do not have a pointer. The differences result in limitations for the interface designer. The guidelines focus on developing an effective interface within the limitations. Ongoing analysis, design, development, and testing work at IBM Poughkeepsie and literature are synthesized into guidelines. They present design options for user input, system output, and the system and user roles in a phone-based dialogue.},
journal = {SIGCHI Bull.},
month = mar,
pages = {347–352},
numpages = {6}
}

@inproceedings{10.1145/67449.67517,
author = {Ehrlich, S. F. and Bikson, T. and Mackay, W. and Tang, J. C.},
title = {Tools for Supporting Cooperative Work near and Far: Highlights from the CSCW Conference},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67517},
doi = {10.1145/67449.67517},
abstract = {The second conference on Computer Supported Cooperative Work has provided focus on use of computers for supporting workers that are at various levels of geographic dispersion. The participants in this panel reported case studies at that conference on group work (1) in face-to-face meetings, (2) in the same building, and (3) distributed across a number of sites. Each panelist therefore brings insight about the communication needs of their research subjects and both the value and limitations of particular technologies for supporting the communication that ties the members of the groups together as geographic distance varies.Each of the panelists will address the following two questions:What are the preferred types of communication (visual, written, spoken) for people working together at particular geographic distances?What are the benefits and shortcomings of available technologies (video, electronic-mail, telephone/voice mail) for supporting these types of communication?},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {353–356},
numpages = {4},
series = {CHI '89}
}

@article{10.1145/67450.67517,
author = {Ehrlich, S. F. and Bikson, T. and Mackay, W. and Tang, J. C.},
title = {Tools for Supporting Cooperative Work near and Far: Highlights from the CSCW Conference},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67517},
doi = {10.1145/67450.67517},
abstract = {The second conference on Computer Supported Cooperative Work has provided focus on use of computers for supporting workers that are at various levels of geographic dispersion. The participants in this panel reported case studies at that conference on group work (1) in face-to-face meetings, (2) in the same building, and (3) distributed across a number of sites. Each panelist therefore brings insight about the communication needs of their research subjects and both the value and limitations of particular technologies for supporting the communication that ties the members of the groups together as geographic distance varies.Each of the panelists will address the following two questions:What are the preferred types of communication (visual, written, spoken) for people working together at particular geographic distances?What are the benefits and shortcomings of available technologies (video, electronic-mail, telephone/voice mail) for supporting these types of communication?},
journal = {SIGCHI Bull.},
month = mar,
pages = {353–356},
numpages = {4}
}

@inproceedings{10.1145/67449.67518,
author = {Fischer, G. and Nieper-Lemke, H.},
title = {Helgon: Extending the Retrieval by Reformulation Paradigm},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67518},
doi = {10.1145/67449.67518},
abstract = {People who attempt to use a complex information store on a computer encounter a number of problems: They do not know what information exists or how to find information, they get no support in articulating a question, and they are unable to phrase their question in terms that the system understands. Helgon, an intelligent environment that supports limited cooperative problem solving, helps people deal with complex information stores. Helgon supports retrieval and editing by reformulation with multiple specification techniques, and it acquaints the user with the system model of the information store. Within the current Helgon system, a number of different information stores have been implemented. Empirical evaluations have shown that Helgon supports effective communication. In addition, the evaluations have shown interesting extensions for future work.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {357–362},
numpages = {6},
series = {CHI '89}
}

@article{10.1145/67450.67518,
author = {Fischer, G. and Nieper-Lemke, H.},
title = {Helgon: Extending the Retrieval by Reformulation Paradigm},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67518},
doi = {10.1145/67450.67518},
abstract = {People who attempt to use a complex information store on a computer encounter a number of problems: They do not know what information exists or how to find information, they get no support in articulating a question, and they are unable to phrase their question in terms that the system understands. Helgon, an intelligent environment that supports limited cooperative problem solving, helps people deal with complex information stores. Helgon supports retrieval and editing by reformulation with multiple specification techniques, and it acquaints the user with the system model of the information store. Within the current Helgon system, a number of different information stores have been implemented. Empirical evaluations have shown that Helgon supports effective communication. In addition, the evaluations have shown interesting extensions for future work.},
journal = {SIGCHI Bull.},
month = mar,
pages = {357–362},
numpages = {6}
}

@inproceedings{10.1145/67449.67519,
author = {Collura, T. F. and Jacobs, E. C. and Burgess, R. C. and Klem, G. H.},
title = {User-Interface Design for a Clinical Neurophysiological Intensive Monitoring System},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67519},
doi = {10.1145/67449.67519},
abstract = {We describe the functional requirements and design reasoning leading to a user-interface for an automated clinical neurophysiological monitoring system. The design provides a versatile, high-performance system in which computer-naive users have access to functions typically requiring dedicated training.The system provides real-time data acquisition, signal processing, and graphical output, specifically tailored for the diagnosis and characterization of cases of epilepsy. The development of a user-interface was based on a collaborative effort, in which designers and users worked with a common functional model, and developed working metaphors for system operations. In addition, an interactive screen was designed to facilitate the management of multiple concurrent operations in an intuitive and easy to learn fashion.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {363–368},
numpages = {6},
series = {CHI '89}
}

@article{10.1145/67450.67519,
author = {Collura, T. F. and Jacobs, E. C. and Burgess, R. C. and Klem, G. H.},
title = {User-Interface Design for a Clinical Neurophysiological Intensive Monitoring System},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67519},
doi = {10.1145/67450.67519},
abstract = {We describe the functional requirements and design reasoning leading to a user-interface for an automated clinical neurophysiological monitoring system. The design provides a versatile, high-performance system in which computer-naive users have access to functions typically requiring dedicated training.The system provides real-time data acquisition, signal processing, and graphical output, specifically tailored for the diagnosis and characterization of cases of epilepsy. The development of a user-interface was based on a collaborative effort, in which designers and users worked with a common functional model, and developed working metaphors for system operations. In addition, an interactive screen was designed to facilitate the management of multiple concurrent operations in an intuitive and easy to learn fashion.},
journal = {SIGCHI Bull.},
month = mar,
pages = {363–368},
numpages = {6}
}

@inproceedings{10.1145/67449.67520,
author = {Iwai, I. and Doi, M. and Yamaguchi, K. and Fukui, M. and Takebayashi, Y.},
title = {A Document Layout System Using Automatic Document Architecture Extraction},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67520},
doi = {10.1145/67449.67520},
abstract = {A document layout system based on automatic extraction of document architecture including logical and reference structures has been developed for reducing users' effort in document preparation, and has been implemented in a practical Japanese word processor. The extracted document architecture is used for both automatic text formatting and layout of text, figures and tables. Automatic text element recognition is performed by morphological analysis using keywords. Through intra-line (one sentence) and inter-line (relations between sentences) analysis, logical and reference structures are obtained. The automatic layout system effectively lays out the document using the extracted document architecture and knowledge about the layout.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {369–374},
numpages = {6},
series = {CHI '89}
}

@article{10.1145/67450.67520,
author = {Iwai, I. and Doi, M. and Yamaguchi, K. and Fukui, M. and Takebayashi, Y.},
title = {A Document Layout System Using Automatic Document Architecture Extraction},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67520},
doi = {10.1145/67450.67520},
abstract = {A document layout system based on automatic extraction of document architecture including logical and reference structures has been developed for reducing users' effort in document preparation, and has been implemented in a practical Japanese word processor. The extracted document architecture is used for both automatic text formatting and layout of text, figures and tables. Automatic text element recognition is performed by morphological analysis using keywords. Through intra-line (one sentence) and inter-line (relations between sentences) analysis, logical and reference structures are obtained. The automatic layout system effectively lays out the document using the extracted document architecture and knowledge about the layout.},
journal = {SIGCHI Bull.},
month = mar,
pages = {369–374},
numpages = {6}
}

@inproceedings{10.1145/67449.67521,
author = {Gillan, D. J. and Lewis, R. and Rudisill, M.},
title = {Models of User Interactions with Graphical Interfaces: 1. Statistical},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67521},
doi = {10.1145/67449.67521},
abstract = {Three models of human interactions with computer-displayed statistical graphics were developed and tested in an experiment which examined users' speed and accuracy on identification and comparison questions using 17 graph types. The results indicated that response time and accuracy were influenced by the perceptual and informational complexity of the graph, as well as the relation between the figure and axes, (Model 1); by the physical elements of the graph — points, lines, and areas (Model 2); and by the data-ink ratio and data density (Model 3). The discussion focuses on the development of a single integrated model of interactions with graphics.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {375–380},
numpages = {6},
series = {CHI '89}
}

@article{10.1145/67450.67521,
author = {Gillan, D. J. and Lewis, R. and Rudisill, M.},
title = {Models of User Interactions with Graphical Interfaces: 1. Statistical},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67521},
doi = {10.1145/67450.67521},
abstract = {Three models of human interactions with computer-displayed statistical graphics were developed and tested in an experiment which examined users' speed and accuracy on identification and comparison questions using 17 graph types. The results indicated that response time and accuracy were influenced by the perceptual and informational complexity of the graph, as well as the relation between the figure and axes, (Model 1); by the physical elements of the graph — points, lines, and areas (Model 2); and by the data-ink ratio and data density (Model 3). The discussion focuses on the development of a single integrated model of interactions with graphics.},
journal = {SIGCHI Bull.},
month = mar,
pages = {375–380},
numpages = {6}
}

@inproceedings{10.1145/67449.67522,
author = {Cole, W. G.},
title = {Understanding Bayesian Reasoning via Graphical Displays},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67522},
doi = {10.1145/67449.67522},
abstract = {Bayesian reasoning, updating subjective probability in light of new information, is notoriously difficult. One factor that may contribute to this difficulty is lack of a mental model for how to combine the three key parameters in any Bayesian problem. An experiment was conducted contrasting four representations of Bayesian problems: three types of diagrams and a two by two contingency table. All four representations led to extremely good performance on a Bayesian task. This advantage also extended to a superficially dissimilar task and also persisted beyond the day of training, suggesting that graphic and tabular representation can lead to flexible and durable changes in the way people think about such problems.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {381–386},
numpages = {6},
series = {CHI '89}
}

@article{10.1145/67450.67522,
author = {Cole, W. G.},
title = {Understanding Bayesian Reasoning via Graphical Displays},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67522},
doi = {10.1145/67450.67522},
abstract = {Bayesian reasoning, updating subjective probability in light of new information, is notoriously difficult. One factor that may contribute to this difficulty is lack of a mental model for how to combine the three key parameters in any Bayesian problem. An experiment was conducted contrasting four representations of Bayesian problems: three types of diagrams and a two by two contingency table. All four representations led to extremely good performance on a Bayesian task. This advantage also extended to a superficially dissimilar task and also persisted beyond the day of training, suggesting that graphic and tabular representation can lead to flexible and durable changes in the way people think about such problems.},
journal = {SIGCHI Bull.},
month = mar,
pages = {381–386},
numpages = {6}
}

@inproceedings{10.1145/67449.67523,
author = {Nakayama, Yasutomo},
title = {Mathematical Formula Editor for CAI},
year = {1989},
isbn = {0897913019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/67449.67523},
doi = {10.1145/67449.67523},
abstract = {Many students in lower grades who study mathematics with computers have difficulty in inputting formulas by using existing methods. It would be much easier for them if they could input formulas naturally, as they appear in textbooks. This paper describes such an interface program module for use in CAI. This module makes it easy for students to input and edit complex formulas solely by key operations, without using a mouse. The difference between the module and existing mathematical expression editors is that it converts formulas into character strings syntactically. In this way, CAI programs can understand the meanings of the formulas.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {387–392},
numpages = {6},
series = {CHI '89}
}

@article{10.1145/67450.67523,
author = {Nakayama, Yasutomo},
title = {Mathematical Formula Editor for CAI},
year = {1989},
issue_date = {March 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {SI},
issn = {0736-6906},
url = {https://doi.org/10.1145/67450.67523},
doi = {10.1145/67450.67523},
abstract = {Many students in lower grades who study mathematics with computers have difficulty in inputting formulas by using existing methods. It would be much easier for them if they could input formulas naturally, as they appear in textbooks. This paper describes such an interface program module for use in CAI. This module makes it easy for students to input and edit complex formulas solely by key operations, without using a mouse. The difference between the module and existing mathematical expression editors is that it converts formulas into character strings syntactically. In this way, CAI programs can understand the meanings of the formulas.},
journal = {SIGCHI Bull.},
month = mar,
pages = {387–392},
numpages = {6}
}

