@inproceedings{10.1145/97243.97244,
author = {Dertouzos, Michael L.},
title = {Redefining Tomorrow's User Interface (Plenary Address)},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97244},
doi = {10.1145/97243.97244},
abstract = {When computers first appeared, input-output commands were minor afterthoughts to cohesive, often well crafted and occasionally pretentious programming languages. Today, these commands occupy over 70 percent of a programming system's instructions. Yet they, along with the user interface structures that they define, are far from cohesive, and, at least up until now, immune to standardization. We must therefore turn our thinking around and create a new breed of programming languages that are first and foremost input-output oriented and that integrate traditional processing commands into new user-oriented structures. And just as we know today that traditional commands fall into a handful of fixed categories - decision, repetition, naming, procedure definition and use — we need to search for and identify the corresponding natural classes of commands for user interfaces.But even if user interfaces were ideally programmed in divine new languages, they would still be ineffective, under our current mindset. For it is an unfortunate fact that despite a great deal of hype about look and feel, today's user interfaces have not appreciably reduced the difficulty of interaction between humans and machines. How can we explain, for example, the disturbing paradox that although computing accounts for some 10 percent of the U.S. G.N.P., it has not resulted in any measurable gains in conventionally measured productivity except in very few areas, like computer aided design. In fact, among office workers, net productivity seems to have decreased during the same period that computer purchases and uses have surged.Let us then ask what we should do in tomorrow's user interfaces to increase productivity and empower people, as the theme of this conference charges. In simpler terms, let us turn our attention on what we can do to help ordinary mortals who are trying to get a job done in spite of the well meaning efforts of hardware and software designers and managers. I, for one, believe that we can do a great deal and can improve immensely human-computer productivity.For example, we can ensure that people do not succumb to the additive fault of doing in the computer age, all that they did before plus a whole set of new actions — this is one of the most common ways of wasting human work. We should also avoid the learning fault by trying to reduce radically the amount of new knowledge that must be learned and retained by information workers, even if the resultant power and flexibility loom seductively before us. And we should design our systems and procedures so that they do not encourage the perfection fault, i.e. working on our systems well beyond the point of diminishing returns, in the interest of perfection.Much more can and should be done, for example by making user interfaces smarter so that they can anticipate, even small portions of our intent, instead of brutally forcing us through a litany of repetitive and dumb rituals. And we should ensure that our machines enable and enhance rather than fight human-to-human interaction and coordination, which is such an important part of our everyday productive activity.These issues and observations raise serious questions of balance among extremes that are today either addressed indirectly or downright ignored. For example, in tomorrow's interface, will users crave for aesthetics or intelligence? Flexibility and power, or simplicity? Integration or isolation of disparate user systems? A brave new world of flat screens, 3-d CRT goggles and speech and gesture detectors, — or more effective use of blander systems? And what are we going to do to plan, measure and ensure that the vocabulary of user intent is well matched by the vocabulary of interface actions?It is these kinds of questions that we need to address from the common-sense perspective of making computers effective and useful to ordinary people. No one is potentially better suited for doing this than the professional whose responsibility is the interface between people and machines. But to do this, we need to redefine the profession, from its current narrow confines of dealing with windows, mice and ergonomic factors to a far broader discipline that encompasses and seeks to improve everything that humans and computers do together, including purpose — in other words the total user interface of and for tomorrow.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {1},
numpages = {1},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97245,
author = {Starker, India and Bolt, Richard A.},
title = {A Gaze-Responsive Self-Disclosing Display},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97245},
doi = {10.1145/97243.97245},
abstract = {An information display system is described which uses eye-tracking to monitor user looking about its graphics screen. The system analyzes the user's patterns of eye movements and fixations in real-time to make inferences about what item or collection of items shown holds most relative interest for the user. Material thus identified is zoomed-in for a closer look, and described in more detail via synthesized speech.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {3–10},
numpages = {8},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97246,
author = {Jacob, Robert J. K.},
title = {What You Look at is What You Get: Eye Movement-Based Interaction Techniques},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97246},
doi = {10.1145/97243.97246},
abstract = {In seeking hitherto-unused methods by which users and computers can communicate, we investigate the usefulness of eye movements as a fast and convenient auxiliary user-to-computer communication mode. The barrier to exploiting this medium has not been eye-tracking technology but the study of interaction techniques that incorporate eye movements into the user-computer dialogue in a natural and unobtrusive way. This paper discusses some of the human factors and technical considerations that arise in trying to use eye movements as an input medium, describes our approach and the first eye movement-based interaction techniques that we have devised and implemented in our laboratory, and reports our experiences and observations on them.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {11–18},
numpages = {8},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97247,
author = {Dillon, R. F. and Edey, Jeff D. and Tombaugh, Jo W.},
title = {Measuring the True Cost of Command Selection: Techniques and Results},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97247},
doi = {10.1145/97243.97247},
abstract = {A technique that measures the impact of command selection on task time and errors is described. Users were timed while performing a drawing task, then while performing the same task with interpolated command selections. The difference between these times, consisting of both the time to select the command and to resume drawing, is the time cost of command selection. Several interface configurations were evaluated with this method including selected combinations of single mouse, two mice, voice and touch. Touch and voice input resulted in faster command selection times (approximately 1 sec) than any of the mouse conditions (approximately 3 sec).},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {19–26},
numpages = {8},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97248,
author = {Zanden, Brad Vander and Myers, Brad A.},
title = {Automatic, Look-and-Feel Independent Dialog Creation for Graphical User Interfaces},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97248},
doi = {10.1145/97243.97248},
abstract = {Jade is a new interactive tool that automatically creates graphical input dialogs such as dialog boxes and menus. Application programmers write a textual specification of a dialog's contents. This specification contains absolutely no graphical information and thus is look-and-feel independent. The graphic artist uses a direct manipulation graphical editor to define the rules, graphical objects, interaction techniques, and decorations that will govern the dialog's look-and-feel, and stores the results in a look and feel database. Jade combines the application programmer's specification with the look-and-feel database to automatically generate a graphical dialog. If necessary, the graphic artist can then edit the resulting dialog using a graphical editor and these edits will be remembered by Jade, even if the original textual specification is modified. By eliminating all graphical references from the dialog's content specification, Jade requires only the absolutely minimum specification from the application programmer. This also allows a dialog box or menu's look and feel to be rapidly and effortlessly changed by simply switching look and feel databases. Finally, Jade permits complex inter-field relationships to be specified in a simple manner.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {27–34},
numpages = {8},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97249,
author = {Took, Roger},
title = {Surface Interaction: A Paradigm and Model for Separating Application and Interface},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97249},
doi = {10.1145/97243.97249},
abstract = {From the point of view of the application designer, user interface services work by factoring some domain common to a range of applications, and implementing this separately. Existing services, such as window managers, UIMSs, or toolkits, either lack generality, or are limited in their separability. A new interface paradigm, here called surface interaction, separates application and interface by factoring presentation and its manipulation, rather than dialogue or functionality. The surface is thus a medium which can be controlled equally by the user or by the application. This paper outlines Presenter, an implementation of a model for surface interaction.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {35–42},
numpages = {8},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97250,
author = {B\"{o}hringer, Karl-Friedrich and Paulisch, Frances Newbery},
title = {Using Constraints to Achieve Stability in Automatic Graph Layout Algorithms},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97250},
doi = {10.1145/97243.97250},
abstract = {Automatic layout algorithms are commonly used when displaying graphs on the screen because they provide a “nice” drawing of the graph without user intervention. There are, however, a couple of disadvantages to automatic layout. Without user intervention, an automatic layout algorithm is only capable of producing an aesthetically pleasing drawing of the graph. User- or application-specified layout constraints (often concerning the semantics of a graph) are difficult or impossible to specify. A second problem is that automatic layout algorithms seldom make use of information in the current layout when calculating the new layout. This can also be frustrating to the user because whenever a new layout is done, the user's orientation in the graph is lost.This paper suggests using layout constraints to solve both of these problems. We show how user-specified layout constraints may be easily added to many automatic graph layout algorithms. Additionally, the constraints specified by the current layout are used when calculating the new layout to achieve a more stable layout. This approach allows a continuum between manual and automatic layout by allowing the user to specify how stable the graph's layout should be.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {43–51},
numpages = {9},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97251,
author = {Brunner, Hans},
title = {A Snapshot of Natural Language Interfaces (Panel)},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97251},
doi = {10.1145/97243.97251},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {53–55},
numpages = {3},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97252,
author = {Olsen, Dan R.},
title = {Propositional Production Systems for Dialog Description},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97252},
doi = {10.1145/97243.97252},
abstract = {The Propositional Production System (PPS) for describing interactive dialogs is defined. It is shown to be a superset of state machines, window event translation tables and event response systems. It is shown how dialogs can be expanded by means of inheritance and how semantic control information can be uniformly integrated into the dialog model. Optimizations are defined which can tune the executable machine for either minimal space or minimal execution time.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {57–64},
numpages = {8},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97253,
author = {Hudson, Scott E.},
title = {Adaptive Semantic Snaping—a Technique for Semantic Feedback at the Lexical Level},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97253},
doi = {10.1145/97243.97253},
abstract = {This paper describes the implementation of semantic snapping — an interaction technique that provides semantic feedback at the lexical level while dragging a graphical object on the screen. Like conventional snapping, or gravity fields, semantic snapping includes a geometric component where objects in close proximity are drawn together or “snap” into position. However, semantic snapping goes further by allowing non-geometric (semantic) properties of objects to place additional constraints on snapping. Semantic snapping also provides more complex lexical feedback which reflects potential semantic consequences of a snap. This paper motivates the use of semantic snapping and describes how this technique has been implemented in a window-based toolkit. This implementation works in an adaptive manner to provide the best interactive response in situations where semantic tests are very time consuming and strain the limits of acceptable performance.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {65–70},
numpages = {6},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97254,
author = {Tuck, Robin and Olsen, Dan R.},
title = {Help by Guided Tasks: Utilizing UIMS Knowledge},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97254},
doi = {10.1145/97243.97254},
abstract = {A help delivery mechanism integrated with a semantic UIMS is presented. The guided task paradigm is implemented where a user participates in a guided step-by- step demonstration. Help authors create task scripts composed of statements drawn from the semantic definition of the user interface. The help delivery system automatically translates such statements into user instructions which guide the user through the actions necessary to accomplish a task. Any application developed using this UIMS automatically gets this help authoring and presentation facility with no added effort.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {71–78},
numpages = {8},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97255,
author = {Kramer, Arthur F. and Wickens, Christopher D.},
title = {Human-Computer Interaction Research at the University of Illinois (Lab Review)},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97255},
doi = {10.1145/97243.97255},
abstract = {The Engineering Psychology program at the University of Illinois is interdisciplinary in nature and involves the participation of faculty members, undergraduate, graduate and post-doctoral students from the Department of Psychology, Department of Industrial Engineering, the Institute of Aviation, and the Beckman Institute. While the interests of the faculty members and the students run the gamut from nuts and bolts ergonomics to the design of intelligent systems there are two topics, the design of displays and the acquisition of perceptual-motor and cognitive skills, which serve as a unifying focus of research in Human-Computer Interaction.The examination of issues in display design and skill acquisition ranges from basic research on visual psychophysics and automatization to applied research and design projects on aviation displays and computer-based tutorials. Three laboratories within the Engineering Psychology program contribute to these research efforts: the Visual Information Processing laboratory, the Human-Computer Interaction laboratory, and the Aviation Research laboratory. In the description that follows we will indicate the mission of each of these laboratories and the manner in which they contribute to the interdisciplinary research programs on displays and skill acquisition.The core faculty members conducting Human-Computer Interaction research within the interdisciplinary Engineering Psychology program include:
John Andersen (Psychology)John Flach (Engineering)Arthur Kramer (Psychology)Gavan Lintern (Aviation)George McConkie (Psychology)Neville Moray (Engineering)Penelope Sanderson (Engineering)Alan Stokes (Aviation)Brian Ross (Psychology)Christopher Wickens (Aviation)},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {79–80},
numpages = {2},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97256,
author = {Endo, Takaya and Ishii, H.},
title = {NTT Human Interface Laboratories (Lab Review)},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97256},
doi = {10.1145/97243.97256},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {81–82},
numpages = {2},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97257,
author = {Fetz, Bruce H. and Day, Mary Carol},
title = {User Interface and Quality Planning Department (Lab Review)},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97257},
doi = {10.1145/97243.97257},
abstract = {The primary mission of the User Interface and Quality Planning Department is to design user interfaces for AT&amp;T network-based products and services. Working with other members of the Research and Development community, we strive to develop high quality user interfaces. We bring special expertise in the design of graphical user interfaces for customer network management, in the design of interfaces for voice-based network services, and in the use of state-of-the-art technology for documentation and training. Our work covers products and services for users both outside of AT&amp;T and inside AT&amp;T (e.g., attendants and technicians). The User Interface and Quality Planning Department also plays a leadership role in maintaining a company-wide community of behavioral scientists.The department consists of four user interface groups and one quality planning group. With quality planning and user interface design in the same department, we can effectively highlight the importance of the user interface to the user's perception of quality. The user interface groups are directly funded by AT&amp;T business units for user interface design work on specific products and services.Bruce Fetz is the Department Head; there are four user interface supervisors and about 23 Members of Technical Staff (MTS). The supervisors and MTS have doctorates in some area of experimental psychology; many also have a strong background in computer science. In addition, there are several laboratory support people, and we bring in software developers as they are needed on specific projects. Our user interface laboratory has development, testing, and presentation rooms, with flexible configuration and communication capabilities. Our equipment includes a high-capacity network of Sun workstations, and state-of-the-art audio/video production and editing equipment.Our philosophy regarding human factors work in service and product development has two major themes. First, human factors specialists should work as full team members with the product planners, systems engineers and developers responsible for a service or product. Second, human factors specialists should be involved as team members throughout the entire product realization process — from initial concept, through design and development, to customer evaluation after the product or service has been introduced.Rapid prototyping (of both voice-based user interfaces and graphical user interfaces) is central to our design process. Prototypes allow us to try out design concepts, to obtain feedback from users at every stage of the design process, to communicate our ideas more effectively, and to conduct laboratory evaluations. At the end of the design process, prototypes often serve as the “user interface requirements” for a product.In addition to product-specific efforts, we also engage in exploratory design and development using new user interface technologies. Also, department members contribute to the creation and evaluation of user interface standards that support the consistency of user interfaces across different products and services.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {83–84},
numpages = {2},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97258,
author = {Harrison, Michael and Monk, Andrew},
title = {Human Computer Interaction Group, University of York, U.K. (Lab Review)},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97258},
doi = {10.1145/97243.97258},
abstract = {Staff in the Departments of Computer Science and Psychology at the University of York have been cooperating in interdisciplinary research since 1983. The mainstream of York's approach is to apply theory developed in these parent disciplines to HCI design. Our goal is to integrate formal and empirical methods. By formal methods we mean mathematical models that are capable of capturing properties of a user interface. By empirical methods we mean the observation and measurement of user behaviour. Integration of these two approaches is achieved by an iterative design process in which formal models are successively refined by testing their predictions against the results of user trials.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {85–86},
numpages = {2},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97259,
author = {Ensor, Bob},
title = {How Can We Make Groupware Practical? (Panel)},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97259},
doi = {10.1145/97243.97259},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {87–89},
numpages = {3},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97260,
author = {Young, Richard M. and Whittington, Joyce},
title = {Using a Knowledge Analysis to Predict Conceptual Errors in Text-Editor Usage},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97260},
doi = {10.1145/97243.97260},
abstract = {The knowledge analysis of a device and a task, when written in an external Instruction Language and translated into rules for a programmable cognitive architecture, enables a designer to predict conceptual errors in device usage. This kind of prediction lies outside the scope of GOMS-based models. The cognitive architecture, which is referred to as a “Programmable User Model” (PUM), incorporates a limited problem-solving capability based upon means-ends analysis and multiple problem spaces. The example presented, concerning a simple text editor, illustrates the application of a PUM and demonstrates that a correct description of local knowledge does not necessarily lead to correct behaviour. This can serve to alert the designer to difficulties with the usability of a proposed interface.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {91–98},
numpages = {8},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97261,
author = {Gong, Richard and Elkerton, Jay},
title = {Designing Minimal Documentation Using a GOMS Model: A Usability Evaluation of an Engineering Approach},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97261},
doi = {10.1145/97243.97261},
abstract = {The Minimal Manual proposed by Carroll, Smith-Kerker, Ford, and Mazur [6] has been demonstrated to improve the performance of novices learning a word processing system. However, little research exists to suggest a practical methodology for implementing the important features of a minimal manual. Using the GOMS model, we incrementally modified a manual to include certain minimal manual features: reduced verbiage, focus on real tasks, and error recovery support. An evaluation of the manuals with novice users demonstrated significant improvements in learning performance when the manual was modified to be task-oriented with explicit procedural steps for accomplishing real tasks.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {99–107},
numpages = {9},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97262,
author = {John, Bonnie E.},
title = {Extensions of GOMS Analyses to Expert Performance Requiring Perception of Dynamic Visual and Auditory Information},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97262},
doi = {10.1145/97243.97262},
abstract = {GOMS models of telephone toll and assistance operators (TAOS) are being constructed in an effort to provide theoretical predictions of expert performance on several dedicated workstations. This applied effort has pushed the development of GOMS modeling techniques into the area of speech input and output, and into a task where information is not always available when it is required by the TAO. This paper describes the task, heuristics for constructing the GOMS models, and parameters for making quantitative predictions of performance time.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {107–116},
numpages = {10},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97263,
author = {Card, Stuart K. and Mackinlay, Jock D. and Robertson, George G.},
title = {The Design Space of Input Devices},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97263},
doi = {10.1145/97243.97263},
abstract = {A bewildering variety of devices for communication from humans to computers now exists on the market. In order to make sense of this variety, and to aid in the design of new input devices, we propose a framework for describing and analyzing input devices. Following Mackinlay's semantic analysis of the design space for graphical presentations, our goal is to provide tools for the generation and test of input device designs. The descriptive tools we have created allow us to describe the semantics of a device and measure its expressiveness. Using these tools, we have built a taxonomy of input devices that goes beyond earlier taxonomies of Buxton &amp; Baecker and Foley, Wallace, &amp; Chan. In this paper, we build on these descriptive tools, and proceed to the use of human performance theories and data for evaluation of the effectiveness of points in this design space. We focus on two figures of merit, footprint and bandwidth, to illustrate this evaluation. The result is the systematic integration of methods for both generating and testing the design space of input devices.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {117–124},
numpages = {8},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97264,
author = {Smith, Stuart and Bergeron, R. Daniel and Grinstein, Georges G.},
title = {Stereophonic and Surface Sound Generation for Exploratory Data Analysis},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97264},
doi = {10.1145/97243.97264},
abstract = {The analysis and interpretation of very high dimensional data require the development and use of data presentation techniques that harness human perceptual powers. The University of Lowell's Exploratory Visualization project (Exvis) aims at designing, implementing, and evaluating perceptually-based tools for data presentation using both visual and auditory domains. This paper describes several auditory data presentation techniques, including the generation of stereophonic sound with apparent depth and sound that appears to emanate from a two-dimensional area. Both approaches can produce sound with auditory texture.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {125–132},
numpages = {8},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97265,
author = {Laurel, Brenda and Oren, Tim and Don, Abbe},
title = {Issues in Multimedia Interface Design: Media Integration and Interface Agents},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97265},
doi = {10.1145/97243.97265},
abstract = {A central challenge in the design of multimedia databases is integrating information from different media sources while reducing the cognitive load imposed on users by the tasks of learning and operating the interface. In light of results from a prototype multimedia project developed at Apple, we believe that an agent-style interface addresses this challenge in several ways. This paper discusses techniques for achieving media integration and details the use of interface agents in facilitating 'navigation', enhancing content through point of view, and supporting users in a variety of instrumental and experiential tasks.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {133–139},
numpages = {7},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97266,
author = {Johnson, Jeff},
title = {Participatory Design of Computer Systems (Panel)},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97266},
doi = {10.1145/97243.97266},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {141–144},
numpages = {4},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97267,
author = {Cushman, William H. and Ojha, Purnendu S. and Daniels, Cathleen M.},
title = {Usable OCR: What Are the Minimum Performance Requirements?},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97267},
doi = {10.1145/97243.97267},
abstract = {Forty-two subjects used a microcomputer and word processing software to type and proofread a 450-word document and then to correct errors in a number of other documents (of the same length) that had been created by OCR simulation [i.e., the documents looked like those typically obtained when using an optical character recognition (OCR) device for text entry]. The “OCR documents” contained both recognition errors (substitution errors, insertion errors, and deletion errors) and unrecognized characters. The percentage of characters requiring correction was varied from document to document. Text entry by OCR was found to be faster than manual entry (i.e., typing) if the OCR device can correctly recognize at least 94% of the individual alphanumeric characters. However, 98% correct recognition and computer-assisted proofreading were required in order to consistently obtain finished documents that had no more residual errors than typed documents.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {145–152},
numpages = {8},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97268,
author = {Wilde, Nicholas and Lewis, Clayton},
title = {Spreadsheet-Based Interactive Graphics: From Prototype to Tool},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97268},
doi = {10.1145/97243.97268},
abstract = {The NoPumpG prototype [7,8] suggested that the spreadsheet model of computation could simplify the creation of some types of interactive graphical application when compared with other approaches. We report here experience in developing an enhanced follow-on system, NoPumpII, and describe three applications developed using it. We conclude that (1) the potential advantages of the spreadsheet model are realized in this application experience, (2) revisions to the prototype design have permitted an increase in the complexity and scale of applications, and (3) there remain limitations in the current design which, if redressed, would further enlarge the scope of application. More generally we conclude that alternative computational models are an important area of exploration for HCI research.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {153–160},
numpages = {8},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97269,
author = {Thomsen, C. Torben},
title = {Business Instrument Panel: A New Paradigm for Interfacing with Financial Data},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97269},
doi = {10.1145/97243.97269},
abstract = {The business instrument panel uses visualization to present, in a comprehensive and integrated manner, all the important elements found in traditional financial statements. By means of analog representation in a simple computer generated picture, the business instrument panel replaces the four traditional financial statements (balance sheet, income statement, cash flow statement, and retained earnings statement). The business instrument panel also embodies a new paradigm for understanding the business world and empowers the user with an unparalleled quick understanding of any firm.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {161–166},
numpages = {6},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97270,
author = {Schiphorst, T. and Calvert, T. and Lee, C. and Welman, C. and Gaudet, S.},
title = {Tools for Interaction with the Creative Process of Composition},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97270},
doi = {10.1145/97243.97270},
abstract = {This paper explores the nature of creative composition particularly as it applies to dance, and describes the development of interactive computer based tools to assist the composer. The hierarchical nature of the composition process calls for an interface which allows the composer the flexibility to move back and forth between alternate views and conceptual levels of abstraction.COMPOSE, an interactive system for the composition of dance has been implemented on Silicon Graphics and Apple workstations. The user visually composes in space and in time using menus of postures and sequences. Paths can be edited and an animation of the dance composition allows the final result to be evaluated.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {167–174},
numpages = {8},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97271,
author = {MacLean, Allan and Carter, Kathleen and L\"{o}vstrand, Lennart and Moran, Thomas},
title = {User-Tailorable Systems: Pressing the Issues with Buttons},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97271},
doi = {10.1145/97243.97271},
abstract = {It is impossible to design systems which are appropriate for all users and all situations. We believe that a useful technique is to have end users tailor their systems to match their personal work practices. This requires not only systems which can be tailored, but a culture within which users feel in control of the system and in which tailoring is the norm. In a two-pronged research project we have worked closely with a group of users to develop a system to support tailoring and to help the users evolve a “tailoring culture”. This has resulted in a flexible system based around the use of distributed on-screen Buttons to support a range of tailoring techniques.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {175–182},
numpages = {8},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97272,
author = {Fischer, Gerhard and Girgensohn, Andreas},
title = {End-User Modifiability in Design Environments},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97272},
doi = {10.1145/97243.97272},
abstract = {Convivial systems encourage users to be actively engaged in generating creative extensions to the artifacts given to them. Convivial systems have the potential to break down the counterproductive barrier between programming and using programs.Knowledge-based design environments are prototypes for convivial systems. These environments support human problem-domain communication, letting users work within their domains of expertise. One of the design rationales behind design environments is to ease the construction and modification of artifacts designed within the environment. But because design environments are intentionally not general purpose programming environments, situations will arise that require modifications to the design environment itself. The rationale and the techniques for these later modifications are discussed in this paper.Our conceptual framework for end-user modifiability is illustrated in the context of JANUS, an environment for architectural design. Evaluating our system building efforts against our objectives shows the subtleties of integrating end-user modifiability in these kinds of systems.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {183–192},
numpages = {10},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97273,
author = {Roth, Steven F. and Mattis, Joe},
title = {Data Characterization for Intelligent Graphics Presentation},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97273},
doi = {10.1145/97243.97273},
abstract = {An automatic presentation system is an intelligent interface component which receives information from a user or application program and designs a combination of graphics and text that effectively conveys it. It is a facility that assumes the presentation responsibilities for other programs. An important research question has been how information should be specified or described by an application program for it to be presented by an automatic presenter. This paper proposes a taxonomy of information characteristics which would need to be provided to either human or computer designers for them to create presentations reflecting the individual needs of a diverse group of users. The proposed taxonomy of characteristics defines the representational goals for intelligent interfaces which reason about graphical displays.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {193–200},
numpages = {8},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97274,
author = {Borg, Kjell},
title = {IShell: A Visual UNIX Shell},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97274},
doi = {10.1145/97243.97274},
abstract = {IShell is a visual user interface for interaction using gestures under the UNIX operating system. A visual script language for building commands — IScript — is an integral part of the IShell environment. The user can directly describe and execute pipelined command sequences using gestures. The user is constantly guided by visual cues.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {201–207},
numpages = {7},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97275,
author = {Jacobs, Steven M.},
title = {Real-Time Decision Making (Panel)},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97275},
doi = {10.1145/97243.97275},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {209–212},
numpages = {4},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97276,
author = {Jellinek, Herbert D. and Card, Stuart K.},
title = {Powermice and User Performance},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97276},
doi = {10.1145/97243.97276},
abstract = {Claims of increased pointing speed by users and manufacturers of variable-gain mice (“powermice”) have become rife. Yet, there have been no demonstrations of this claim, and theoretical considerations suggest it may not even be true. In this paper, the claim is tested.A search of the design space of powermice failed to find a design point that improved performance compared to a standard mouse. No setting for the gain for a constant-gain mouse was found that improved performance. No threshold setting for a variable gain mouse was found that improved performance. In fact, even gain and threshold combinations favored by powermouse enthusiasts failed to improve performance. It is suggested that the real source of enthusiasm for powermice is that users are willing to accept reduced pointing speed in return for a smaller desk footprint.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {213–220},
numpages = {8},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97277,
author = {Walker, Neff and Smelcer, John B.},
title = {A Comparison of Selection Time from Walking and Pull-down Menus},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97277},
doi = {10.1145/97243.97277},
abstract = {This paper reports on an experiment that investigated factors which effect selection time from walking menus and bar or pull-down menus. The primary focus was on the use of impenetrable borders and on expanding target areas on the two menus types. The results show that both factors can be used to facilitate menu selection, with the use of borders being most beneficial. In addition, the results suggest that even on large monitors, the time required to access items from a bar menu is less than that required for the best walking menu.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {221–226},
numpages = {6},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97278,
author = {Gillan, Douglas J. and Holden, Kritina and Adam, Susan and Rudisill, Marianne and Magee, Laura},
title = {How Does Fitts' Law Fit Pointing and Dragging?},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97278},
doi = {10.1145/97243.97278},
abstract = {Two experiments examined selecting text using a movement sequence of pointing and dragging. Experiment 1 showed that, in the Point-Drag sequence, the pointing time was related to the pointing distance but not to the width of the text to be selected; in contrast, pointing time was related to both the pointing distance and the width of the text in the Point-Click sequence. Experiment 2 demonstrated that both the pointing and dragging times for the Point-Drag sequence were sensitive to the height of the text that was selected. The discussion of the results centers around the application of Fitts' Law to pointing and dragging in a point-drag sequence, proposing that the target for pointing is the leftmost edge of the text to be selected, and the target for dragging is the rightmost edge of the text.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {227–234},
numpages = {8},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97279,
author = {Lewis, Clayton and Polson, Peter G. and Wharton, Cathleen and Rieman, John},
title = {Testing a Walkthrough Methodology for Theory-Based Design of Walk-up-and-Use Interfaces},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97279},
doi = {10.1145/97243.97279},
abstract = {The value of theoretical analyses in user interface design has been hotly debated. All sides agree that it is difficult to apply current theoretical models within the constraints of real-world development projects. We attack this problem in the context of bringing the theoretical ideas within a model of exploratory learning [19] to bear on the evaluation of alternative interfaces for walk-up-and-use systems. We derived a “cognitive walkthrough” procedure for systematically evaluating features of an interface in the context of the theory. Four people independently applied this procedure to four alternative interfaces for which we have empirical usability data. Consideration of the walkthrough sheds light on the consistency with which such a procedure can be applied as well as the accuracy of the results.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {235–242},
numpages = {8},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97280,
author = {Telles, Marcy},
title = {Updating an Older Interface},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97280},
doi = {10.1145/97243.97280},
abstract = {Much of the research in the field of human/computer interface is aimed at the interface designer who begins from scratch. A different set of needs confronts the designer who must update an existing interface without throwing away the good elements of the old design and the knowledge base of experienced users.In this paper, the factors that contribute to the need for interface changes are presented, along with the special challenges that make change more difficult than new design. Approaches are suggested for dealing with the problems of updating an interface to make it effective for both old and new users.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {243–248},
numpages = {6},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97281,
author = {Nielsen, Jakob and Molich, Rolf},
title = {Heuristic Evaluation of User Interfaces},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97281},
doi = {10.1145/97243.97281},
abstract = {Heuristic evaluation is an informal method of usability analysis where a number of evaluators are presented with an interface design and asked to comment on it. Four experiments showed that individual evaluators were mostly quite bad at doing such heuristic evaluations and that they only found between 20 and 51% of the usability problems in the interfaces they evaluated. On the other hand, we could aggregate the evaluations from several evaluators to a single evaluation and such aggregates do rather well, even when they consist of only three to five people.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {249–256},
numpages = {8},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97282,
author = {Spence, Robert},
title = {Practical Interfaces to Complex Worlds (Panel)},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97282},
doi = {10.1145/97243.97282},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {257–260},
numpages = {4},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97284,
author = {Grudin, Jonathan},
title = {The Computer Reaches out: The Historical Continuity of Interface Design},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97284},
doi = {10.1145/97243.97284},
abstract = {This paper examines the evolution of the focus of user interface research and development from the first production of commercial computer systems in the 1950s through the present. The term “user interface” was not needed in the beginning, when most users were engineers and programmers; it may again become inappropriate when more applications are written for groups than for individuals. But there is a continuity to the outward movement of the computer's interface to its external environment, from hardware to software to increasingly higher-level cognitive capabilities and finally to social processes. As the focus shifts, the approaches to design and the skills required of practitioners changes. In this paper five foci or levels of development are identified. Most development today is positioned in the third level and considerable research is directed at the fourth. Some attention is now being given to the fifth: repositioning the interface in the work group or organization itself. Work at the different levels is not entirely independent, so establishing a comprehensive framework may enable us to position existing research and development efforts and plan future work more effectively.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {261–268},
numpages = {8},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97285,
author = {Campbell, Robert L.},
title = {Developmental Scenario Analysis of Smalltalk Programming},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97285},
doi = {10.1145/97243.97285},
abstract = {In order to understand long-term learning and the acquisition of expertise, human-computer interaction needs to take a developmental turn. Adopting a developmental approach means using longitudinal research methods, building developmental sequence models of the acquisition of expertise, and analyzing tasks as scenarios specific to developmental levels. The psychology of programming seems particularly amenable to a developmental approach because of the length of time that it takes to become an expert. We propose a model of seven developmental levels for Smalltalk/V programming, and provide sample scenarios for each level. We conclude that developmentally ordered scenarios convey valuable design information that would be lost in the standard “average user” approach to scenarios.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {269–276},
numpages = {8},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97287,
author = {Gentner, Donald R. and Grudin, Jonathan},
title = {Why Good Engineers (Sometimes) Create Bad Interfaces},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97287},
doi = {10.1145/97243.97287},
abstract = {This paper presents a view of system design that shows how good engineering practice can lead to poor user interfaces. From the engineer's perspective, the ideal interface reflects the underlying mechanism and affords direct access to the control points of the mechanism. The designer of the user interface is often also the designer of the mechanism (or at least is very familiar with the mechanism), and thus has a strong bias toward basing the interface on the engineering model. The user, however, wants to complete a task, and an interface that is based on the task is often more appropriate than one based on the system mechanism. We discuss these issues, and also discuss where to position the user interface between the poles of the engineering model and the task model.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {277–282},
numpages = {6},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97289,
author = {Williges, Robert C.},
title = {Human-Computer Interface Laboratory—Virginia Polytechnic Institute and State University (Lab Review)},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97289},
doi = {10.1145/97243.97289},
abstract = {A description of the staff, facilities, and research focus of the Human-Computer Interface Laboratory at Virginia Polytechnic Institute and State University is provided. Representative research projects as well as the relationship between this laboratory and the human factors engineering graduate program are also described.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {283–284},
numpages = {2},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97291,
author = {Landauer, Thomas K. and Kraut, Robert E.},
title = {CHI in the Applied Research Divisions at Bellcore (Lab Review)},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97291},
doi = {10.1145/97243.97291},
abstract = {Bellcore has several active research programs relevant to human-computer interaction. This talk describes research conducted in the Cognitive Science and Interpersonal Communications Research Groups. We describe their research on information retrieval and on collaboration and pay particular attention to the styles of research employed in these groups and to the way in which behavioral investigations have guided technical invention.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {285–286},
numpages = {2},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97293,
author = {Zachary, Wayne},
title = {CHI Systems, Incorporated (Lab Review)},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97293},
doi = {10.1145/97243.97293},
abstract = {CHI Systems Incorporated was formed in 1985 to provide high quality research and development services and products related to Computer-Human Interaction (CHI). We focus on specialized or expert domains — environments where the typical user is highly expert in the application task being performed. Within these domains, we emphasize:
cognitive analysis of the task and the expertise it requires,allocation of functions between computer and human, anddesign of interfaces and intelligent support tools for domain-expert system users.We design and apply advanced methodologies and design/analysis tools for each of these steps. The primary domains in which we work are aerospace, command and control, and biotechnology.CHI Systems functions as both an applied and basic research laboratory. In applied research, we develop innovative solutions to real-world problems in CHI posed by our clients. In basic research, we investigate basic problems involved in the design and analysis of interfaces for domain-expert end-users. We also emphasize formal and/or theory-based approaches. We have developed tools for:
formal specification of object-oriented interfaces,simulation-based function allocation and task analysis of new interface systems,cognitive analysis and functional design of decision support systems, andcognitive task analysis of CHI in real-time multitasking environments},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {287–288},
numpages = {2},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97295,
author = {F\"{a}hnrich, K. and Ziegler, J\"{u}rgen},
title = {Interactive Systems Research Group—Fraunhofer-Gesellschaft Institute for Industrial Engineering (Lab Review)},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97295},
doi = {10.1145/97243.97295},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {289–290},
numpages = {2},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97298,
author = {Nielsen, Jakob},
title = {Designing for International Use (Panel)},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97298},
doi = {10.1145/97243.97298},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {291–294},
numpages = {4},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97299,
author = {Elwart-Keys, Mary and Halonen, David and Horton, Marjorie and Kass, Robert and Scott, Paul},
title = {User Interface Requirements for Face to Face Groupware},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97299},
doi = {10.1145/97243.97299},
abstract = {This paper discusses the user interface of the Capture Lab, a computer-supported meeting room that has been in operation since late 1987. One goal of the Capture Lab design is to support meetings of business people (who are often novice computer users) without requiring an additional person to serve as a computer technician or facilitator. This paper discusses the user interface features a system should have to support face to face meetings. It describes the Capture Lab and how it is used, and presents our approach to satisfying those interface requirements. Finally, we discuss a few of our observations about the Capture Lab's user interface, and how a computer-supported meeting environment affects meetings.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {295–301},
numpages = {7},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97301,
author = {Lauwers, J. Chris and Lantz, Keith A.},
title = {Collaboration Awareness in Support of Collaboration Transparency: Requirements for the next Generation of Shared Window Systems},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97301},
doi = {10.1145/97243.97301},
abstract = {Shared window systems enable existing applications to be shared in the context of a real-time teleconference. The development and successful use of several such systems, albeit within limited user communities, testifies to the merits of the basic idea. However, experience to date has suggested a number of areas that have not been adequately addressed, namely: spontaneous interactions, shared workspace management, floor control, and annotation and telepointing. This paper focuses on the ramifications, for the software designer, of various user requirements in these areas. While the recommendations that result are motivated by the desire to enable continued use of collaboration-transparent applications, addressing them involves the development of systems software that is distinctly collaboration-aware.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {303–311},
numpages = {9},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97302,
author = {Tang, John C. and Minneman, Scott L.},
title = {VideoDraw: A Video Interface for Collaborative Drawing},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97302},
doi = {10.1145/97243.97302},
abstract = {This paper describes VideoDraw, a shared drawing tool, and the process by which it is being designed and developed. VideoDraw is a prototype, videobased, tool that provides a shared “virtual sketchbook” among two or more collaborators. It not only allows the collaborators to see each others' drawings, but also conveys the accompanying hand gestures and the process of creating and using those drawings. Its design stems from studying how people collaborate using shared drawing spaces. Design implications raised by those studies were embodied in a prototype, which was in turn observed in use situations. Continued research studying the use of VideoDraw (in comparison with other collaborative media) will lead to a better understanding of collaborative drawing activity and inform the continued technical development of VideoDraw.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {313–320},
numpages = {8},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97303,
author = {Carroll, John M.},
title = {Infinite Detail and Emulation in an Ontologically Minimized HCI},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97303},
doi = {10.1145/97243.97303},
abstract = {By default, we attempt to define practical areas of technological endeavor as “applications.” For example, the applied psychology of human-computer interaction has characteristically been defined in terms of the methods and concepts basic psychology can provide. This has not worked well. An alternative approach is to begin from a characterization of current practice, to take seriously the requirements of the domain of endeavor, and to define areas of “science” and “application” as possible and appropriate in that context.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {321–328},
numpages = {8},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97304,
author = {Wixon, Dennis and Holtzblatt, Karen and Knox, Stephen},
title = {Contextual Design: An Emergent View of System Design},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97304},
doi = {10.1145/97243.97304},
abstract = {We offer an introduction to contextual design as an emergent method for building effective systems. Contextual design addresses a number of the inadequacies in previous methods by emphasizing: interview methods conducted in the context of the user's work, codesigning with the user, building an understanding of work in context, and summarizing conclusions through out the research. We contrast this design method to usability engineering and artifact examination.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {329–336},
numpages = {8},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97305,
author = {Fischer, Gerhard and Lemke, Andreas C. and Mastaglio, Thomas and Morch, Anders I.},
title = {Using Critics to Empower Users},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97305},
doi = {10.1145/97243.97305},
abstract = {We describe the critiquing approach to building knowledge-based interactive systems. Critiquing supports computer users in their problem solving and learning activities. The challenges for the next generation of knowledge-based systems provide a context for the development of this paradigm. We discuss critics from the perspective of overcoming the problems of high-functionality computer systems, of providing a new class of systems to support learning, of extending applications-oriented construction kits to design environments, and of providing an alternative to traditional autonomous expert systems. One of the critiquing systems we have built — JANUS, a critic for architectural design — is used as an example of the key aspects of the critiquing process. We also survey additional critiquing systems developed in our and other research groups.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {337–347},
numpages = {11},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97306,
author = {Butler, Keith},
title = {Collaboration for Technology Transfer or “How Do so Many Promising Ideas Get Lost?” (Panel)},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97306},
doi = {10.1145/97243.97306},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {349–351},
numpages = {3},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97307,
author = {Blomberg, Jeanette L. and Henderson, Austin},
title = {Reflections on Participatory Design: Lessons from the Trillium Experience},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97307},
doi = {10.1145/97243.97307},
abstract = {In recent years system engineers, product designers, and human interface designers have become increasingly interested in developing ways of involving users in the design and evolution of computer-based systems. Some have turned for guidance and inspiration to an approach to systems design pioneered in Scandinavia and often referred to as Participatory Design. In this paper we examine the development of a computer-based design tool, Trillium, which on the surface looked like an example of Participatory Design in that users were directly involved in the development of the technology. Our analysis leads us to conclude, however, that Trillium's development departed in critical ways from our current model of Participatory Design and to suggest that the manner in which users are involved in the development effort plays an important role in the success of the endeavor.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {353–360},
numpages = {8},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97308,
author = {George, Joey F. and Valacich, Joseph S. and Nunamaker, J. F.},
title = {The Organizational Implementation of an Electronic Meeting System: An Analysis of the Innovation Process},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97308},
doi = {10.1145/97243.97308},
abstract = {Electronic Meeting Systems (EMS) are slowly moving out of university environments into work organizations. They constitute an innovative method of supporting group meetings. This paper reports on the innovation process in one organization that has recently adopted and implemented an EMS. The paper traces the innovation process through four stages: conception of an idea: proposal; decision to adopt; and implementation. Important factors from the innovation literature are considered as explanators of the innovation process involving EMS in this particular organization.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {361–368},
numpages = {8},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97309,
author = {LeMaster, Ron and Merz, Ulla},
title = {Design of a Loading Plan Format for an Expert Cargo Loading System},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97309},
doi = {10.1145/97243.97309},
abstract = {Many computer systems assist users in the performance of tasks by providing metaphors for the tasks themselves. The success of such systems hinge on how accurately and effectively the user interface represents those tasks. In this paper we describe such a representation for the task of loading boxed appliances into truck trailers. This representation was used to provide the format for the loading plans generated by an expert system constructed to plan the loading of such products. These plans tell the warehouse personnel that actually load the trucks just where each product is to be placed in the truck, how it is to be oriented, as well as where extra padding and filler material should be placed.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {369–378},
numpages = {10},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97310,
author = {Barnard, Phil},
title = {Research for Human-Computer Interaction at the MRC Applied Psychology Unit (Lab Review)},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97310},
doi = {10.1145/97243.97310},
abstract = {Since its formation in World War II, and under a series of distinguished directors (Craik, Bartlett, Mackworth, Broadbent, and currently, Baddeley), the APU has developed a broad base of research capability. Areas now covered are audition, vision, attention, memory, language, reasoning, motor behavior, psychophysiology, clinical and neuropsychology. Our work on human interaction with real world artifacts focuses on the preparation and comprehension of information in documents, car driving, and, of course, the use of computers. Across these areas, the APU has often played a pioneering role, not only in individual research contributions, but in helping to establish the paradigms, theory, and practice of a given field of research.The Unit is funded by the Department of Education and Science through the Medical Research Council. Our core budget is supplemented by external grants and contracts, providing in total for a research staff of around 45 and a support staff of 30. Each year we also have 10-12 graduate students and 6-15 visiting scientists.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {379–380},
numpages = {2},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97311,
author = {Poltrock, Steven E. and Butler, Keith},
title = {Boeing Advanced Technology Center (Lab Review)},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97311},
doi = {10.1145/97243.97311},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {381–382},
numpages = {2},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97312,
author = {Marshall, Catherine R.},
title = {The U.S. West Intelligent Services Research Laboratory (Lab Review)},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97312},
doi = {10.1145/97243.97312},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {383–384},
numpages = {2},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97313,
author = {Douglas, Sarah A. and Meyer, Gary W.},
title = {Interactive Systems Group—University of Oregon, Department of Computer and Information Science (Lab Review)},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97313},
doi = {10.1145/97243.97313},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {385–386},
numpages = {2},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97314,
author = {Perlman, Gary},
title = {Evaluating Hypermedia Systems (Panel)},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97314},
doi = {10.1145/97243.97314},
abstract = {Hypermedia systems provide online access to complex networks of information with the goal of making it easier to find and use information. To validate the utility of their systems, several researchers and system developers have attempted to collect evaluation data on the usability and effectiveness of their systems and the features in their systems. Because of the potential complexity of hypermedia systems and the information structures they may represent, a variety of evaluation measures and methods have been used. These trade off the need for timely feedback in the development of new technology, the difficulty of controlling one or two variables in systems with dozens or hundreds of components, and the goal of gaining an understanding of hypermedia systems.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {387–390},
numpages = {4},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97315,
author = {Gillan, Douglas J. and Breedin, Sarah D.},
title = {Designers' Models of the Human-Computer Interface},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97315},
doi = {10.1145/97243.97315},
abstract = {An experiment investigated the organization of declarative knowledge about the human computer interface (HCI). Two groups of experts in user interface design (human factors experts and software experts), and a control group sorted HCI concepts into categories. The data were transformed into measures of dissimilarity and analyzed using (1) hierarchical cluster analysis and (2) Pathfinder, a program that generates network representations of the data. Both expert groups had greater numbers of clusters, more elaborate clusters, and better organized networks than did the controls. The two expert groups differed with respect to the clustering of concepts related to display coding and software. The Pathfinder networks for the two expert groups differed in organization, with human factors experts' networks consisting of highly interrelated subnetworks and software experts networks consisting of central nodes and fewer, less interconnected subnetworks. The networks also differed in the number of concepts linked with such concepts as graphics, natural language, function keys, and speech recognition. The discussion focuses on (1) specific differences in cognitive models between HCI experts and novices and between different types of experts, and (2) the role of cognitive models in HCI design and in communications within a multidisciplinary design team.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {391–398},
numpages = {8},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97316,
author = {Howes, Andrew and Payne, Stephen J.},
title = {Semantic Analysis during Exploratory Learning},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97316},
doi = {10.1145/97243.97316},
abstract = {This paper addresses the problem of how a novice computer user, engaged in exploratory learning, accounts for the behaviour of the device. Exploratory learning is the norm for many users who encounter computers in the work place. Exploratory learners must acquire methods from a suboptimal stream of task directed behaviour and its observable effects.A candidate model of analysis, EXPL [9] is taken as the baseline for the development of a new model, called Explor, which employs semantic knowledge of the lexical items used in the interface to relate user actions to system responses. The strengths and weaknesses of Explor are illustrated and discussed.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {399–406},
numpages = {8},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97317,
author = {Nathan, Mitchell J.},
title = {Empowering the Student: Prospects for an Unintelligent Tutoring System},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97317},
doi = {10.1145/97243.97317},
abstract = {Computer based instructional systems either direct students so modelling their actions is tractable, or provide them with total autonomy, but give little support to learning and problem solving processes. Instructional principles for empowering the student are emerging whereby more of the responsibility of diagnosis and goal-setting is placed on the student. Critical to this view is providing an environment which makes the ramifications of students' actions clear so students can meaningfully assess their own performance. In the domain of word algebra, the meaning of formal expressions can be reflected in computer animation which depicts the corresponding situation. An unintelligent tutor — knowing nothing of the problem being solved and possessing no student model — helps students to understand problems and debug formal expressions.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {407–414},
numpages = {8},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97318,
author = {B\"{o}cker, Heinz-Dieter and Herczeg, J.},
title = {Track—a Trace Construction Kit},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97318},
doi = {10.1145/97243.97318},
abstract = {TRACK is a kit to interactively construct environments that trace the execution of methods and the flow of messages between SMALLTALK-80 objects. It enables the user to set up traces by means of direct manipulation. This is done by placing obstacles between icons representing specific classes and instances much in the way a jumping course is set up. TRACK may be used to generate multiple visualizations of programs which may be concurrently run. It is a browsing and debugging tool as well as an algorithm animation tool. TRACK is tightly integrated with the standard tools of the SMALL- TALK-80 programming environment.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {415–422},
numpages = {8},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97319,
author = {Rosson, Mary Beth and Carrol, John M. and Bellamy, Rachel K. E.},
title = {Smalltalk Scaffolding: A Case Study of Minimalist Instruction},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97319},
doi = {10.1145/97243.97319},
abstract = {A curriculum was developed to introduce users to the Smalltalk object-oriented programming language. Applying the Minimalist model of instruction [3], we developed a set of example-based learning scenarios aimed at supporting real work, getting started fast, reasoning and improvising, coordinating system and text, supporting error recognition and recovery, and exploiting prior knowledge. We describe our initial curriculum design as well as the significant changes that have taken place as we have observed it in use.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {423–430},
numpages = {8},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97320,
author = {Carroll, John M. and Singer, Janice A. and Bellamy, Rachel K. E. and Alpert, Sherman R.},
title = {A View Matcher for Learning Smalltalk},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97320},
doi = {10.1145/97243.97320},
abstract = {The View Matcher is a structured browser for Smalltalk/V. It presents a set of integrated and dynamic views of a running application, intended to coordinate and rationalize a programmer's early understanding of Smalltalk and its environment. We describe the system through two user scenarios involving exploration of the model-view-controller paradigm.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {431–437},
numpages = {7},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97321,
author = {Mountford, S. Joy},
title = {Designers: Meet Your Users (Panel)},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97321},
doi = {10.1145/97243.97321},
abstract = {Too few interface designers actually use an iterative design process. Too few interface designers actually involve their anticipated users throughout the design of an interface. In order to build better interfaces, we need to build faster and more numerous prototypical interface examples. These prototypes, from early sketches to working systems, should be shown frequently and often to users for their feedback. This panel is a vignette that illustrates an interface design cycle. Our panelists will be given a real world interface design problem, and the audience will follow them through their usual process of design. Users will be involved in the process, to help in interface specification and to provide prototype feedback. We expect that although the panelists involved users throughout their design process, users will still have a good deal more to contribute to the interface design before a product is finalized. On stage we will witness real users, with varied backgrounds, providing comments and feedback on the working prototypes. The issue here is to remind designers that there is never enough user involvement in an interface design. We need to iterate our interface designs, based on users' feedback, more often and continuously if our interfaces are to be effective,},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {439–442},
numpages = {4},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97322,
author = {Winograd, Terry},
title = {What Can We Teach about Human-Computer Interaction? (Plenary Address)},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97322},
doi = {10.1145/97243.97322},
abstract = {This paper is the closing address for CHI '90. It addresses the problem of educating computer professionals in the area of human-computer interaction, arguing that standard approaches within computer science need to be augmented and that new models of education can aid us in producing students with broad competence in the design of computer systems for human use.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {443–448},
numpages = {6},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

@inproceedings{10.1145/97243.97323,
author = {Salomon, Gitta B.},
title = {Designing Casual-User Hypertext: The CHI'89 InfoBooth},
year = {1990},
isbn = {0201509326},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97243.97323},
doi = {10.1145/97243.97323},
abstract = {An interactive electronic information kiosk was created for the CHI '89 conference. Based on Macintosh® technology, the “InfoBooth” included a custom HyperCard® interface built by a team at Apple Computer.The design was initiated by examining the desires of potential users. Design changes, influenced by the results of informal user testing, were numerous. During the conference, user actions were recorded using an embedded “trace” program to allow for later usage assessment.This paper offers a case study for designers of similar systems. Aspects of the pre-conference design evolution are described. The impact of user testing is discussed and findings from the analysis of the trace data are presented.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {451–458},
numpages = {8},
location = {Seattle, Washington, USA},
series = {CHI '90}
}

