@inproceedings{10.1145/3250327,
author = {Zloof, Moshe},
title = {Session Details: Database Interfaces},
year = {1977},
isbn = {9781450373432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3250327},
doi = {10.1145/3250327},
booktitle = {Proceedings of the 1977 ACM SIGMOD International Conference on Management of Data},
numpages = {1},
location = {Toronto, Ontario, Canada},
series = {SIGMOD '77}
}

@inproceedings{10.1145/509404.509406,
author = {Furtado, Antonio L. and Kerschberg, Larry},
title = {An Algebra of Quotient Relations},
year = {1977},
isbn = {9781450373432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/509404.509406},
doi = {10.1145/509404.509406},
abstract = {An algebra which operates on partitioned relations is developed. Relation partitioning is achieved by defining equivalence relations on n-ary relations. It is shown that the algebra is as powerful as the original relational algebra, having the advantage of a set-processing capability. This feature provides both greater flexibility in query specification and efficient query processing.},
booktitle = {Proceedings of the 1977 ACM SIGMOD International Conference on Management of Data},
pages = {1–8},
numpages = {8},
keywords = {query language, relational algebra, quotient algebra, intermediate level language, relational model, high level query language, quotient relations},
location = {Toronto, Ontario, Canada},
series = {SIGMOD '77}
}

@inproceedings{10.1145/509404.509407,
author = {Schmidt, Joachim W.},
title = {Some High-Level Language Constructs for Data of Type Relation},
year = {1977},
isbn = {9781450373432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/509404.509407},
doi = {10.1145/509404.509407},
abstract = {For the extension of high-level languages by data types of mode relation, three language constructs are proposed and discussed:- a repetition statement controlled by relations- predicates as a generalisation of boolean expressions- a constructor for relations using predicates.The language constructs are developed step by step starting with a set of elementary operations on relations. They are designed to fit into PASCAL without introducing too many additional concepts.},
booktitle = {Proceedings of the 1977 ACM SIGMOD International Conference on Management of Data},
pages = {9},
numpages = {1},
keywords = {high-level language, data base, non-procedural language, relational calculus, relational model, language extension, data type},
location = {Toronto, Ontario, Canada},
series = {SIGMOD '77}
}

@inproceedings{10.1145/509404.509408,
author = {Schenk, Kathryn L. and Pinkert, James R.},
title = {An Algorithm for Servicing Multi-Relational Queries},
year = {1977},
isbn = {9781450373432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/509404.509408},
doi = {10.1145/509404.509408},
abstract = {Let R be a relational database containing relations {R1,R2,…,Rn}. For each relation Ri, 1 ≤ i ≤ n, let Di = {di,1,di,2,…} be its set of domains and let Ki = {ki,1,ki,2,…} ⊆ Di be its set of primary keys. Finally, let D = {D1,D2,…,Dn} and K = {K1,K2,…,Kn}. Suppose that a user of database R wishes to create a new relation, Rn+1, whose domains are Dn+1 ⊆ ? Dj. In this paper, the authors describe an algorithm which, given D K, and Dn+1, determines a sequence of joins to generate Rn+1 from R1,…,Rn (if such a sequence exists). Theoretical and empirical computing times of the algorithm are discussed. A new relational database system employing the algorithm is outlined.},
booktitle = {Proceedings of the 1977 ACM SIGMOD International Conference on Management of Data},
pages = {10–20},
numpages = {11},
location = {Toronto, Ontario, Canada},
series = {SIGMOD '77}
}

@inproceedings{10.1145/3250328,
author = {Hsiao, David K.},
title = {Session Details: Applications and User Tools},
year = {1977},
isbn = {9781450373432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3250328},
doi = {10.1145/3250328},
booktitle = {Proceedings of the 1977 ACM SIGMOD International Conference on Management of Data},
numpages = {1},
location = {Toronto, Ontario, Canada},
series = {SIGMOD '77}
}

@inproceedings{10.1145/509404.509410,
author = {Sharman, G. C. H.},
title = {Update-by-Dialogue: An Interactive Approach to Database Modification},
year = {1977},
isbn = {9781450373432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/509404.509410},
doi = {10.1145/509404.509410},
abstract = {In recent years a great deal of work has been devoted to the design of interactive database query systems suitable for 'end users'. By contrast, there appears to be little comparable work on interactive facilities for database modification. This is surprising for two reasons. Firstly, update operations are of great practical significance. Users of transaction processing systems often spend a greater proportion of their time modifying a database than retrieving information from it. Secondly, update is a hard problem. It is vital to safeguard database consistency, and that implies a thorough understanding of the semantics of the data in question. A quick glance at the facilities for maintaining consistency in many current database management systems is enough to demonstrate that this is not a trivial matter.This paper describes an interactive approach to database modification which exposes the semantic problems and overcomes them. Four conceptually simple update operations - insert, delete, change and copy-are formulated in terms of a model of database consisting of entity sets and mappings. These operations lead naturally to the idea of update-by-dialogue: a system in which each of them is implemented as an interactive dialogue. The user is guided in each operation, relieving him of the burden of remembering how the database is structured and also avoiding the effects of negligence. Furthermore, the dialogues are driven from a stored description of the database structure and thus are completely general. They can be applied to any database and are even immune to changes in the database structure.},
booktitle = {Proceedings of the 1977 ACM SIGMOD International Conference on Management of Data},
pages = {21–29},
numpages = {9},
location = {Toronto, Ontario, Canada},
series = {SIGMOD '77}
}

@inproceedings{10.1145/509404.509411,
author = {Sorenson, P. G. and Wald, J. A.},
title = {PICASSO: An Aid to an End-User Facility},
year = {1977},
isbn = {9781450373432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/509404.509411},
doi = {10.1145/509404.509411},
abstract = {A characterization of an end user and a discussion of an end-user facility are presented. A language for aiding the data-base administrator in designing forms for user's of an end-user facility is described in a tutorial manner. The paper concludes with an outline of work related to the form's approach and other types of user-oriented query language facilities.},
booktitle = {Proceedings of the 1977 ACM SIGMOD International Conference on Management of Data},
pages = {30–39},
numpages = {10},
location = {Toronto, Ontario, Canada},
series = {SIGMOD '77}
}

@inproceedings{10.1145/3250329,
author = {Lowenthal, Eugene},
title = {Session Details: Database Models and Theoretical Foundations},
year = {1977},
isbn = {9781450373432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3250329},
doi = {10.1145/3250329},
booktitle = {Proceedings of the 1977 ACM SIGMOD International Conference on Management of Data},
numpages = {1},
location = {Toronto, Ontario, Canada},
series = {SIGMOD '77}
}

@inproceedings{10.1145/509404.509413,
author = {Paolini, P. and Pelagatti, G.},
title = {Formal Definition of Mappings in a Data Base},
year = {1977},
isbn = {9781450373432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/509404.509413},
doi = {10.1145/509404.509413},
abstract = {The purpose of this paper is to analyze the problem of mapping between different levels of a data base.A data Base is viewed as an Abstract Object upon which it is possible to operate with a given set of operations, the result of which depends both on the "type" of the object and on its state.Following this approach and utilizing some algebraic formalism we analyze the mappings between external views of a data base and the conceptual view of the data base itself. The main result is a requirement on the consistency between the process of deriving an external view from the conceptual view and the translation of external (user) operations into conceptual operations.It is also shown that this requirement is not sufficient to characterize the "interference" arising from a shared use of a Data Base.Informal and formal examples illustrating these concepts are given.},
booktitle = {Proceedings of the 1977 ACM SIGMOD International Conference on Management of Data},
pages = {40–46},
numpages = {7},
location = {Toronto, Ontario, Canada},
series = {SIGMOD '77}
}

@inproceedings{10.1145/509404.509414,
author = {Beeri, Catriel and Fagin, Ronald and Howard, John H.},
title = {A Complete Axiomatization for Functional and Multivalued Dependencies in Database Relations},
year = {1977},
isbn = {9781450373432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/509404.509414},
doi = {10.1145/509404.509414},
abstract = {We investigate the inference rules that can be applied to functional and multivalued dependencies that exist in a database relation. Three types of rules are discussed. First, we list the well known rules for functional dependencies. Then we investigate the rules for multivalued dependencies. It is shown that for each rule for functional dependencies the same rule or a similar rule holds for multivalued dependencies. There is, however, one additional rule for multivalued dependencies that has no parallel among the rules for functional dependencies. Finally, we present rules that involve functional and multivalued dependencies together. The main result of the paper is that the rules presented are complete for the family of functional and multivalued dependencies.},
booktitle = {Proceedings of the 1977 ACM SIGMOD International Conference on Management of Data},
pages = {47–61},
numpages = {15},
location = {Toronto, Ontario, Canada},
series = {SIGMOD '77}
}

@inproceedings{10.1145/509404.509415,
author = {Bubenko Jr, Janis A.},
title = {IAM: An Inferential Abstract Modeling Approach to Design of Conceptual Schema},
year = {1977},
isbn = {9781450373432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/509404.509415},
doi = {10.1145/509404.509415},
abstract = {A method for designing a conceptual schema (information model) for a data base is presented. The basic notion is that a conceptual schema is designed by collecting and integrating 'local' user information requirements and analysis of information inference relationships. The procedure consists of the following phases: 1) collection and specification of information requirements, 2) entity classification, 3) specification of functional dependencies, 4) abstract object specification, integration and analysis, 5) implied information analysis, 6) derivability (precedence) analysis and 7) transformation to an 'external-named-based' model. The phases are performed iteratively in a controlled fashion. Underlying theoretical concepts are defined and arguments presented for the method's practical applicability.},
booktitle = {Proceedings of the 1977 ACM SIGMOD International Conference on Management of Data},
pages = {62–74},
numpages = {13},
location = {Toronto, Ontario, Canada},
series = {SIGMOD '77}
}

@inproceedings{10.1145/3250330,
author = {Fry, James P.},
title = {Session Details: Data Conversion and Restructuring},
year = {1977},
isbn = {9781450373432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3250330},
doi = {10.1145/3250330},
booktitle = {Proceedings of the 1977 ACM SIGMOD International Conference on Management of Data},
numpages = {1},
location = {Toronto, Ontario, Canada},
series = {SIGMOD '77}
}

@inproceedings{10.1145/509404.509417,
author = {Su, Stanley Y. W. and Liu, B. J.},
title = {A Methodology of Application Program Analysis and Conversion Based on Database Semantics},
year = {1977},
isbn = {9781450373432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/509404.509417},
doi = {10.1145/509404.509417},
abstract = {This research studies the effects of 1) association changes in database semantics, 2) file composition and decomposition, and 3) the conversion of one DBMS to another to the application programs. A methodology of application program analysis and conversion based on database semantics is proposed. The semantics of both the source and target databases are described in terms of entity types and their associations. The semantics of application programs is represented by an "application structure" of language sequences which correspond to a number of access path graphs representing the general access patterns associated with entity types and their associations. Program conversion is achieved by meaning-preserving transformations of the access path graphs to account for the various types of database changes.},
booktitle = {Proceedings of the 1977 ACM SIGMOD International Conference on Management of Data},
pages = {75–87},
numpages = {13},
location = {Toronto, Ontario, Canada},
series = {SIGMOD '77}
}

@inproceedings{10.1145/509404.509418,
author = {Swartwout, Donald},
title = {An Access Path Specification Language for Restructuring Network Databases},
year = {1977},
isbn = {9781450373432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/509404.509418},
doi = {10.1145/509404.509418},
abstract = {The Access Path Specification Language (APSL) is a high-level essentially nonprocedural language for specifying restructuring transformations of network databases. It does so in terms of application-oriented concepts such as access strategies and selection criteria. APSL's approach to restructuring emphasizes description of the source structures from which target data is to be retrieved, rather than the operations needed to convert source constructs to target constructs. The latter approach is used by most current systems to restructure hierarchical data.APSL is based on the Relational Interface Model (RIM) of data, which permits a suitably restricted network database to be viewed simultaneously as a relational database in first normal form. Any restructuring of a RIM database which can be performed by the relational algebra operations Join, Select, Project, and Union can be described in APSL.APSL has been implemented as the restructuring specifications language in the Michigan Data Translator.},
booktitle = {Proceedings of the 1977 ACM SIGMOD International Conference on Management of Data},
pages = {88–101},
numpages = {14},
keywords = {data translation language, restructuring languages, restructuring software, data translation software, network restructuring, database restructuring, data translation, translation specification languages, network databases},
location = {Toronto, Ontario, Canada},
series = {SIGMOD '77}
}

@inproceedings{10.1145/509404.509419,
author = {Dale, A. G. and Dale, N. B.},
title = {Main Schema-External Schema Interaction in Hierarchically Organized Data Bases},
year = {1977},
isbn = {9781450373432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/509404.509419},
doi = {10.1145/509404.509419},
abstract = {A class of external schemas derivable from a tree structured main schema is identified. It is shown that the properties of this class of schemas permit the construction of a processing interface such that predicates defined on an external schema can be evaluated in an occurrence structure disciplined by the main schema.},
booktitle = {Proceedings of the 1977 ACM SIGMOD International Conference on Management of Data},
pages = {102–110},
numpages = {9},
location = {Toronto, Ontario, Canada},
series = {SIGMOD '77}
}

@inproceedings{10.1145/3250331,
author = {Gerritsen, Rob},
title = {Session Details: Concurrency},
year = {1977},
isbn = {9781450373432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3250331},
doi = {10.1145/3250331},
booktitle = {Proceedings of the 1977 ACM SIGMOD International Conference on Management of Data},
numpages = {1},
location = {Toronto, Ontario, Canada},
series = {SIGMOD '77}
}

@inproceedings{10.1145/509404.509421,
author = {Munz, Rudolf and Krenz, Gunter},
title = {Concurrency in Database Systems: A Simulation Study},
year = {1977},
isbn = {9781450373432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/509404.509421},
doi = {10.1145/509404.509421},
abstract = {A simulation model of concurrent updates in a database system is presented. This model is used, to answer the following questions: How frequent are deadlocks in certain environments? What about concurrency and wait-time of user processes as a function of the synchronization method used? In case of a deadlock what are useful criteria to select the process to be rolled back? How many checkpoints make sense?},
booktitle = {Proceedings of the 1977 ACM SIGMOD International Conference on Management of Data},
pages = {111–120},
numpages = {10},
location = {Toronto, Ontario, Canada},
series = {SIGMOD '77}
}

@inproceedings{10.1145/509404.509422,
author = {Ries, Daniel R. and Stonebraker, Michael},
title = {A Study of the Effects of Locking Granularity in a Data Base Management System},
year = {1977},
isbn = {9781450373432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/509404.509422},
doi = {10.1145/509404.509422},
abstract = {Many data base systems guarantee some form of integrity control upon multiple concurrent updates by some form of locking. Some "granule" of the data base is chosen as the unit which is individually locked, and a lock management algorithm is used to ensure integrity. By a simulation model this paper explores the desired size of a "granule". Under a wide variety of seemingly realistic conditions, surprisingly coarse granularity is called for. The paper concludes with some implications of these results concerning the viability of so called "predicate locking".Research sponsored by the Naval Electronic Systems Command Contract N00039-76-c-0022, the National Science Foundation Grant DCR75-03839 and the Army Research Office Grant DAAG29-76-6-0245.},
booktitle = {Proceedings of the 1977 ACM SIGMOD International Conference on Management of Data},
pages = {121},
numpages = {1},
location = {Toronto, Ontario, Canada},
series = {SIGMOD '77}
}

@inproceedings{10.1145/509404.509423,
author = {Lomet, David B.},
title = {A Practical Deadlock Avoidance Algorithm for Data Base Systems},
year = {1977},
isbn = {9781450373432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/509404.509423},
doi = {10.1145/509404.509423},
abstract = {A new algorithm is presented for avoiding system deadlocks. Because its performance has little dependence on the number of lockable resources, it is particularly well suited to use in data base systems which may have millions of individually lockable records. A further advantage is that both exclusive and shared locking are accommodated. The algorithm is presented in some detail and its performance and functional characteristics discussed.},
booktitle = {Proceedings of the 1977 ACM SIGMOD International Conference on Management of Data},
pages = {122–127},
numpages = {6},
keywords = {data base systems, deadlock, operating systems, multiprocessing, resource allocation},
location = {Toronto, Ontario, Canada},
series = {SIGMOD '77}
}

@inproceedings{10.1145/3250332,
author = {Yao, S. Bing},
title = {Session Details: Performance Evaluation},
year = {1977},
isbn = {9781450373432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3250332},
doi = {10.1145/3250332},
booktitle = {Proceedings of the 1977 ACM SIGMOD International Conference on Management of Data},
numpages = {1},
location = {Toronto, Ontario, Canada},
series = {SIGMOD '77}
}

@inproceedings{10.1145/509404.509425,
author = {Lochovsky, F. H. and Tsichritzis, D. C.},
title = {User Performance Considerations in DBMS Selection},
year = {1977},
isbn = {9781450373432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/509404.509425},
doi = {10.1145/509404.509425},
abstract = {User performance as well as system related considerations should be part of the DBMS selection process. However, appropriate procedures and measures for determining user performance characteristics of a DBMS are lacking. This paper describes a methodology and proposes a set of measures for determining the user performance level of the data model and data language of a DBMS. The methodology was applied to three DBMS's having different data models and data languages and the results of its application are discussed.},
booktitle = {Proceedings of the 1977 ACM SIGMOD International Conference on Management of Data},
pages = {128–134},
numpages = {7},
location = {Toronto, Ontario, Canada},
series = {SIGMOD '77}
}

@inproceedings{10.1145/509404.509426,
author = {Merrett, T. H.},
title = {Database Cost Analysis: A Top-down Approach},
year = {1977},
isbn = {9781450373432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/509404.509426},
doi = {10.1145/509404.509426},
abstract = {A top-down approach is proposed for cost analysis for database and information system design. General principles are given which allow the analyst either to estimate rapidly the costs of a wide variety of alternatives or to investigate fewer possibilities in great detail. Techniques are developed which can be used at any level of the iterative design process - at the early stages or at the detailed phase of specific design. The paper applies the methods to the basic categories of file cost at the simpler levels of analysis and refers to the literature for more sophisticated analyses, which can be done within the framework provided here. Among the specific results developed are: the extension of a widely-used hit ratio formula to non-uniform usage distribution; the introduction of the "distribution of depths" for serial accesses; a general activity analysis and a volatility analysis for indexed sequential files.},
booktitle = {Proceedings of the 1977 ACM SIGMOD International Conference on Management of Data},
pages = {135–143},
numpages = {9},
keywords = {deterioration, activity, volatility, usage distribution, cost analysis, reorganization cost, database performance, file organization model, storage cost, retrieval cost, database analysis, data structure, acquisition cost},
location = {Toronto, Ontario, Canada},
series = {SIGMOD '77}
}

@inproceedings{10.1145/509404.509427,
author = {Scheuermann, Peter},
title = {Concepts of a Data Base Simulation Language},
year = {1977},
isbn = {9781450373432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/509404.509427},
doi = {10.1145/509404.509427},
abstract = {Performance modelling of data base systems requires taking into consideration the complex interactions between the different physical design parameters and the system workload parameters. In order to facilitate a data base designer in evaluating various implementation strategies, a simulation language is presented which has three distinct components (1) data definition (2) query definition and (3) mapping to storage definition. A number of features characterize this type of descriptive mechanism. First, the system workload parameters (1 and 2) must be described in terms of statistical distributions, which implies that the storage structure is subject to the same stochastic variability. Secondly, the level of detail required to describe mappings to storage for simulation purposes is lower than that required by standard data definition or mapping languages. The process of embedding a structure in storage is decomposed into a number of steps, each introducing additional implementation oriented details.},
booktitle = {Proceedings of the 1977 ACM SIGMOD International Conference on Management of Data},
pages = {144–156},
numpages = {13},
location = {Toronto, Ontario, Canada},
series = {SIGMOD '77}
}

@inproceedings{10.1145/3250333,
author = {Griffiths, Patricia P.},
title = {Session Details: Data Base Integrity and Protection},
year = {1977},
isbn = {9781450373432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3250333},
doi = {10.1145/3250333},
booktitle = {Proceedings of the 1977 ACM SIGMOD International Conference on Management of Data},
numpages = {1},
location = {Toronto, Ontario, Canada},
series = {SIGMOD '77}
}

@inproceedings{10.1145/509404.509429,
author = {Lohman, Guy M. and Muckstadt, John A.},
title = {Optimal Policy for Batch Operations: Backup, Checkpointing, Reorganization, and Updating},
year = {1977},
isbn = {9781450373432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/509404.509429},
doi = {10.1145/509404.509429},
abstract = {Many database maintenance operations are performed periodically in batches, even in real-time systems. The purpose of this paper is to present a general model for determining the optimal frequency of these batch operations. Specifically, optimal backup, checkpointing, batch updating, and reorganization policies are derived. The approach used exploits inventory parallels, by seeking the optimal number of items --- rather than a time interval --- to trigger a batch. The Renewal Reward Theorem is used to find the average long run costs for backup, recovery, and item storage, per unit time, which is then minimized to find the optimal backup policy. This approach permits far less restrictive assumptions about the update arrival process than did previous models, as well as inclusion of storage costs for the updates. The optimal checkpointing, batch updating, and reorganization policies are shown to be special cases of this optimal backup policy. The derivation of previous results as special cases of this model, and an example, demonstrate the generality of the methodology developed.},
booktitle = {Proceedings of the 1977 ACM SIGMOD International Conference on Management of Data},
pages = {157},
numpages = {1},
keywords = {backup frequency, batch operations, file reorganization, checkpoint interval, real-time systems, renewal theory, batch update, database maintenance, inventory theory},
location = {Toronto, Ontario, Canada},
series = {SIGMOD '77}
}

@inproceedings{10.1145/509404.509430,
author = {Verhofstad, Joost},
title = {Recovery and Crash Resistance in a Filing System},
year = {1977},
isbn = {9781450373432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/509404.509430},
doi = {10.1145/509404.509430},
abstract = {This paper describes mechanisms that provide the user of a filing system the dynamic facility for defining a scope within which backing out can be done on request.Check points (defining the beginning of a new scope) can dynamically be established and procedures for 'acceptance' (at the end of the scope) or 'undoing' (within or at the end of the scope) can be invoked. These scopes can be nested.It is also shown that these mechanisms can be used to provide crash resistance. After a crash the system will be left in the state it was in before it entered the current scope (or outermost scope if scopes are nested).},
booktitle = {Proceedings of the 1977 ACM SIGMOD International Conference on Management of Data},
pages = {158–167},
numpages = {10},
keywords = {backing out, consistency, audit trial, crash resistance, error recovery, fault tolerance, filing system, recovery block, recovery cache (=recursive cache)},
location = {Toronto, Ontario, Canada},
series = {SIGMOD '77}
}

@inproceedings{10.1145/509404.509431,
author = {Wong, Kai C. and Edelberg, Murray},
title = {Interval Hierarchies and Their Application to Predicate Files},
year = {1977},
isbn = {9781450373432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/509404.509431},
doi = {10.1145/509404.509431},
abstract = {Predicates are used extensively in modern data base systems, for purposes ranging from user specification of associative accesses to data, to user-invisible system control functions such as concurrency control and data distribution. Collections of predicates, or predicate files, must be maintained and accessed efficiently. This paper describes a dynamic index, called an interval hierarchy, which supports several important retrieval operations on files of simple conjunctive predicates. Search and maintenance algorithms for interval hierarchies are given. For a file of n predicates, typical of the kind expected in practice, these algorithms require time equal to O(log n).},
booktitle = {Proceedings of the 1977 ACM SIGMOD International Conference on Management of Data},
pages = {168},
numpages = {1},
location = {Toronto, Ontario, Canada},
series = {SIGMOD '77}
}

@inproceedings{10.1145/509404.509432,
author = {Yu, C. T. and Chin, F. Y.},
title = {A Study on the Protection of Statistical Data Bases},
year = {1977},
isbn = {9781450373432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/509404.509432},
doi = {10.1145/509404.509432},
abstract = {We study a number of protection schemes with respect to their effectiveness in providing security for statistical data bases, their feasibility and their ease of implementation. A new method is proposed, and two implementations presented. One implementation guarantees perfect protection against leakage of information about individuals; the other requires very little implementation effort, but has a small probability of leakage.},
booktitle = {Proceedings of the 1977 ACM SIGMOD International Conference on Management of Data},
pages = {169–181},
numpages = {13},
location = {Toronto, Ontario, Canada},
series = {SIGMOD '77}
}

