@inproceedings{10.1145/3253387,
author = {Mendelzon, A.},
title = {Session Details: Theory I},
year = {1982},
isbn = {0897910737},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3253387},
doi = {10.1145/3253387},
booktitle = {Proceedings of the 1982 ACM SIGMOD International Conference on Management of Data},
numpages = {1},
location = {Orlando, Florida},
series = {SIGMOD '82}
}

@inproceedings{10.1145/582353.582355,
author = {Maier, David and Warren, David S.},
title = {Specifying Connections for a Universal Relation Scheme Database},
year = {1982},
isbn = {0897910737},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/582353.582355},
doi = {10.1145/582353.582355},
abstract = {We propose a universal relation scheme database model based on the assumption that there is a unique connection among any set of attributes in a relational database. We use the notion of object ([Sc],[MU]) to give a database designer the ability to control how connections in the database are to be made. We show how semantic considerations that follow naturally from the unique connection assumption constrain how objects and the underlying base relations must be syntactically related. We illustrate and motivate our definitions and constraints with several simple examples.},
booktitle = {Proceedings of the 1982 ACM SIGMOD International Conference on Management of Data},
pages = {1–7},
numpages = {7},
location = {Orlando, Florida},
series = {SIGMOD '82}
}

@inproceedings{10.1145/582353.582356,
author = {Imielinski, Tomasz and Lipski, Witold},
title = {A Systematic Approach to Relational Database Theory},
year = {1982},
isbn = {0897910737},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/582353.582356},
doi = {10.1145/582353.582356},
abstract = {In an attempt to eliminate motivational inconsistencies, we propose a new approach to relational database theory. Basically, a database schema is treated as a relational view defined over certain atomic, selfexplainable relations, constituting what we call a conceptual schema. In this new framework, we revisit some basic notions of the relational database theory, such as dependencies and schema equivalence. We point out a fundamental difference between functional dependencies, which we treat as constraints over the conceptual schema, and multivalued and join dependencies, which we treat as constraints over the database schema, and which are simply consequences of the way database relations are constructed from conceptual relations. The separation of the database schema from the conceptual schema makes it possible to give a clear definition of a semantics of a database state. It also provides a natural framework to consider equivalence of database schemata.},
booktitle = {Proceedings of the 1982 ACM SIGMOD International Conference on Management of Data},
pages = {8–14},
numpages = {7},
location = {Orlando, Florida},
series = {SIGMOD '82}
}

@inproceedings{10.1145/3253388,
author = {Berg, J. L.},
title = {Session Details: Database Applications I},
year = {1982},
isbn = {0897910737},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3253388},
doi = {10.1145/3253388},
booktitle = {Proceedings of the 1982 ACM SIGMOD International Conference on Management of Data},
numpages = {1},
location = {Orlando, Florida},
series = {SIGMOD '82}
}

@inproceedings{10.1145/582353.582358,
author = {Driggers, W. G.},
title = {A Crop Condition Assessment Database},
year = {1982},
isbn = {0897910737},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/582353.582358},
doi = {10.1145/582353.582358},
booktitle = {Proceedings of the 1982 ACM SIGMOD International Conference on Management of Data},
pages = {15–27},
numpages = {13},
location = {Orlando, Florida},
series = {SIGMOD '82}
}

@inproceedings{10.1145/582353.582359,
author = {Rowe, Lawrence A. and Shoens, Kurt A.},
title = {A Form Application Development System},
year = {1982},
isbn = {0897910737},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/582353.582359},
doi = {10.1145/582353.582359},
abstract = {This paper describes FADS --- a Form Application Development System which is an interactive system for the development of form-based database applications. FADS reduces the amount of work required to implement a forms application by suppressing much of the detail which would be required by conventional tools (e.g., a screen definition system, a database system, and a programming language). FADS provides direct access to a relational database, a standard model of the user interface, built-in form constructs, and an integrated development and debugging environment. Using FADS, form applications can be developed quickly and the resulting systems are easy to modify.A prototype implementation of the FADS kernel has been completed.},
booktitle = {Proceedings of the 1982 ACM SIGMOD International Conference on Management of Data},
pages = {28–38},
numpages = {11},
location = {Orlando, Florida},
series = {SIGMOD '82}
}

@inproceedings{10.1145/3253389,
author = {Mendelzon, A.},
title = {Session Details: Theory II},
year = {1982},
isbn = {0897910737},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3253389},
doi = {10.1145/3253389},
booktitle = {Proceedings of the 1982 ACM SIGMOD International Conference on Management of Data},
numpages = {1},
location = {Orlando, Florida},
series = {SIGMOD '82}
}

@inproceedings{10.1145/582353.582361,
author = {Bernstein, Philip A. and Blaustein, Barbara T.},
title = {Fast Methods for Testing Quantified Relational Calculus Assertions},
year = {1982},
isbn = {0897910737},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/582353.582361},
doi = {10.1145/582353.582361},
abstract = {Semantic integrity assertions are predicates that define consistent states. A database system enforces assertions by ensuring that consistency is maintained as the database is updated.Most research on the efficient enforcement of assertions has concentrated on assertion simplification algorithms --- algorithms that produce simplified assertions that can be evaluated before the update is executed. This paper describes a strategy for further improving the efficiency of assertion enforcement.We develop an efficient algorithm for evaluating an assertion produced by an assertion simplification algorithm. We characterize a class of assertions that can be evaluated using a simple two-step procedure. The first step defines and evaluates simple selection queries on each relation. The second step applies set emptiness tests to the results of these selections. We also show how these techniques may be used to improve the efficiency of evaluating assertions outside our class.},
booktitle = {Proceedings of the 1982 ACM SIGMOD International Conference on Management of Data},
pages = {39–50},
numpages = {12},
location = {Orlando, Florida},
series = {SIGMOD '82}
}

@inproceedings{10.1145/582353.582362,
author = {Maier, D. and Rozenshtein, D. and Salveter, S. and Stein, J. and Warren, D. S.},
title = {Toward Logical Data Independence: A Relational Query Language without Relations},
year = {1982},
isbn = {0897910737},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/582353.582362},
doi = {10.1145/582353.582362},
abstract = {One of the main goals of database systems, relational systems in particular, is to provide a degree of physical data independence for users and programs. Users should not need to know the exact physical storage structures to use the database, and should be protected from changes in those structures. We attempt to go a step further, to logical data independence. We want an interface to a relational database where a user need not be concerned with how the data has been partitioned into various relations. The natural relation schemes to be used, from a semantic point of view, may be decomposed in the database for normalization or redundancy reasons. Our approach essentially loads all the semantics onto the attributes. In our query language tuple variables are not bound to specific relations. Rather, the system uses the set of attributes, say X, that appear in a query with a tuple variable, say t, to combine the database relations to form a single relation with scheme X over which t ranges. We describe our method for constructing such a relation given the associated set of attributes X. When tuple variables are bound implicitly, the logical connectives 'and', 'or', and 'not' take on 'semantic overtones' since they can affect the binding. We discuss the motivation behind the chosen semantics for these connectives. Our goal is a powerful, yet concise, query language with natural semantics.},
booktitle = {Proceedings of the 1982 ACM SIGMOD International Conference on Management of Data},
pages = {51–60},
numpages = {10},
location = {Orlando, Florida},
series = {SIGMOD '82}
}

@inproceedings{10.1145/582353.582363,
author = {Imieli\'{n}ski, Tomasz and Lipski, Witold},
title = {A Technique for Translating States between Database Schemata},
year = {1982},
isbn = {0897910737},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/582353.582363},
doi = {10.1145/582353.582363},
abstract = {Consider two database schemata modeling the same reality. Given a state of the first schema, we can ask what information it provides about the state of the second schema. It turns out that this information can be represented by a table similar to a tableau of Aho, Sagiv and Ullman. We show a simple method to construct this table, by using results developed for tables of this type in the context of representing incomplete information in relational databases. We also consider a closely related notion of equivalence of database schemata, briefly sketching a method to test two schemata for equivalence.},
booktitle = {Proceedings of the 1982 ACM SIGMOD International Conference on Management of Data},
pages = {61–68},
numpages = {8},
location = {Orlando, Florida},
series = {SIGMOD '82}
}

@inproceedings{10.1145/3253390,
author = {Berg, J. L.},
title = {Session Details: Database Applications II},
year = {1982},
isbn = {0897910737},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3253390},
doi = {10.1145/3253390},
booktitle = {Proceedings of the 1982 ACM SIGMOD International Conference on Management of Data},
numpages = {1},
location = {Orlando, Florida},
series = {SIGMOD '82}
}

@inproceedings{10.1145/582353.582365,
author = {Bates, Doug and Boral, Haran and DeWitt, David J.},
title = {A Framework for Research in Database Management for Statistical Analysis or a Primer on Statistical Database Management Problems for Computer Scientists},
year = {1982},
isbn = {0897910737},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/582353.582365},
doi = {10.1145/582353.582365},
abstract = {This paper is intended to introduce those familiar with database management issues to the problems of managing large statistical databases. We begin with a characterization of statistical databases based on the structure and use of the data in the database. Several data management problems are then described. In particular, we discuss the problem of repetitive computations on large segments of the database during the lifetime of a statistical analysis. The organization of a data management system which avoids this problem by caching previously computed results and automatically maintaining their integrity is presented. We conclude with a list of problems that this organization raises and a discussion of related work.},
booktitle = {Proceedings of the 1982 ACM SIGMOD International Conference on Management of Data},
pages = {69–78},
numpages = {10},
location = {Orlando, Florida},
series = {SIGMOD '82}
}

@inproceedings{10.1145/582353.582366,
author = {Bell, Jean},
title = {Data Modelling of Scientific Simulation Programs},
year = {1982},
isbn = {0897910737},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/582353.582366},
doi = {10.1145/582353.582366},
abstract = {Current research into data modelling of large scientific simulation programs is described. The research includes an empirical study of data management in such programs and an analysis of how scientists actually use their data. The goal of the research is to provide theoretical tools to improve data management for this class of applications. In this paper, data modelling in the scientific environment is described, and some comparisons between data modelling for scientific simulation programs and commercial applications are made.},
booktitle = {Proceedings of the 1982 ACM SIGMOD International Conference on Management of Data},
pages = {79–86},
numpages = {8},
location = {Orlando, Florida},
series = {SIGMOD '82}
}

@inproceedings{10.1145/3253391,
author = {Hawthorn, P.},
title = {Session Details: Query Languages},
year = {1982},
isbn = {0897910737},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3253391},
doi = {10.1145/3253391},
booktitle = {Proceedings of the 1982 ACM SIGMOD International Conference on Management of Data},
numpages = {1},
location = {Orlando, Florida},
series = {SIGMOD '82}
}

@inproceedings{10.1145/582353.582368,
author = {Dintelman, Sue M. and Maness, A. Timothy},
title = {An Implementation of a Query Language Supporting Path Expressions},
year = {1982},
isbn = {0897910737},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/582353.582368},
doi = {10.1145/582353.582368},
abstract = {This paper describes the query language of the Genealogical Information System (GENISYS) which provides users with a high level, relational-like view of their data combined with the ability to reference attributes in associated relations by specifying paths from source relations to target relations. The emphasis in the presentation is on the use and implementation of the link selectors used for specifying paths between relations. Link selectors allow users a convenient mechanism for formulating multiple relation queries which are often complex in other query languages.},
booktitle = {Proceedings of the 1982 ACM SIGMOD International Conference on Management of Data},
pages = {87–93},
numpages = {7},
keywords = {data base systems, query languages, path expressions},
location = {Orlando, Florida},
series = {SIGMOD '82}
}

@inproceedings{10.1145/582353.582369,
author = {Manola, Frank and Pirotte, Alain},
title = {CQLF---a Query Language for CODASYL-Type Databases},
year = {1982},
isbn = {0897910737},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/582353.582369},
doi = {10.1145/582353.582369},
abstract = {This paper describes CQLF (CODASYL Query Language, Flat) [MAN081]. CQLF is a high level language for accessing and manipulating data in databases described using the 1981 ANSI dpANS version of the CODASYL Data Description Language [ANSI81]. CQLF has similarities to typical relational languages, such as SQL [ASTR76, CHAM76] and QUEL [STON76]. CQLF provides capabilities for querying and operating on databases described both in a "relational style" (having no CODASYL sets, using only values to represent interrecord relationships, and having records with no arrays), and in a "network style" (using CODASYL sets to represent interrecord relationships, and having records containing arrays).},
booktitle = {Proceedings of the 1982 ACM SIGMOD International Conference on Management of Data},
pages = {94–103},
numpages = {10},
location = {Orlando, Florida},
series = {SIGMOD '82}
}

@inproceedings{10.1145/582353.582370,
author = {Schlageter, G. and Rieskamp, M. and Pr\"{a}del, U. and Unland, R.},
title = {The Network Query Language NOAH},
year = {1982},
isbn = {0897910737},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/582353.582370},
doi = {10.1145/582353.582370},
abstract = {A non-procedural query language for network databases is described. The language is very powerful as compared to other implemented languages. It allows to formulate complex queries which, among other things, include conditions for CODASYL-sets and conditions for n:m-relationships. Cyclic database structures can be processed to some extent.Note: This report is not written for the "naive" user of NOAH, and is not meant to replace a NOAH manual. Instead, this report describes the foundations, the underlying concepts, and the structure of the language in more theoretically oriented, technical terms.This research was performed at the university of Hagen, West Germany, and was partially supported by Triumph Adler AG, N\"{u}rnberg, West Germany.},
booktitle = {Proceedings of the 1982 ACM SIGMOD International Conference on Management of Data},
pages = {104–110},
numpages = {7},
location = {Orlando, Florida},
series = {SIGMOD '82}
}

@inproceedings{10.1145/582353.582371,
author = {Longstaff, J},
title = {ERQ: Controlled Inference and Instruction Techniques for DBMS Query Languages},
year = {1982},
isbn = {0897910737},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/582353.582371},
doi = {10.1145/582353.582371},
abstract = {This paper describes certain aspects of the Entity Relationship Query Interface (ERQ) which is being implemented as part of a Distributed Data-base Research programme. A major objective of ERQ is to teach naive users the fundamental concepts of the Entity Relationship (ER) and Relational Data Models, and also how to use a Relational Query Language. This is achieved by providing a range of user modes, with progression through the modes as the user gains in experience. The methods used to teach system facilities (namely teaching displays, help messages) and discovering database semantics (using functional decomposition --- ER descriptions) are presented. We also discuss the ERQ Controlled Inference facility, by which the user instructs the system to make limited inferences connected with the ER model description during query formulation. The results of inferences are displayed as system generated Natural Language sentences, which are used to validate query specifications.},
booktitle = {Proceedings of the 1982 ACM SIGMOD International Conference on Management of Data},
pages = {111–117},
numpages = {7},
location = {Orlando, Florida},
series = {SIGMOD '82}
}

@inproceedings{10.1145/3253392,
author = {Wong, H. K. T.},
title = {Session Details: Statistical Database Management},
year = {1982},
isbn = {0897910737},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3253392},
doi = {10.1145/3253392},
booktitle = {Proceedings of the 1982 ACM SIGMOD International Conference on Management of Data},
numpages = {1},
location = {Orlando, Florida},
series = {SIGMOD '82}
}

@inproceedings{10.1145/582353.582373,
author = {Wong, Harry K. T.},
title = {Statistical Database Management},
year = {1982},
isbn = {0897910737},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/582353.582373},
doi = {10.1145/582353.582373},
booktitle = {Proceedings of the 1982 ACM SIGMOD International Conference on Management of Data},
pages = {118},
numpages = {1},
location = {Orlando, Florida},
series = {SIGMOD '82}
}

@inproceedings{10.1145/3253393,
author = {Navathe, S. B.},
title = {Session Details: Physical Database Design},
year = {1982},
isbn = {0897910737},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3253393},
doi = {10.1145/3253393},
booktitle = {Proceedings of the 1982 ACM SIGMOD International Conference on Management of Data},
numpages = {1},
location = {Orlando, Florida},
series = {SIGMOD '82}
}

@inproceedings{10.1145/582353.582375,
author = {Dong, Jirun and Hull, Richard},
title = {Applying Approximate Order Dependency to Reduce Indexing Space},
year = {1982},
isbn = {0897910737},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/582353.582375},
doi = {10.1145/582353.582375},
abstract = {The recently introduced notion of order dependency in the relational model is generalized to include situations where order dependency is satisfied in an approximate way. Two fundamental types of approximate satisfaction are distinguished and analyzed. It is shown for both types that such approximate satisfaction of order dependencies can be applied to substantially reduce indexing space without significantly increasing access time.},
booktitle = {Proceedings of the 1982 ACM SIGMOD International Conference on Management of Data},
pages = {119–127},
numpages = {9},
location = {Orlando, Florida},
series = {SIGMOD '82}
}

@inproceedings{10.1145/582353.582376,
author = {Ceri, S. and Negri, M. and Pelagatti, G.},
title = {Horizontal Data Partitioning in Database Design},
year = {1982},
isbn = {0897910737},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/582353.582376},
doi = {10.1145/582353.582376},
abstract = {In this paper the problem of horizontally partitioning data on a set of resources is considered.The main optimization parameter is the number of accesses performed by the application programs to different portions of data. The concepts which are required for the determination of relevant portions of data are defined and a methodology for determining the access parameters is proposed.The formulation of the general partitioning problem in 3 specific application environments is shown: distributed database design, file partitioning on a primary and a secondary memory and data distribution on different devices.It is shown that the analytical models of these specific applications use the parameters of the general formulation.},
booktitle = {Proceedings of the 1982 ACM SIGMOD International Conference on Management of Data},
pages = {128–136},
numpages = {9},
location = {Orlando, Florida},
series = {SIGMOD '82}
}

@inproceedings{10.1145/3253394,
author = {Bacon, G. C.},
title = {Session Details: Panel},
year = {1982},
isbn = {0897910737},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3253394},
doi = {10.1145/3253394},
booktitle = {Proceedings of the 1982 ACM SIGMOD International Conference on Management of Data},
numpages = {1},
location = {Orlando, Florida},
series = {SIGMOD '82}
}

@inproceedings{10.1145/582353.582378,
author = {Bacon, Glenn C.},
title = {Issues in Integrating Data Bases of Image, Graphical, Array and Character Data},
year = {1982},
isbn = {0897910737},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/582353.582378},
doi = {10.1145/582353.582378},
booktitle = {Proceedings of the 1982 ACM SIGMOD International Conference on Management of Data},
pages = {137},
numpages = {1},
location = {Orlando, Florida},
series = {SIGMOD '82}
}

@inproceedings{10.1145/3253395,
author = {Katz, R.},
title = {Session Details: Query Optimization I},
year = {1982},
isbn = {0897910737},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3253395},
doi = {10.1145/3253395},
booktitle = {Proceedings of the 1982 ACM SIGMOD International Conference on Management of Data},
numpages = {1},
location = {Orlando, Florida},
series = {SIGMOD '82}
}

@inproceedings{10.1145/582353.582380,
author = {Dayal, Umeshwar and Goodman, Nathan},
title = {Query Optimization for CODASYL Database Systems},
year = {1982},
isbn = {0897910737},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/582353.582380},
doi = {10.1145/582353.582380},
abstract = {One of the tasks of MULTIBASE, a system for integrated access to heterogeneous distributed databases, is to present a high-level query interface to navigational systems such as CODASYL. The interface compiles queries into efficient programs that implement the queries. The principal problem in constructing such an interface is access path optimization, i.e., the selection of an optimal sequence of access paths that must be traversed to process a given query. This paper identifies a class of queries for which efficient programs can be synthesized. It characterizes the strategies for processing a given query, and shows how to synthesize a program for implementing each strategy. It develops a model for estimating the cost of executing a program, and uses this model to find the optimal strategy for processing a given query.},
booktitle = {Proceedings of the 1982 ACM SIGMOD International Conference on Management of Data},
pages = {138–150},
numpages = {13},
location = {Orlando, Florida},
series = {SIGMOD '82}
}

@inproceedings{10.1145/582353.582381,
author = {Kambayashi, Yahiko and Yoshikawa, Masatoshi and Yajima, Shuzo},
title = {Query Processing for Distributed Databases Using Generalized Semi-Joins},
year = {1982},
isbn = {0897910737},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/582353.582381},
doi = {10.1145/582353.582381},
abstract = {In distributed database systems, the cost to process a query is mainly determined by the amount of communication. Semi-join is a very useful tool to reduce the cost of joins in such systems. There are, however, queries called cyclic ones which cannot be processed by semi-joins only. In this paper the concept of generalized semi-joins is introduced to solve such a problem. To handle an arbitrary cyclic query, first a spanning tree is selected in the corresponding query graph and then generalized semi-joins are applied in the order determined by the tree. Processing of cyclic queries, however, requires more communication cost than processing of tree queries, since in the former case we need to transmit attribute values which are not required in the latter case. A procedure to reduce the communication cost of such additional data is developed, which will make the generalized semi-join based procedures practical.},
booktitle = {Proceedings of the 1982 ACM SIGMOD International Conference on Management of Data},
pages = {151–160},
numpages = {10},
location = {Orlando, Florida},
series = {SIGMOD '82}
}

@inproceedings{10.1145/582353.582382,
author = {Klug, Anthony},
title = {Access Paths in the "Abe" Statistical Query Facility},
year = {1982},
isbn = {0897910737},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/582353.582382},
doi = {10.1145/582353.582382},
abstract = {An increasingly important part of information processing today involves the taking of counts, sums, averages, and other statistical or aggregate quantities. The "Abe" query language is designed to make formulation of complicated aggregations simple. Access path selection in Abe finds efficient ways to execute these complicated queries. Access paths for Abe queries perform "aggregate joins", that is, they compute aggregate quantities at the same time as they join subqueries with parent queries. This can be done using index scans or merging scans depending on how many "partitions" need to be accessed.},
booktitle = {Proceedings of the 1982 ACM SIGMOD International Conference on Management of Data},
pages = {161–173},
numpages = {13},
location = {Orlando, Florida},
series = {SIGMOD '82}
}

@inproceedings{10.1145/3253396,
author = {Goodman, N.},
title = {Session Details: Distributed Databases},
year = {1982},
isbn = {0897910737},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3253396},
doi = {10.1145/3253396},
booktitle = {Proceedings of the 1982 ACM SIGMOD International Conference on Management of Data},
numpages = {1},
location = {Orlando, Florida},
series = {SIGMOD '82}
}

@inproceedings{10.1145/582353.582384,
author = {Kuss, Herbert},
title = {On Totally Ordering Checkpoints in Distributed Data Bases},
year = {1982},
isbn = {0897910737},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/582353.582384},
doi = {10.1145/582353.582384},
abstract = {Two-phase commit techniques to achieve atomicity of transactions in distributed database systems have been widely presented in the past. Less attention in comparison with this technique has been payed to the problem of "cold restart". To this problem we present a solution which has as its main properties:- low communication overhead and only partial cooperation between transaction managers during normal operation of the distributed system are required when making provisions to cope with cold restart,- a globally uniform total order of local checkpoints is continuously constructed and always present, thus speeding up situations of cold restart,- certain nodes of the network have an a priori chance to decide, whether they need to be restarted and in some cases may be relieved from parsing their logs during restart.This all together leads to a solution for the problem of cold restart which essentially differs from so far presented approaches.},
booktitle = {Proceedings of the 1982 ACM SIGMOD International Conference on Management of Data},
pages = {174},
numpages = {1},
location = {Orlando, Florida},
series = {SIGMOD '82}
}

@inproceedings{10.1145/582353.582385,
author = {Cooper, Eric C.},
title = {Analysis of Distributed Commit Protocols},
year = {1982},
isbn = {0897910737},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/582353.582385},
doi = {10.1145/582353.582385},
abstract = {The reliability of atomic commit protocols for distributed systems is investigated. Recent research has proved that blocking is unavoidable after certain site or network failures. The results of this paper enable one to quantify the expected amount of such blocking.A probabilistic model of a distributed system is developed, consisting of two components: a model of the communication network and a model of distributed transaction processing. We introduce the notion of the window of uncertainty for a site participating in a distributed transaction, which characterizes when that site is vulnerable to blocking in the event of a network partition. The model is then used to evaluate and compare the expected number of blocked sites for several atomic commit protocols.},
booktitle = {Proceedings of the 1982 ACM SIGMOD International Conference on Management of Data},
pages = {175–183},
numpages = {9},
location = {Orlando, Florida},
series = {SIGMOD '82}
}

@inproceedings{10.1145/582353.582386,
author = {Chan, Arvola and Fox, Stephen and Lin, Wen-Te K. and Nori, Anil and Ries, Daniel R.},
title = {The Implementation of an Integrated Concurrency Control and Recovery Scheme},
year = {1982},
isbn = {0897910737},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/582353.582386},
doi = {10.1145/582353.582386},
abstract = {This paper describes the implementation level design of an integrated concurrency control and recovery scheme based on the maintenance of multiple versions of data objects in a database. The concurrency control mechanism enhances parallelism by eliminating interference between retrieval and update transactions. The recovery mechanism permits efficient transaction and system recovery by keeping before-images of data objects at the page (block) level. This paper addresses the key technical problems in the implementation of such an integrated scheme. We present an efficient garbage collection algorithm for reclaiming storage space used by old versions of data objects that will no longer be accessed. We also propose an on-line backup algorithm that will permit the backup procedure to run in parallel with regular transactions. This integrated concurrency control and recovery scheme is being implemented in the LDM: the local database manager component of a distributed database management system, now being developed by Computer Corporation of America, that will support the ADAPLEX database application programming language [Chan81a, Smith81].},
booktitle = {Proceedings of the 1982 ACM SIGMOD International Conference on Management of Data},
pages = {184–191},
numpages = {8},
location = {Orlando, Florida},
series = {SIGMOD '82}
}

@inproceedings{10.1145/3253397,
author = {Bratbergsengen, K.},
title = {Session Details: Engineering and Scientific Applications},
year = {1982},
isbn = {0897910737},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3253397},
doi = {10.1145/3253397},
booktitle = {Proceedings of the 1982 ACM SIGMOD International Conference on Management of Data},
numpages = {1},
location = {Orlando, Florida},
series = {SIGMOD '82}
}

@inproceedings{10.1145/582353.582388,
author = {Daini, Ola-Olu A.},
title = {Numerical Database Management System: A Model},
year = {1982},
isbn = {0897910737},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/582353.582388},
doi = {10.1145/582353.582388},
abstract = {Numerical databases arise in many scientific applications to keep track of large sparse and dense matrices. Unlike the many matrix data storage techniques available for incore manipulation, very large matrices are currently limited to a few compact storage schemes on secondary devices, due to the complex underlying data management facilities. This paper presents a model of an approach to numerical database management system that provides generalized facility for promoting physical data independence by relieving users from the need for knowledge of the physical data organization on the secondary devices.Each of the storage techniques for dense and sparse matrices is described by a physical schema and the tools for any numerical database description, mapping to storage and data access are provided by data language facilities. The feasibility of the model with regard to our prototype implementation of a generalized numerical database translator is also discussed.},
booktitle = {Proceedings of the 1982 ACM SIGMOD International Conference on Management of Data},
pages = {192–199},
numpages = {8},
location = {Orlando, Florida},
series = {SIGMOD '82}
}

@inproceedings{10.1145/582353.582389,
author = {Tamminen, Markku},
title = {Efficient Spatial Access to a Data Base},
year = {1982},
isbn = {0897910737},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/582353.582389},
doi = {10.1145/582353.582389},
abstract = {We present a file organization scheme providing fast access to spatially referenced objects in a data base. The method utilizes a geometric file structure based on extendible cells together with a so-called topological representation of areas. It is shown to have O(1) expected access cost for the "point-in-polygonnetwork-query" in typical situations. The method can be used as a spatial directory to a data base. Performance indicators are reported.},
booktitle = {Proceedings of the 1982 ACM SIGMOD International Conference on Management of Data},
pages = {200–206},
numpages = {7},
keywords = {spatial search, geographic data management},
location = {Orlando, Florida},
series = {SIGMOD '82}
}

@inproceedings{10.1145/582353.582390,
author = {Haskin, Roger L. and Lorie, Raymond A.},
title = {On Extending the Functions of a Relational Database System},
year = {1982},
isbn = {0897910737},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/582353.582390},
doi = {10.1145/582353.582390},
abstract = {Relational database systems are attracting great interest from potential users outside the traditional areas in which such systems have been employed. Features of modern relational systems such as powerful query facilities, data and device independence, concurrency control, and recovery are useful in applications such as engineering design, office automation, and graphics. However, such applications place demands on the system that it must be extended to handle. This paper identifies three of these demands: storing non-coded information of arbitrary length within the database, dealing with aggregate objects as a unit, and improving support for interactive access. Additions to System R, a prototypical relational system, are introduced to satisfy these demands: long fields, for storing non-coded data, and complex objects, which declare the semantic relationships among data items and provide a means for adequately supporting interactive access.},
booktitle = {Proceedings of the 1982 ACM SIGMOD International Conference on Management of Data},
pages = {207–212},
numpages = {6},
location = {Orlando, Florida},
series = {SIGMOD '82}
}

@inproceedings{10.1145/582353.582391,
author = {Antonacci, Francesco and Dell'Orco, Piero and Turtur, Antonio},
title = {A Territorial Database Management System},
year = {1982},
isbn = {0897910737},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/582353.582391},
doi = {10.1145/582353.582391},
abstract = {A rational territorial management requires that all the amount of geographical data (maps, aerophotos, satellite images but also statistics, etc ...) be unified and made accessible to the decisional entities, which can use them as means for an adequate planning of the actions to undertake. Therefore the concept of data base (or DB) and the relative techniques offer the suitable means, as they give to the user a clear view of the data, an access and computational language oriented to the user, and the capability to support in a simple way the process (often heuristic) of solution of the management problems.The extended relational model [1] is adequate for this kind of problems for its simplicity, semantic completeness, and descriptive power. The access language to the DB represents an extension of AQL [2] that, besides supporting the DB management operations and the possibilities of interactive computation of AQL, offers the integration with the geographical operations and data geographical type. The proposal is illustrated by means of a series of examples of inquiry against a geographical DB.},
booktitle = {Proceedings of the 1982 ACM SIGMOD International Conference on Management of Data},
pages = {213},
numpages = {1},
location = {Orlando, Florida},
series = {SIGMOD '82}
}

@inproceedings{10.1145/3253398,
author = {Berg, J. L.},
title = {Session Details: Panel},
year = {1982},
isbn = {0897910737},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3253398},
doi = {10.1145/3253398},
booktitle = {Proceedings of the 1982 ACM SIGMOD International Conference on Management of Data},
numpages = {1},
location = {Orlando, Florida},
series = {SIGMOD '82}
}

@inproceedings{10.1145/582353.582393,
author = {Berg, John L.},
title = {Database Management Systems in 1990},
year = {1982},
isbn = {0897910737},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/582353.582393},
doi = {10.1145/582353.582393},
booktitle = {Proceedings of the 1982 ACM SIGMOD International Conference on Management of Data},
pages = {214},
numpages = {1},
location = {Orlando, Florida},
series = {SIGMOD '82}
}

@inproceedings{10.1145/3253399,
author = {Shoshani, A.},
title = {Session Details: Database Machines},
year = {1982},
isbn = {0897910737},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3253399},
doi = {10.1145/3253399},
booktitle = {Proceedings of the 1982 ACM SIGMOD International Conference on Management of Data},
numpages = {1},
location = {Orlando, Florida},
series = {SIGMOD '82}
}

@inproceedings{10.1145/582353.582395,
author = {Missikoff, M.},
title = {A Domain Based Internal Schema for Relational Database Machines},
year = {1982},
isbn = {0897910737},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/582353.582395},
doi = {10.1145/582353.582395},
abstract = {In this paper a method for relational database storage organization is presented.The method is based upon a disaggregation of the relations and a subsequent reaggregation to form the domains on which the relations are defined.A hierarchical organization of the domain is proposed in order to keep track of the relational entities (i.e. relations, tuples and attributes) that insist on the values present in the domains.Then we introduce an implementation technique, referred to as Data Pool, suitable to be processed by a database machine capable of "on the fly" track processing.Finally we present an analytic evaluation of the DP method and an example of database and query with performance comparison of the DP method with the most common flat file technique.The proposed method appears to be generally advantageous in storage occupancy; in data retrieval operations it is extremely effective when joins between permanent relations are performed. Good performances can be achieved with other relational operations using proper parallel architectures and, when temporary relations are involved, using special purpose devices.},
booktitle = {Proceedings of the 1982 ACM SIGMOD International Conference on Management of Data},
pages = {215–224},
numpages = {10},
location = {Orlando, Florida},
series = {SIGMOD '82}
}

@inproceedings{10.1145/582353.582396,
author = {Valduriez, Patrick},
title = {Semi-Join Algorithms for Multiprocessor Systems},
year = {1982},
isbn = {0897910737},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/582353.582396},
doi = {10.1145/582353.582396},
abstract = {Semi-join is a relational operator that decreases the cost of processing queries involving binary operations. This is accomplished by initially selecting the data relevant to answer the queries and thereby reducing the size of the operand relations. This paper presents and analyzes algorithms for computing semi-joins in a multiprocessor database machine. First, an architecture model of a multiprocessor system is described. The model incorporates 1-0, CPU and messages transmission cost parameters to enable the evaluation of these algorithms in terms of their execution costs. Then two equi-semi-join algorithms are presented and compared and one inequi-semi-join algorithm is proposed. The execution cost of these algorithms are generally lineary proportional to the size of the operand and result relations and inversely proportional to the number of processors. Then, the method by joining two relations and the method by joining their semi-joins are compared. Finally it is shown that the method using semi-joins is generally better.},
booktitle = {Proceedings of the 1982 ACM SIGMOD International Conference on Management of Data},
pages = {225–233},
numpages = {9},
keywords = {semi-join, relational algebra, filtering, performance evaluation, join, database machine, multiprocessor system},
location = {Orlando, Florida},
series = {SIGMOD '82}
}

@inproceedings{10.1145/3253400,
author = {McLeod, D.},
title = {Session Details: Panel},
year = {1982},
isbn = {0897910737},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3253400},
doi = {10.1145/3253400},
booktitle = {Proceedings of the 1982 ACM SIGMOD International Conference on Management of Data},
numpages = {1},
location = {Orlando, Florida},
series = {SIGMOD '82}
}

@inproceedings{10.1145/582353.582398,
author = {McLeod, Dennis},
title = {Tools for Personal Information Management},
year = {1982},
isbn = {0897910737},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/582353.582398},
doi = {10.1145/582353.582398},
booktitle = {Proceedings of the 1982 ACM SIGMOD International Conference on Management of Data},
pages = {234},
numpages = {1},
location = {Orlando, Florida},
series = {SIGMOD '82}
}

@inproceedings{10.1145/3253401,
author = {Loomis, M.},
title = {Session Details: Query Optimization II},
year = {1982},
isbn = {0897910737},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3253401},
doi = {10.1145/3253401},
booktitle = {Proceedings of the 1982 ACM SIGMOD International Conference on Management of Data},
numpages = {1},
location = {Orlando, Florida},
series = {SIGMOD '82}
}

@inproceedings{10.1145/582353.582400,
author = {Finkelstein, Sheldon},
title = {Common Expression Analysis in Database Applications},
year = {1982},
isbn = {0897910737},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/582353.582400},
doi = {10.1145/582353.582400},
abstract = {Independent optimization of database requests overlooks potential savings which can be achieved when they are optimized collectively. An intuitive model for queries called the query graph supports common expression detection for optimization of a stream of requests. We describe how ad hoc query processing can be improved using intermediate results and answers produced from earlier queries, without significantly impacting processing costs when no common expressions are found. We have written a Pascal program, COMMON, which implements a variation of the algorithm which we describe.},
booktitle = {Proceedings of the 1982 ACM SIGMOD International Conference on Management of Data},
pages = {235–245},
numpages = {11},
location = {Orlando, Florida},
series = {SIGMOD '82}
}

@inproceedings{10.1145/582353.582401,
author = {Rosenthal, Arnon and Reiner, David},
title = {An Architecture for Query Optimization},
year = {1982},
isbn = {0897910737},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/582353.582401},
doi = {10.1145/582353.582401},
abstract = {We describe an optimizer for relational queries to databases stored as flat files and Codasyl networks. We include sophisticated manipulations on a broad range of direct access structures (DAS's). To achieve this with minimum additional code, we allow operations like sort, scan, and join to apply to DAS's, and categorize indexes and other DAS's in terms of the operations which can be performed on them. Our storage model, based on indivisible units of access and a small set of associated physical operators, provides a uniform interface to both relational and Codasyl storage mechanisms. The optimizer derives a sequence of internal data structures at successively more detailed levels. For a given query, a graph representing an overview of alternative joins is constructed, and then used to derive a physical graph which considers the physical attributes (location and sort order) of the data objects involved. Using cost predictions and other heuristics, the optimizer prunes the physical graph to produce a final access strategy tree. This layered approach and reliance on primitive operators make explicit (and permit changes to) the universe of possible strategies for the query at hand, and ease extension of the optimizer to new storage structures.},
booktitle = {Proceedings of the 1982 ACM SIGMOD International Conference on Management of Data},
pages = {246–255},
numpages = {10},
location = {Orlando, Florida},
series = {SIGMOD '82}
}

@inproceedings{10.1145/582353.582402,
author = {Jarke, Matthias and Schmidt, Joachim W.},
title = {Query Processing Strategies in the PASCAL/R Relational Database Management System},
year = {1982},
isbn = {0897910737},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/582353.582402},
doi = {10.1145/582353.582402},
abstract = {In the database language PASCAL/R, the programming language PASCAL and concepts based on the relational data model are integrated. The paper investigates transformation strategies used in the PASCAL/R system to evaluate queries with existential and universal quantifiers. Intermediate data structures are described using a high-level language tool called a reference to a selected variable. The predicate calculus approach used in PASCAL/R offers new insight into recently proposed query optimization techniques and allows some of them to be extended.},
booktitle = {Proceedings of the 1982 ACM SIGMOD International Conference on Management of Data},
pages = {256–264},
numpages = {9},
location = {Orlando, Florida},
series = {SIGMOD '82}
}

@inproceedings{10.1145/3253402,
author = {Manola, F.},
title = {Session Details: Document Processing and Transaction Modeling},
year = {1982},
isbn = {0897910737},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3253402},
doi = {10.1145/3253402},
booktitle = {Proceedings of the 1982 ACM SIGMOD International Conference on Management of Data},
numpages = {1},
location = {Orlando, Florida},
series = {SIGMOD '82}
}

@inproceedings{10.1145/582353.582404,
author = {Rolland, C. and Richard, C.},
title = {Transactions Modeling},
year = {1982},
isbn = {0897910737},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/582353.582404},
doi = {10.1145/582353.582404},
abstract = {We are concerned by data processing in both centralized and distributed environments. We claim that it is profitable and efficient to make the same effort to the design of the transactions system as we made to the design of the data system. To define such a system, we present in this paper two levels of transactions modeling. We discuss the impact of the proposed modeling upon concurrency and parallelism management.},
booktitle = {Proceedings of the 1982 ACM SIGMOD International Conference on Management of Data},
pages = {265–275},
numpages = {11},
location = {Orlando, Florida},
series = {SIGMOD '82}
}

@inproceedings{10.1145/582353.582405,
author = {Kowarski, I. and Lopez, M.},
title = {The Document Concept in a Data Base},
year = {1982},
isbn = {0897910737},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/582353.582405},
doi = {10.1145/582353.582405},
abstract = {This paper presents the data model and basic features of a data base management system including text as a data type family and document as a data base concept used to describe texts. A document is composed of a written text associated whith data needed in order to manipulate it within an organisation. Texts are described with a tree structure and parameters permitting to adapt them to a wide number of applications. Besides the usual facilities of DBMSs this system includes the production of formatted texts, mailing procedures and information retrieval based on keywords contained in the text. A prototype of the system has been developed as an extension of the DBMS SOCRATE on a Solar 16/65 minicomputer. A final goal of this research is the design and implementation of a generalized DBMS integrating concepts from classical data bases and office systems.This paper presents a research project accomplished in cooperation with the SEMS, ECA-Automation and DAP companies on one hand, and the IMAG laboratory on the other. It was financed by the SEMS contract no.511/81.1.1 and by the Agence de l'Informatique contract no.81/206.},
booktitle = {Proceedings of the 1982 ACM SIGMOD International Conference on Management of Data},
pages = {276–283},
numpages = {8},
location = {Orlando, Florida},
series = {SIGMOD '82}
}

@inproceedings{10.1145/582353.582406,
author = {Hazboun, K. A. and Bassiouni, M. A.},
title = {A Multi-Group Technique for Data Compression},
year = {1982},
isbn = {0897910737},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/582353.582406},
doi = {10.1145/582353.582406},
abstract = {An efficient compression technique that is particularly attractive for the storage of large commercial files and the transfer of such files within a distributed communication network is outlined. The technique, constructed as a two-level hierarchy of Huffman-type binary trees, is a reversible semantic-independent variable-length character encoding method that makes use of the group locality of character reference behavior and the variable frequency of occurrence of various characters within the different subgroupings of the character set. The compression efficiency and cost of the Multi-Group scheme has been found to be superior to the well-known Huffman encoding algorithm.},
booktitle = {Proceedings of the 1982 ACM SIGMOD International Conference on Management of Data},
pages = {284–292},
numpages = {9},
keywords = {compression efficiency, locality of character reference, data compression, failure node, binary trees, entropy, coding techniques, character distribution},
location = {Orlando, Florida},
series = {SIGMOD '82}
}

@inproceedings{10.1145/582353.582408,
author = {Kuss, Herbert},
title = {On Totally Ordering Checkpoints in Distributed Data Bases},
year = {1982},
isbn = {0897910737},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/582353.582408},
doi = {10.1145/582353.582408},
abstract = {Two-phase commit techniques to achieve atomicity of transactions in distributed database systems have been widely presented in the past. Less attention in comparison with this technique has been payed to the problem of "cold restart". To this problem we present a solution which has as its main properties:- low communication overhead and only partial cooperation between transaction managers during normal operation of the distributed system are required when making provisions to cope with cold restart,- a globally uniform total order of local checkpoints is continuously constructed and always present, thus speeding up situations of cold restart,- certain nodes of the network have an a priori chance to decide, whether they need to be restarted and in some cases may be relieved from parsing their logs during restart.This all together leads to a solution for the problem of cold restart which essentially differs from so far presented approaches.},
booktitle = {Proceedings of the 1982 ACM SIGMOD International Conference on Management of Data},
pages = {293–302},
numpages = {10},
location = {Orlando, Florida},
series = {SIGMOD '82}
}

