@inproceedings{10.1145/509252.509254,
author = {Morgan, Howard Lee and Codd, Edgar F. and Martin, William A. and Harris, Larry and Sagalowicz, Daniel and Kameny, Iris},
title = {Natural Language Interfaces},
year = {1978},
isbn = {9781450373425},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/509252.509254},
doi = {10.1145/509252.509254},
abstract = {The panel will focus on the different approaches to creating natural language interfaces to DBMS. Of particular interest is the manner in which database definition information, user feedback dialogues, storage of the lexicon and database path selection are handled. The panelists have all been involved in implementing such interfaces.},
booktitle = {Proceedings of the 1978 ACM SIGMOD International Conference on Management of Data},
pages = {1},
numpages = {1},
location = {Austin, Texas},
series = {SIGMOD '78}
}

@inproceedings{10.1145/3250384,
author = {Morgan, Howard},
title = {Session Details: Panel: Natural Language Interfaces},
year = {1978},
isbn = {9781450373425},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3250384},
doi = {10.1145/3250384},
booktitle = {Proceedings of the 1978 ACM SIGMOD International Conference on Management of Data},
numpages = {1},
location = {Austin, Texas},
series = {SIGMOD '78}
}

@inproceedings{10.1145/3250385,
author = {Stonebraker, Michael},
title = {Session Details: Session: Concurrency and Recovery},
year = {1978},
isbn = {9781450373425},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3250385},
doi = {10.1145/3250385},
booktitle = {Proceedings of the 1978 ACM SIGMOD International Conference on Management of Data},
numpages = {1},
location = {Austin, Texas},
series = {SIGMOD '78}
}

@inproceedings{10.1145/509252.509256,
author = {Menasce, Daniel A. and Popek, Gerald J. and Muntz, Richard R.},
title = {A Locking Protocol for Resource Coordination in Distributed Databases},
year = {1978},
isbn = {9781450373425},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/509252.509256},
doi = {10.1145/509252.509256},
booktitle = {Proceedings of the 1978 ACM SIGMOD International Conference on Management of Data},
pages = {2},
numpages = {1},
keywords = {concurrency, distributed databases, locking protocol, consistency, crash recovery},
location = {Austin, Texas},
series = {SIGMOD '78}
}

@inproceedings{10.1145/509252.509257,
author = {Rosenkrantz, Daniel J.},
title = {Dynamic Database Dumping},
year = {1978},
isbn = {9781450373425},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/509252.509257},
doi = {10.1145/509252.509257},
abstract = {Several methods are studied for dynamically creating a dump copy of a database while the database is on-line and being updated by user transactions. The methods can be characterized by whether the dump represents the database that existed at the beginning of the dump creation, at the end, or sometime in the middle. The methods are analyzed to understand the performance tradeoffs between alternate methods. The methods vary in the time required to create the dump and the amount of extra storage needed. A key parameter of a given system is shown to be the ratio of the rate at which database entities are copied into the dump to the rate at which database entities are updated. For certain methods to work, the ratio must exceed one. However, by combining two methods into a hybrid scheme, the ratio need only exceed one half.},
booktitle = {Proceedings of the 1978 ACM SIGMOD International Conference on Management of Data},
pages = {3–8},
numpages = {6},
keywords = {on-line dumping, consistency, recovery, database integrity, restart, dumping},
location = {Austin, Texas},
series = {SIGMOD '78}
}

@inproceedings{10.1145/509252.509258,
author = {Lien, Y. Edmund and Weinberger, Peter J.},
title = {Consistency, Concurrency, and Crash Recovery},
year = {1978},
isbn = {9781450373425},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/509252.509258},
doi = {10.1145/509252.509258},
abstract = {This paper presents a method for increasing concurrency in shared data bases. A data base is taken to be a collection of entities with structure, such as relations. Concurrency is increased in the sense that several readers and a single writer may access a set of entities. At the same time, either serializability or a slightly weaker form of consistency can be seen by all transactions. Each transaction is assumed to obtain all its resources when it starts. The method also allows for convenient recovery from crashes which do not affect the information on secondary storage.},
booktitle = {Proceedings of the 1978 ACM SIGMOD International Conference on Management of Data},
pages = {9–14},
numpages = {6},
location = {Austin, Texas},
series = {SIGMOD '78}
}

@inproceedings{10.1145/3250386,
author = {Winkler, Jerry},
title = {Session Details: Panel: Managing the Data Resource},
year = {1978},
isbn = {9781450373425},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3250386},
doi = {10.1145/3250386},
booktitle = {Proceedings of the 1978 ACM SIGMOD International Conference on Management of Data},
numpages = {1},
location = {Austin, Texas},
series = {SIGMOD '78}
}

@inproceedings{10.1145/509252.509260,
author = {Winkler, Jerry and Adams, Les and Kahn, Mike and Clark, Carl and Michels, Tom},
title = {Managing the Data Resource},
year = {1978},
isbn = {9781450373425},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/509252.509260},
doi = {10.1145/509252.509260},
abstract = {The purpose of this panel is to stimulate discussion about subjects related to managing an organization's data resource. The panel will answer questions about what the data resource is, who its managers are, what responsibilities the managers have, and which tools should be available to assist these managers. The panel members have been selected from a variety of occupational and organizational backgrounds in order to produce a variety of answers to the questions presented by the Panel Chairman.},
booktitle = {Proceedings of the 1978 ACM SIGMOD International Conference on Management of Data},
pages = {15–16},
numpages = {2},
location = {Austin, Texas},
series = {SIGMOD '78}
}

@inproceedings{10.1145/3250387,
author = {Smith, John Miles},
title = {Session Details: Session: Database Languages and Models},
year = {1978},
isbn = {9781450373425},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3250387},
doi = {10.1145/3250387},
booktitle = {Proceedings of the 1978 ACM SIGMOD International Conference on Management of Data},
numpages = {1},
location = {Austin, Texas},
series = {SIGMOD '78}
}

@inproceedings{10.1145/509252.509262,
author = {Mylopoulos, John and Bernstein, Philip A. and Wong, Harry K. T.},
title = {A Language Facility for Designing Interactive Database-Intensive Applications},
year = {1978},
isbn = {9781450373425},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/509252.509262},
doi = {10.1145/509252.509262},
abstract = {This paper describes TAXIS, a language for the design of Interactive Information Systems (e.g., credit card varification, student-course registration and airline reservations). TAXIS offers (relational) database management facilities, a means of specifying semantic integrity constraints and an exception-handling mechanism, integrated into a single language through the concepts of class, property and the ISA (generalization) relationship. The paper includes a description of the main constructs of TAXIS and illustrates their usefulness with examples.},
booktitle = {Proceedings of the 1978 ACM SIGMOD International Conference on Management of Data},
pages = {17},
numpages = {1},
keywords = {applications programming, relational data model, abstract data type, information system, semantic network},
location = {Austin, Texas},
series = {SIGMOD '78}
}

@inproceedings{10.1145/509252.509263,
author = {Lee, Ronald M. and Gerritsen, Rob},
title = {Extended Semantics for Generalization Hierarchies},
year = {1978},
isbn = {9781450373425},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/509252.509263},
doi = {10.1145/509252.509263},
abstract = {This paper examines the notion of a generalization abstraction proposed by Smith and Smith and considers the properties of a collection of generalizations as a unit called a 'generalization hierarchy'. Presented here is a more detailed representation which consists of a hybrid between a (graphical) network and a predicate calculus formalism.},
booktitle = {Proceedings of the 1978 ACM SIGMOD International Conference on Management of Data},
pages = {18–25},
numpages = {8},
keywords = {integrity constraints, generalization hierarchy, database semantics},
location = {Austin, Texas},
series = {SIGMOD '78}
}

@inproceedings{10.1145/509252.509264,
author = {Hammer, Michael and McLeod, Dennis},
title = {The Semantic Data Model: A Modelling Mechanism for Data Base Applications},
year = {1978},
isbn = {9781450373425},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/509252.509264},
doi = {10.1145/509252.509264},
abstract = {Conventional data models are not satisfactory for modelling data base application systems. The features that they provide are too low level and representational to allow the semantics of a data base to be directly expressed in the schema. The semantic data model (SDM) has been designed as a natural application modelling mechanism that can capture and express the structure of an application environment. The features of the SDM correspond to the principal intensional structures naturally occurring in contemporary data base applications. Furthermore, facilities for expressing derived (redundant) information are an essential part of the SDM; derived information is as prominent in an SDM schema as is primitive data. The SDM is designed to enhance the effectiveness and usability of computerized data bases. It can serve as a formal specification and documentation mechanism for a data base, can support a variety of powerful user interface facilities, and can be used as a tool in the data base design process.},
booktitle = {Proceedings of the 1978 ACM SIGMOD International Conference on Management of Data},
pages = {26–36},
numpages = {11},
keywords = {information redundancy, data definition, data semantics, data base management, logical data base design, data base user interfaces, data models, data base modelling},
location = {Austin, Texas},
series = {SIGMOD '78}
}

@inproceedings{10.1145/3250388,
author = {Berlin, Brett},
title = {Session Details: Panel: DBMS Selection and Evaluation: Perspectives and Practical Issues},
year = {1978},
isbn = {9781450373425},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3250388},
doi = {10.1145/3250388},
booktitle = {Proceedings of the 1978 ACM SIGMOD International Conference on Management of Data},
numpages = {1},
location = {Austin, Texas},
series = {SIGMOD '78}
}

@inproceedings{10.1145/509252.509266,
author = {Berlin, F. Brett and Deline, James R. and Phillips, J. Ron and Reynolds, Wanda A.},
title = {DBMS Selection and Evaluation: Perspectives and Practical Issues},
year = {1978},
isbn = {9781450373425},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/509252.509266},
doi = {10.1145/509252.509266},
abstract = {As management information systems become more and more "data centered", the software chosen to handle the data becomes more crucial to the system's overall successful operation. But how does a user procure a DBMS that is right for his or her needs? What are the questions that the user should be asking the vendor, and how should the vendor answers be evaluated? These are the central issues to be considered by this panel session. In this session, therefore, panel members will consider the DBMS user's problems in selecting DBMS software. Based upon personal experience and insight in this area, each panel member will seek to identify the central issues which must be considered in the DBMS selection process, including such problems as benchmarking and other pre-selection testing, general selection criteria, cost evaluation, transportability, security, conversion, and reliability. After presenting some of the basic issues, the panel will come to some conclusions as to how managers in industry and government can approach their own DBMS procurements.},
booktitle = {Proceedings of the 1978 ACM SIGMOD International Conference on Management of Data},
pages = {37–38},
numpages = {2},
location = {Austin, Texas},
series = {SIGMOD '78}
}

@inproceedings{10.1145/3250389,
author = {Bernstein, Philip A.},
title = {Session Details: Session: Formal Topics},
year = {1978},
isbn = {9781450373425},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3250389},
doi = {10.1145/3250389},
booktitle = {Proceedings of the 1978 ACM SIGMOD International Conference on Management of Data},
numpages = {1},
location = {Austin, Texas},
series = {SIGMOD '78}
}

@inproceedings{10.1145/509252.509268,
author = {Aho, A. V. and Sagiv, Y. and Ullman, J. D.},
title = {Efficient Optimization of a Class of Relational Expressions},
year = {1978},
isbn = {9781450373425},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/509252.509268},
doi = {10.1145/509252.509268},
abstract = {Many useful database queries can be formulated in terms of expressions whose operands are relations and whose operators are the relational operations select, project, and join. This paper investigates the computational complexity of optimizing relational expressions of this form under a variety of cost measures. A matrix, called a tableau, is proposed as a conventient representative for the value of an expression. Functional dependencies can be used to imply additional equivalences among tableaux. The optimization problem is shown to be NP-complete, but we can give a polynomial time algorithm to optimize tableaux that correspond to an important subclass of expressions.},
booktitle = {Proceedings of the 1978 ACM SIGMOD International Conference on Management of Data},
pages = {39},
numpages = {1},
location = {Austin, Texas},
series = {SIGMOD '78}
}

@inproceedings{10.1145/509252.509269,
author = {Nicolas, J. M.},
title = {First Order Logic Formalization for Functional, Multivalued and Mutual Dependencies},
year = {1978},
isbn = {9781450373425},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/509252.509269},
doi = {10.1145/509252.509269},
abstract = {The purpose of this paper is to show that first order logic is adequate for formalizing functional, multivalued and mutual dependencies in relational data bases. Advantages of using logic instead of tailored formal systems are presented. This paper is decomposed into four sections. The first one presents some notions of logic and theorem proving which are relevant to this study. In the second section, a way to analyze data bases in terms of logic is briefly indicated. The third section deals with the expression of dependency statements as formulas of logic. Lastly section 4 is concerned with some properties of dependency statements which follow directly from the proposed formalization.},
booktitle = {Proceedings of the 1978 ACM SIGMOD International Conference on Management of Data},
pages = {40–46},
numpages = {7},
keywords = {multivalued dependencies, relational data base, logic and data bases, mutual dependencies, functional dependencies},
location = {Austin, Texas},
series = {SIGMOD '78}
}

@inproceedings{10.1145/3250390,
author = {Hoffer, Jeffrey A.},
title = {Session Details: Session: File and Access Structures},
year = {1978},
isbn = {9781450373425},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3250390},
doi = {10.1145/3250390},
booktitle = {Proceedings of the 1978 ACM SIGMOD International Conference on Management of Data},
numpages = {1},
location = {Austin, Texas},
series = {SIGMOD '78}
}

@inproceedings{10.1145/509252.509271,
author = {Yamamoto, Sumiyasu and Tazawa, Shinsei and Ushio, Kazuhiko and Ikeda, Hideto},
title = {Design of a Generalized Balanced Multiple-Valued File Organization Scheme of Order Two},
year = {1978},
isbn = {9781450373425},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/509252.509271},
doi = {10.1145/509252.509271},
abstract = {A file organization scheme in an information storage and retrieval system which will be called a generalized Hiroshima University balanced multiple-valued file organization scheme of order two (GHUBMFS2) is presented, where the information about the records is indexed by m attributes having n values. The number of buckets to be organized and the redundancy of the file are the same as those of an inverted file. The number of pointer fields to be attached to the accession number stored in a bucket is reduced to a minimum in this scheme. It can answer for all second order as well as first order queries by the access to one bucket and the traversal of its contents without any set operations.},
booktitle = {Proceedings of the 1978 ACM SIGMOD International Conference on Management of Data},
pages = {47–51},
numpages = {5},
keywords = {multiple-valued records, directory file, multilist structure, information storage and retrieval, bucket, file organization, redundancy},
location = {Austin, Texas},
series = {SIGMOD '78}
}

@inproceedings{10.1145/509252.509272,
author = {March, Salvatore T. and Severance, Dennis G.},
title = {A Mathematical Modeling Approach to the Automatic Selection of Database Designs},
year = {1978},
isbn = {9781450373425},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/509252.509272},
doi = {10.1145/509252.509272},
abstract = {This paper provides an overview of a methodology developed to support systems analysts in the process of database design. The design approach is built upon an analytic model composed of (1) parametric descriptions for components of a generalized database organization, (2) costing equations which can evaluate a proposed modular database design, (3) an analyst interface which accepts an arbitrary database organization for evaluation, and (4) search procedures which automatically generate and compare thousands of alternative designs. Performance is measured as the sum of storage, retrieval, and maintenance costs and is estimated from parameters of the proposed design, the problem description and the storage environment. A virtual, record-frame view of secondary storage has been developed in which data records are added, deleted and modified with minimal effect on existing data structures. Application of the modeling approach to a realistic design problem is described, and modeling accuracy to within four percent is claimed.},
booktitle = {Proceedings of the 1978 ACM SIGMOD International Conference on Management of Data},
pages = {52–65},
numpages = {14},
keywords = {access path selection, analytic modeling, data management, database design system, record segmentation, virtual secondary storage},
location = {Austin, Texas},
series = {SIGMOD '78}
}

@inproceedings{10.1145/509252.509273,
author = {Yao, S. Bing and DeJong, David},
title = {Evaluation of Database Access Paths},
year = {1978},
isbn = {9781450373425},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/509252.509273},
doi = {10.1145/509252.509273},
abstract = {An evaluation system which estimates the performance of database access paths is presented. The system is based on a generalized model of access paths and is applicable to most access paths for searching a database system. The study brings to light many subtle but important parameters which can have a significant effect on the performance of the access paths, and which, then, must be taken into consideration in the selection of such paths.},
booktitle = {Proceedings of the 1978 ACM SIGMOD International Conference on Management of Data},
pages = {66–77},
numpages = {12},
location = {Austin, Texas},
series = {SIGMOD '78}
}

@inproceedings{10.1145/509252.509274,
author = {Cook, Thomas J.},
title = {A Dynamic Address Computation Mechanism for Use in Database Management},
year = {1978},
isbn = {9781450373425},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/509252.509274},
doi = {10.1145/509252.509274},
abstract = {A dynamic address computation mechanism for use in database management is presented. The address computation technique allows information structured according to a given pre-defined tree to be stored without any address pointers, yet the populated tree is assumed to have an arbitrary number of branches below non-terminating tree nodes, and have arbitrary length information stored at the tree leaves. The address computation is accomplished using a compact (yet complete) address-free description of the populated tree structure. Utilization of this description allows information at any level of the tree to be directly accessed. The address computation provides the basis for an "intermediate" database architecture which embodies many of the advantages of both associative architectures and classical Von Neumann architectures.},
booktitle = {Proceedings of the 1978 ACM SIGMOD International Conference on Management of Data},
pages = {78–87},
numpages = {10},
keywords = {trees, segmented-page storage, computer architecture, database management systems, address computation},
location = {Austin, Texas},
series = {SIGMOD '78}
}

@inproceedings{10.1145/3250391,
author = {Olle, T. William},
title = {Session Details: Panel: The Conceptual Schema Controversy},
year = {1978},
isbn = {9781450373425},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3250391},
doi = {10.1145/3250391},
booktitle = {Proceedings of the 1978 ACM SIGMOD International Conference on Management of Data},
numpages = {1},
location = {Austin, Texas},
series = {SIGMOD '78}
}

@inproceedings{10.1145/509252.509276,
author = {Olle, T. William and Daya, Manilal and Falkenberg, Eckhard and Yormark, Beatrice and Taylor, Robert W.},
title = {The Conceptual Schema Controversy},
year = {1978},
isbn = {9781450373425},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/509252.509276},
doi = {10.1145/509252.509276},
booktitle = {Proceedings of the 1978 ACM SIGMOD International Conference on Management of Data},
pages = {88},
numpages = {1},
location = {Austin, Texas},
series = {SIGMOD '78}
}

@inproceedings{10.1145/3250392,
author = {Housel, Barry},
title = {Session Details: Session: Practical Issues},
year = {1978},
isbn = {9781450373425},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3250392},
doi = {10.1145/3250392},
booktitle = {Proceedings of the 1978 ACM SIGMOD International Conference on Management of Data},
numpages = {1},
location = {Austin, Texas},
series = {SIGMOD '78}
}

@inproceedings{10.1145/509252.509278,
author = {Malkin, Judith G. and Anderson, Bruce F.},
title = {A Case Management System: Three Views of an Application},
year = {1978},
isbn = {9781450373425},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/509252.509278},
doi = {10.1145/509252.509278},
abstract = {A system was designed to manage the case files for a social service organization. The system was implemented as a SYSTEM 2000 data base. The goal was to centralize the case files in machine readable form while restricting their usage and form as little as possible.This paper provides three views of the application: the user's perspective, a descriptive model, and the implementation.},
booktitle = {Proceedings of the 1978 ACM SIGMOD International Conference on Management of Data},
pages = {89–100},
numpages = {12},
keywords = {data base design, implementation, case management system, file management application},
location = {Austin, Texas},
series = {SIGMOD '78}
}

@inproceedings{10.1145/509252.509279,
author = {de Blasis, Jean-Paul and Johnson, Thomas H.},
title = {Review of Data Base Administrators Functions from a Survey},
year = {1978},
isbn = {9781450373425},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/509252.509279},
doi = {10.1145/509252.509279},
abstract = {This paper reports some results from a survey of about thirty practicing data base administrators (DBA) in U.S. organizations of warying sizes and commitment to data base technology. From these observations some trends and evolutions of the data base administrator position are outlined. First, basic definitions and organizational considerations are set forth. The functions, interfaces and responsabilities of the DBA are discussed along with the DBMS tools available to carry out their tasks as recommended by various committees including CODASYL, GUIDE/SHARE, etc.Next, results of a survey of organizations staffed with data base administrators are presented. The survey stresses how the various recommendations regarding DBA implementation are reflected in reality and analyzes a number of significant parameters characterizing the DBA teams surveyed. An attempt to rationalize the aspirations and the actual status of the DBA is carried out. Finally, some trends in the evolution of the data base administration function are outlined from the survey results and from projections provided by the DBAs themselves. In light of these observations, some current recommendations are reviewed and others are proposed, especially with respect to the data administrator and data base administrator responsabilities.},
booktitle = {Proceedings of the 1978 ACM SIGMOD International Conference on Management of Data},
pages = {101–109},
numpages = {9},
keywords = {data base systems implementation, DBA survey results-DBA functions and evolution, data base administration},
location = {Austin, Texas},
series = {SIGMOD '78}
}

@inproceedings{10.1145/509252.509280,
author = {Clark, Jon D. and Hoffer, Jeffrey A.},
title = {A Procedure for the Determination of Attribute Access Probabilities},
year = {1978},
isbn = {9781450373425},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/509252.509280},
doi = {10.1145/509252.509280},
abstract = {Various procedures have been developed to select efficient storage structures; all of these procedures, however, require certain statistics to describe the use of attributes by problem programs. A very practical problem faced by anyone attempting to use any of these selection techniques is the determination of values for the attribute use statistics. This paper reports on one method which has been empirically tested for determination of attribute access probabilities. Central to this method is recognition of five kinds of statistic collection biases which are systematically considered by the proposed method but which do confound collection by previously developed methods. Finally, experimental results are reported which indicate specific comparative advantages of the proposed method over ones used by the DP staff of a medium-sized manufacturer.},
booktitle = {Proceedings of the 1978 ACM SIGMOD International Conference on Management of Data},
pages = {110–117},
numpages = {8},
keywords = {storage structure design, attribute usage statistics, attribute access probabilities},
location = {Austin, Texas},
series = {SIGMOD '78}
}

@inproceedings{10.1145/3250393,
author = {Berg, John},
title = {Session Details: Panel: The Practitioner's Viewpoint},
year = {1978},
isbn = {9781450373425},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3250393},
doi = {10.1145/3250393},
booktitle = {Proceedings of the 1978 ACM SIGMOD International Conference on Management of Data},
numpages = {1},
location = {Austin, Texas},
series = {SIGMOD '78}
}

@inproceedings{10.1145/509252.509282,
author = {Berg, John L. and Weythman, Jim and Golden, John and Lyon, John and Winkler, Jerry},
title = {The Practitioner's Viewpoint},
year = {1978},
isbn = {9781450373425},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/509252.509282},
doi = {10.1145/509252.509282},
abstract = {Database systems exist to serve. Like computers, database technology provides a fascinating subject for study. Much innovation has been made and more will be made. But, what objective test will finally say which innovation contributed and which will become curiosities on the shelf? This panel will provide a forum for the tool users to remind the tool builders about the important considerations in database technology if that technology is to serve -- and thus survive.},
booktitle = {Proceedings of the 1978 ACM SIGMOD International Conference on Management of Data},
pages = {118–119},
numpages = {2},
location = {Austin, Texas},
series = {SIGMOD '78}
}

@inproceedings{10.1145/3250394,
author = {Shoshani, Ari},
title = {Session Details: Session: Database and Program Conversion},
year = {1978},
isbn = {9781450373425},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3250394},
doi = {10.1145/3250394},
booktitle = {Proceedings of the 1978 ACM SIGMOD International Conference on Management of Data},
numpages = {1},
location = {Austin, Texas},
series = {SIGMOD '78}
}

@inproceedings{10.1145/509252.509284,
author = {Nations, John and Su, Stanley Y. W.},
title = {Some DML Instruction Sequences for Application Program Analysis and Conversion},
year = {1978},
isbn = {9781450373425},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/509252.509284},
doi = {10.1145/509252.509284},
abstract = {A set of basic instruction sequences (DBTG's DML and COBOL statements) useful for the implementation of a generalized application program conversion system to account for various types of database changes is presented. It is used to form language templates which are DML's realization of a set of data-model and schema independent access patterns useful for describing the semantics of application programs.These basic instruction sequences are also useful for enforcing a standardized programming practice for developing application programs which would yield to automatic program conversion to account for database changes. In this paper, the methodology for program conversion is reviewed and the use of the basic instruction sequences for program analysis and synthesis is explained and illustrated.},
booktitle = {Proceedings of the 1978 ACM SIGMOD International Conference on Management of Data},
pages = {120–131},
numpages = {12},
keywords = {data manipulation language, database conversion, database management, program analysis and synthesis, application program conversion, schema change},
location = {Austin, Texas},
series = {SIGMOD '78}
}

@inproceedings{10.1145/509252.509285,
author = {Swartwout, Donald and Fry, James P.},
title = {Towards the Support of Integrated Views of Multiple Databases: An Aggregate Schema Facility},
year = {1978},
isbn = {9781450373425},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/509252.509285},
doi = {10.1145/509252.509285},
abstract = {Supporting multiple user views of databases is currently an important problem area in database management system development. An interesting facet of this problem arises whenever a user needs an integrated view of several distinct databases. Using traditional database concepts, an aggregate schema facility has been developed to address this problem. The basic functions of an aggregate schema facility are discussed, as well as their implementation in a CODASYL/DBTG-like environment. Interest in an aggregate schema facility grew out of a problem in restructuring large databases. The application of this facility to restructuring is discussed, as well as potential applications to dynamic translation and distributed databases.},
booktitle = {Proceedings of the 1978 ACM SIGMOD International Conference on Management of Data},
pages = {132–143},
numpages = {12},
keywords = {distributed databases, data definition languages, database management systems, data translation, dynamic translation, database restructuring, aggregate schema, database integration},
location = {Austin, Texas},
series = {SIGMOD '78}
}

@inproceedings{10.1145/509252.509286,
author = {Navathe, Shamkant B. and Schkolnick, Mario},
title = {View Representation in Logical Database Design},
year = {1978},
isbn = {9781450373425},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/509252.509286},
doi = {10.1145/509252.509286},
abstract = {The process of logical database design consists of four phases: view modeling, view integration, schema optimization and schema mapping. View modeling is defined as the modeling of the usage and information structure perspectives of the real world from the point of view of different users and/or applications. The view integration phase combines these views into a single community view which is subjected to further optimization and mapping. As a result, instances of users' model may be altered and application programs transformed.This paper proposes a scheme for view representation which will facilitate the process of view integration. This is done by enhancing the data abstraction framework proposed by Smith and Smith. It takes into account the instance-level interrelationships among data and the identification of instances via these interrelationships. The usage perspective is incorporated as rules and assertions about schema- and instance-level insertion and deletion.The problem of view integration is briefly addressed. Valid transformations of views are indicated as a part of the integration process.},
booktitle = {Proceedings of the 1978 ACM SIGMOD International Conference on Management of Data},
pages = {144–156},
numpages = {13},
location = {Austin, Texas},
series = {SIGMOD '78}
}

@inproceedings{10.1145/3250395,
author = {Su, Stanley Y. W.},
title = {Session Details: Panel: Database Machines},
year = {1978},
isbn = {9781450373425},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3250395},
doi = {10.1145/3250395},
booktitle = {Proceedings of the 1978 ACM SIGMOD International Conference on Management of Data},
numpages = {1},
location = {Austin, Texas},
series = {SIGMOD '78}
}

@inproceedings{10.1145/509252.509288,
author = {Su, Stanley Y. W. and Berra, P. Bruce and Fisher, Paul and Chang, Hsu and Schuster, Stuart and Copeland, George},
title = {Database Machines},
year = {1978},
isbn = {9781450373425},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/509252.509288},
doi = {10.1145/509252.509288},
abstract = {There is much to be said on the limitations of the conventional Von Neumann processors and the available hardware organizations for database applications. Through research and development, several recent efforts have been in the investigation and development of new architectures and special prupose machines for supporting database applications. This panel aims to familiarize the attendants with 1) the motivations for works on data machines, 2) the objectives and characteristics of several categories of database machines, 3) the accomplishments made in this area of research and development, 4) the problems and current issues confronting the area, and 5) the impact of the current and future technologies on database management.},
booktitle = {Proceedings of the 1978 ACM SIGMOD International Conference on Management of Data},
pages = {157–158},
numpages = {2},
location = {Austin, Texas},
series = {SIGMOD '78}
}

@inproceedings{10.1145/3250396,
author = {Yormark, Bea},
title = {Session Details: Session: Query Processing},
year = {1978},
isbn = {9781450373425},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3250396},
doi = {10.1145/3250396},
booktitle = {Proceedings of the 1978 ACM SIGMOD International Conference on Management of Data},
numpages = {1},
location = {Austin, Texas},
series = {SIGMOD '78}
}

@inproceedings{10.1145/509252.509290,
author = {Hammer, Michael and Sarin, Sunil K.},
title = {Efficient Monitoring of Database Assertions},
year = {1978},
isbn = {9781450373425},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/509252.509290},
doi = {10.1145/509252.509290},
abstract = {A principal impediment to the use of declarative assertions for monitoring the state of a dynamic database is the high cost of conventional implementation techniques for such a facility. This paper presents a means of efficiently detecting violations of assertions caused by updates to a database. Our technique is based on the premise that the structure of updates to a database can generally be anticipated, and that an analysis of the potential effect that an update may have on an assertion can enable the assertion to be efficiently tested when the update is performed.This analysis is performed by a compile-time assertion processor; for each type of update operation defined on the database, the assertion processor synthesizes a procedure that will be used to evaluate a set of given assertions whenever an operation of the given type is performed on the database. For each assertion and operation, the assertion processor performs a detailed logical analysis, called perturbation analysis, of the effect that the operation may have on the assertion. Perturbation analysis identifies conditions that can be efficiently tested at run-time (when an operation of the given type is performed) and that minimize the extent to which the assertion must be fully reevaluated; the identified conditions also enable the assertion to be tested before the update is actually performed, thereby avoiding the need for expensive back-out procedures in the case that the assertion is found to be violated. Based on this analysis, the assertion processor generates a set of alternative efficient means of determining whether or not execution of the operation causes the assertion to be violated. A database transaction processor, which estimates the performance cost of each of the alternatives in the context of the physical representation and access methods of the database, can then be used to identify the least expensive means of testing the assertion.This work has been done in the particular context of semantic integrity assertions, but it readily extends to related problems of database monitoring. The efficiency of testing that can be achieved through the use of our assertion processing technique in comparable with that attainable through the use of hand-coded procedures. The technique therefore supports all the advantages of the declarative approach to database assertion-monitoring, while retaining the level of efficiency that is usually associated with procedural methods.},
booktitle = {Proceedings of the 1978 ACM SIGMOD International Conference on Management of Data},
pages = {159},
numpages = {1},
location = {Austin, Texas},
series = {SIGMOD '78}
}

@inproceedings{10.1145/509252.509291,
author = {Griffeth, N. D.},
title = {Nonprocedural Query Processing for Databases with Access Paths},
year = {1978},
isbn = {9781450373425},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/509252.509291},
doi = {10.1145/509252.509291},
abstract = {The use of "rules of inference" in database systems with access paths--e.g., CODASYL and IMS databases--is proposed to allow nonprocedural querying of the database systems. The kinds of access paths for which these rules of inference are required are isolated. It is shown that the rules of inference required for a CODASYL or an IMS database depend on the configurations of the edges in a diagram of the database.},
booktitle = {Proceedings of the 1978 ACM SIGMOD International Conference on Management of Data},
pages = {160–168},
numpages = {9},
keywords = {logical view of data, relational model, network model, data independence, nonprocedural query processing, data base task group},
location = {Austin, Texas},
series = {SIGMOD '78}
}

@inproceedings{10.1145/509252.509292,
author = {Epstein, Robert and Stonebraker, Michael and Wong, Eugene},
title = {Distributed Query Processing in a Relational Data Base System},
year = {1978},
isbn = {9781450373425},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/509252.509292},
doi = {10.1145/509252.509292},
abstract = {In this paper we present a new algorithm for retrieving and updating data from a distributed relational data base. Within such a data base, any number of relations can be distributed over any number of sites. Moreover, a user supplied distribution criteria can optionally be used to specify what site a tuple belongs to.The algorithm is an efficient way to process any query by "breaking" the qualification into separate "pieces" using a few simple heuristics. The cost criteria considered are minimum response time and minimum communications traffic. In addition, the algorithm can optimize separately for two models of a communication network representing respectively ARPANET and ETHERNET like networks. This algorithm is being implemented as part of the INGRES data base system.},
booktitle = {Proceedings of the 1978 ACM SIGMOD International Conference on Management of Data},
pages = {169–180},
numpages = {12},
keywords = {distribution criteria, relational model, distributed databases, distributed decomposition, communication networks},
location = {Austin, Texas},
series = {SIGMOD '78}
}

